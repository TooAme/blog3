<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人博客系统开发记录</title>
      <link href="/2025/08/27/project-blog-system/"/>
      <url>/2025/08/27/project-blog-system/</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客系统开发记录"><a href="#个人博客系统开发记录" class="headerlink" title="个人博客系统开发记录"></a>个人博客系统开发记录</h1><h2 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h2><p>决定搭建一个个人博客来记录学习和生活，选择了Hexo作为静态博客生成器。</p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="博客框架：Hexo"><a href="#博客框架：Hexo" class="headerlink" title="博客框架：Hexo"></a>博客框架：Hexo</h3><ul><li>基于Node.js</li><li>支持Markdown</li><li>丰富的主题和插件</li></ul><h3 id="主题：Wixo"><a href="#主题：Wixo" class="headerlink" title="主题：Wixo"></a>主题：Wixo</h3><ul><li>简洁的设计</li><li>支持分类和标签</li><li>响应式布局</li></ul><h3 id="部署：GitHub-Pages"><a href="#部署：GitHub-Pages" class="headerlink" title="部署：GitHub Pages"></a>部署：GitHub Pages</h3><ul><li>免费托管</li><li>自动部署</li><li>支持自定义域名</li></ul><h2 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h2><h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="2-主题配置"><a href="#2-主题配置" class="headerlink" title="2. 主题配置"></a>2. 主题配置</h3><p>下载并配置Wixo主题，修改配置文件以适应个人需求。</p><h3 id="3-功能扩展"><a href="#3-功能扩展" class="headerlink" title="3. 功能扩展"></a>3. 功能扩展</h3><ul><li>添加音乐播放器</li><li>优化分类系统</li><li>自定义样式</li></ul><h3 id="4-内容管理"><a href="#4-内容管理" class="headerlink" title="4. 内容管理"></a>4. 内容管理</h3><p>建立了完整的分类体系：</p><ul><li>编程学习</li><li>技术分享</li><li>读书笔记</li><li>生活记录</li><li>项目记录</li><li>日常随笔</li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="1-分类显示问题"><a href="#1-分类显示问题" class="headerlink" title="1. 分类显示问题"></a>1. 分类显示问题</h3><p><strong>问题</strong>：所有文章都显示在”疯川箱子”文件夹中<br><strong>解决</strong>：为每篇文章添加合适的categories字段</p><h3 id="2-音乐播放器样式"><a href="#2-音乐播放器样式" class="headerlink" title="2. 音乐播放器样式"></a>2. 音乐播放器样式</h3><p><strong>问题</strong>：播放按钮与现有UI不协调<br><strong>解决</strong>：调整按钮大小和颜色，使其与整体风格一致</p><h2 id="下一步计划"><a href="#下一步计划" class="headerlink" title="下一步计划"></a>下一步计划</h2><ul><li><input disabled="" type="checkbox"> 添加评论系统</li><li><input disabled="" type="checkbox"> 集成搜索功能</li><li><input disabled="" type="checkbox"> 优化移动端体验</li><li><input disabled="" type="checkbox"> 添加访问统计</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过这个项目，不仅搭建了自己的博客平台，还学习了很多前端技术。继续完善功能，让博客成为更好的知识管理工具。</p>]]></content>
      
      
      <categories>
          
          <category> 项目记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目开发 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客系统 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>京都春日游记</title>
      <link href="/2025/08/27/travel-kyoto-2025/"/>
      <url>/2025/08/27/travel-kyoto-2025/</url>
      
        <content type="html"><![CDATA[<h1 id="京都春日游记"><a href="#京都春日游记" class="headerlink" title="京都春日游记"></a>京都春日游记</h1><h2 id="行程概览"><a href="#行程概览" class="headerlink" title="行程概览"></a>行程概览</h2><p>这次京都之行总共3天2夜，主要游览了以下景点：</p><ul><li>清水寺</li><li>金阁寺</li><li>伏见稻荷大社</li><li>哲学之道</li><li>祇园</li></ul><h2 id="第一天：清水寺与祇园"><a href="#第一天：清水寺与祇园" class="headerlink" title="第一天：清水寺与祇园"></a>第一天：清水寺与祇园</h2><h3 id="清水寺"><a href="#清水寺" class="headerlink" title="清水寺"></a>清水寺</h3><p>早上8点到达清水寺，避开了人流高峰。春天的清水寺被樱花包围，景色美不胜收。</p><p><strong>推荐拍照点：</strong></p><ul><li>清水舞台</li><li>三重塔</li><li>音羽瀑布</li></ul><h3 id="祇园"><a href="#祇园" class="headerlink" title="祇园"></a>祇园</h3><p>下午在祇园漫步，运气很好遇到了几位艺伎。祇园的石板路和传统建筑让人仿佛穿越到了古代。</p><h2 id="第二天：金阁寺与哲学之道"><a href="#第二天：金阁寺与哲学之道" class="headerlink" title="第二天：金阁寺与哲学之道"></a>第二天：金阁寺与哲学之道</h2><h3 id="金阁寺"><a href="#金阁寺" class="headerlink" title="金阁寺"></a>金阁寺</h3><p>金阁寺的金色在阳光下闪闪发光，倒映在湖水中的景象令人难忘。</p><h3 id="哲学之道"><a href="#哲学之道" class="headerlink" title="哲学之道"></a>哲学之道</h3><p>沿着哲学之道慢慢走，两旁的樱花飘落，非常浪漫。</p><h2 id="第三天：伏见稻荷大社"><a href="#第三天：伏见稻荷大社" class="headerlink" title="第三天：伏见稻荷大社"></a>第三天：伏见稻荷大社</h2><p>千本鸟居是必打卡的景点，红色的鸟居延绵不绝，非常壮观。</p><h2 id="美食推荐"><a href="#美食推荐" class="headerlink" title="美食推荐"></a>美食推荐</h2><ul><li><strong>怀石料理</strong>：菊乃井</li><li><strong>拉面</strong>：一兰拉面</li><li><strong>抹茶甜品</strong>：茶寮都路里</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>京都是一个值得多次造访的城市，每次都能发现新的美好。期待下次再来！</p>]]></content>
      
      
      <categories>
          
          <category> 旅行摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 京都 </tag>
            
            <tag> 日本 </tag>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《代码整洁之道》读书笔记</title>
      <link href="/2025/08/27/reading-notes-clean-code/"/>
      <url>/2025/08/27/reading-notes-clean-code/</url>
      
        <content type="html"><![CDATA[<h1 id="《代码整洁之道》读书笔记"><a href="#《代码整洁之道》读书笔记" class="headerlink" title="《代码整洁之道》读书笔记"></a>《代码整洁之道》读书笔记</h1><h2 id="第一章：整洁代码"><a href="#第一章：整洁代码" class="headerlink" title="第一章：整洁代码"></a>第一章：整洁代码</h2><h3 id="什么是整洁代码？"><a href="#什么是整洁代码？" class="headerlink" title="什么是整洁代码？"></a>什么是整洁代码？</h3><blockquote><p>“整洁的代码简单直接。整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。” —— Grady Booch</p></blockquote><h3 id="核心原则"><a href="#核心原则" class="headerlink" title="核心原则"></a>核心原则</h3><ol><li><p><strong>可读性第一</strong></p><ul><li>代码是写给人看的，不是写给机器看的</li><li>好的命名胜过注释</li></ul></li><li><p><strong>单一职责原则</strong></p><ul><li>每个函数只做一件事</li><li>每个类只有一个改变的理由</li></ul></li><li><p><strong>DRY原则</strong></p><ul><li>Don’t Repeat Yourself</li><li>避免重复代码</li></ul></li></ol><h2 id="第二章：有意义的命名"><a href="#第二章：有意义的命名" class="headerlink" title="第二章：有意义的命名"></a>第二章：有意义的命名</h2><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ul><li>使用有意义的名称</li><li>避免误导性名称</li><li>做有意义的区分</li><li>使用可搜索的名称</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不好的命名</span></span><br><span class="line"><span class="keyword">let</span> d; <span class="comment">// 经过的时间，以天为单位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 好的命名</span></span><br><span class="line"><span class="keyword">let</span> elapsedTimeInDays;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这本书强调了代码质量的重要性，提醒我们要时刻保持代码的整洁和可读性。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 编程思想 </tag>
            
            <tag> 代码质量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的世界</title>
      <link href="/2025/08/15/gamerecord0827/"/>
      <url>/2025/08/15/gamerecord0827/</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>这是什么？</p><p>:walking:咕咕嘎嘎</p><p><del>你好</del></p><p>‘ 说话 ‘</p><p><strong>我是谁</strong></p><p><em>你不好</em></p><blockquote><p>你玩</p><p>好的</p></blockquote><details>  <summary>点击展开</summary>  隐藏内容</details>- [x] 完成任务- [ ] 待办任务<table><thead><tr><th align="left">左对齐</th><th align="center">居中对齐</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><table><thead><tr><th align="left">ddd</th><th>dd</th><th>d</th><th></th></tr></thead><tbody><tr><td align="left"></td><td></td><td></td><td></td></tr></tbody></table><div id="doc-tpgcqff2k"      data-doc-viewer="true"     data-file-url="https://www.kdocs.cn/l/cgjWHPkxwjz6"     data-file-type="xlsx"     data-width="100%"     data-height="600px"     data-title="ormon株式会社试验确认书模板"></div><ul><li><p><input checked="" disabled="" type="checkbox"> Write the press release</p></li><li><p><input disabled="" type="checkbox"> Update the website</p></li><li><p><input disabled="" type="checkbox"> Contact the media</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 游戏记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】从零到 JLPT 近满分，我是如何自学日语的</title>
      <link href="/2025/08/15/%E3%80%90%E5%AF%B9%E6%97%A5%E5%BC%80%E5%8F%91%E3%80%91%E4%BB%8E%E9%9B%B6%E5%88%B0%20JLPT%20%E8%BF%91%E6%BB%A1%E5%88%86%EF%BC%8C%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E8%87%AA%E5%AD%A6%E6%97%A5%E8%AF%AD%E7%9A%84/"/>
      <url>/2025/08/15/%E3%80%90%E5%AF%B9%E6%97%A5%E5%BC%80%E5%8F%91%E3%80%91%E4%BB%8E%E9%9B%B6%E5%88%B0%20JLPT%20%E8%BF%91%E6%BB%A1%E5%88%86%EF%BC%8C%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E8%87%AA%E5%AD%A6%E6%97%A5%E8%AF%AD%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="【对日开发】从零到-JLPT-近满分，我是如何自学日语的"><a href="#【对日开发】从零到-JLPT-近满分，我是如何自学日语的" class="headerlink" title="【对日开发】从零到 JLPT 近满分，我是如何自学日语的"></a>【对日开发】从零到 JLPT 近满分，我是如何自学日语的</h1><p><a href="https://linux.do/t/topic/897306">原话题</a></p><p>又是一个普通的工作日，我一如既往的坐在工位上。<br>想想我已经有连续好多天什么事情都没干了，今天还是没有新的任务。<br>主要还是对日开发太闲了，两个原因：</p><p>一是日本方开始项目前，需要准备一台全新的物理机器提供给我们这边，需要很长的准备时间；<br>二是日本的项目给的工时与工作量完全不符。举个例子，一个批量修改单选按钮双击取消的任务，给到了30天的一个时间，实际一天不到就能改完（可能还是太保守了，一个小时）</p><details id="post-cooked-html__details-897306-1-0" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>任务书</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/d/c/5/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6.png" data-download-href="https://linux.do/uploads/default/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6" title="image" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/d/c/5/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6_2_690x340.png" alt="image" data-base62-sha1="vrdRd7Abcx8FlEDpT5HNgESmhOS" width="690" height="340" srcset="https://linux.do/uploads/default/optimized/4X/d/c/5/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6_2_690x340.png, https://linux.do/uploads/default/original/4X/d/c/5/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6.png 1.5x, https://linux.do/uploads/default/original/4X/d/c/5/dc5731f58b5397c59ff23a80f4ad0e8fb9d87bc6.png 2x" data-dominant-color="F0F1F1" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(240, 241, 241); aspect-ratio: 690 / 340;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 666.029px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>然后是对修改内容的试验，不了解日本IT的佬们需要知道这是日本的一大特色，每个修改的地方都需要详细的试验，并撰写试验确认书，将做的修改详细地说明并给出截图或录屏说明。</p><p>这么做的目的是为了确保万无一失，很符合日本人吹毛求疵的性格。</p><p>然而每一个修改都必须做试验确认书，即使是同样方式的批量修改，比如上图中单选按钮双击取消的功能，一共99个按钮需要修改，那么就需要做99个试验确认书，包含文字说明与截图或视频证明。<br>这是一项特别无聊的工作，复制粘贴一样的文本，然后跳转到修改过的地方一个一个截图，放到excel中。随后上交给日本人检查。于是，撰写试验确认书的时间花费也就远比开发还要长了。有些时候挺佩服日本人的。<br>不过，加上撰写试验确认书的时间，也距离预估的工时还有很长的时间。这段时间我就会拿来学习日语、或者逛逛论坛。<br>可能在我看来对日开发是一件比较轻松悠闲的工作。正常来说，做项目时自己就相当于日本公司的员工（有点像劳务派遣），但也有一些公司会压榨员工，让员工同时做很多项目，也是常态。</p><p>日本的程序员对AI的使用率并没有国内那么高，技术也没有国内先进，并且有各种限制，比如 JAVA开发只能使用eclipse，这也符合日本人在其它人眼中守旧（说难听一点叫顽固）的刻板印象，不过这也确实降低了问题的发生率—以不相匹配的时间为代价。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>今天又是一个普通的工作日，但也是 JLPT（日本语能力测试）2025年7月份考试的出分日，我参加了N1等级的考试，今天上午查到了分数，还不错（满分是60+60+60&#x3D;180）。</p><details id="post-cooked-html__details-897306-1-1" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>展开</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/6/c/1/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507.jpeg" data-download-href="https://linux.do/uploads/default/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507" title="cdbdca68acb23638fce519996ef8af0c" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/6/c/1/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507_2_345x217.jpeg" alt="cdbdca68acb23638fce519996ef8af0c" data-base62-sha1="fpZlRnXzY75J98XYZ7i65aQW95Z" width="345" height="217" srcset="https://linux.do/uploads/default/optimized/4X/6/c/1/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507_2_345x217.jpeg, https://linux.do/uploads/default/optimized/4X/6/c/1/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507_2_517x325.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/6/c/1/6c10b3f0fc7563b6b1ed2d50bbedeb1588549507_2_690x434.jpeg 2x" data-dominant-color="E8EAEB" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(232, 234, 235); aspect-ratio: 345 / 217;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 345px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>接下来讲讲我是如何自学日语，以及程序员该如何学习日语。</p><p>我接触日语是在7年前，<strong>你的名字</strong>这部电影刚出后不久，对年轻人的影响也是挺大的，包括当时的我。之后我开始接触二次元，找一些动漫电影来看。看完<strong>秒速五厘米</strong>后，非常喜欢<em><strong>山崎將義-One more time,One more chance</strong></em>这首歌，于是我开始了学习日语的漫长旅途。</p><p>从五十音开始学起，在网上找到了一种很搞笑的记忆方法，刚刚去网上找了一下，居然还能找到：<a href="https://www.bilibili.com/opus/189247529056385001">一个超棒的五十音图记忆法!</a> 一个下午我就背完了五十音图（只是平假名）</p><p>学会五十音后，就算不明白意思，也能开始唱歌了。我开始在网络上找日语歌词，发现了一个台湾站长开设的网站，非常推荐：<a href="https://www.marumaru-x.com/japanese-song">jpmarumaru</a><br>站长持续十多年坚持在上面更新日语歌词，并且自己贴心地在汉字上方标注了假名，虽然中间因为服务器续费原因中断了半年，但网友的支持让他浴火重生。</p><details id="post-cooked-html__details-897306-1-2" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>jpmarumaru唱歌学日语</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/a/5/2/a523db8fd2b81fefb88b99c44c72711493959111.png" data-download-href="https://linux.do/uploads/default/a523db8fd2b81fefb88b99c44c72711493959111" title="image" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/original/4X/a/5/2/a523db8fd2b81fefb88b99c44c72711493959111.png" alt="image" data-base62-sha1="nyTBEvNpUncTd1DIwAXp9PovlEB" width="511" height="346" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; aspect-ratio: 511 / 346;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 510.99px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>我把这个网站的歌词复制到word里打印出来，通过对汉字标注读音加深了我对五十音的记忆，标注完后一次一次地唱出来，很快我就将五十音烂熟于心，也记住了一些汉字的意思和读音。现在看来，这种唱歌学日语的方式学习的质量是相当不错的。</p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><p>由于早期受到了一些二次元文化的影响，我也开始接触漫画和轻小说，那个时候看轻小说看的很迷糊，全是各种日本人才懂的梗，一个章节下来七八个译著那种的。让我稍微有点打退堂鼓。</p><p>但是轻小说的套路意外的符我口味，那个时段开始，我开始执着于轻小说阅读。</p><p>不过我很快意识到，只是看翻译后的小说无法学习日语。我开始寻找日语原文的小说对照着阅读，在科学上网不普及的年代，只能通过购买日文版实体书来阅读。我看的非常的艰难，每看一句都需要查一下翻译，并且还伴随着一个学生无法承担的海外进口原装书籍高额的价格。好在我也因此在这条路上扎下了根基。</p><details id="post-cooked-html__details-897306-1-3" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>日语原装书</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/b/0/c/b0c7fae3631ecde643ea27257fec7aa1a11a2d87.jpeg" data-download-href="https://linux.do/uploads/default/b0c7fae3631ecde643ea27257fec7aa1a11a2d87" title="image" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/b/0/c/b0c7fae3631ecde643ea27257fec7aa1a11a2d87_2_317x250.jpeg" alt="image" data-base62-sha1="pdSunIHS6yL9XCjOeRlvsT5hSyb" width="317" height="250" srcset="https://linux.do/uploads/default/optimized/4X/b/0/c/b0c7fae3631ecde643ea27257fec7aa1a11a2d87_2_317x250.jpeg, https://linux.do/uploads/default/optimized/4X/b/0/c/b0c7fae3631ecde643ea27257fec7aa1a11a2d87_2_475x375.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/b/0/c/b0c7fae3631ecde643ea27257fec7aa1a11a2d87_2_634x500.jpeg 2x" data-dominant-color="AEADA8" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(174, 173, 168); aspect-ratio: 317 / 250;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 316.992px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>如果你对轻小说和日语学习有兴趣，那么现在可太方便了，两步：从<a href="https://books.fishhawk.top/">轻小说机翻站</a>里下载你喜欢的小说（中日混合），然后放进能解析epub的阅读器里，这里推荐moji阅读App，虽然其它功能很烂，但是在实时阅读解析这方面，它做的还是不错的，可以直接在阅读的时候查看单个词语的解析，比以前方便了太多。</p><details id="post-cooked-html__details-897306-1-4" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>moji阅读的日语解析</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/e/5/b/e5b66706700ba1bf69dd88a73e507ba8327c1370.jpeg" data-download-href="https://linux.do/uploads/default/e5b66706700ba1bf69dd88a73e507ba8327c1370" title="81698ea16ab07bd44fee055cf2dfba6c" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/e/5/b/e5b66706700ba1bf69dd88a73e507ba8327c1370_2_251x500.jpeg" alt="81698ea16ab07bd44fee055cf2dfba6c" data-base62-sha1="wM88rpk5Cj4qDJEuye5iBGMsfxm" width="251" height="500" srcset="https://linux.do/uploads/default/optimized/4X/e/5/b/e5b66706700ba1bf69dd88a73e507ba8327c1370_2_251x500.jpeg, https://linux.do/uploads/default/optimized/4X/e/5/b/e5b66706700ba1bf69dd88a73e507ba8327c1370_2_376x750.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/e/5/b/e5b66706700ba1bf69dd88a73e507ba8327c1370_2_502x1000.jpeg 2x" data-dominant-color="302E2C" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(48, 46, 44); aspect-ratio: 251 / 500;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 250.99px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>如果你觉得moji不适合自己，也可以尝试一些AI的工具，像是站内<br><a href="https://linux.do/u/howen">@Howen</a> 佬制作的日语句子解析工具。</p><p>这之后，我总是会在难以入眠的夜晚阅读轻小说来放松心情。</p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><p>我在那时发现阅读日语文章对我来说是拓宽日语词汇量的最快方法，一年里，我的笔记本里已经记录了上万个不同的单词。当我听到日语的台词、声音时，我可以很快地理解它的意思，这可能也是受到了经常听快节奏日语歌曲的影响。不过在说和写的方面，我感受到了无力。</p><p>我又去了一次日本，虽然我说的话的意思对方能够明白，但总是结结巴巴，语法错误百出。<br>于是，为了能真正地和日本人进行语言交流，我开始在网络上寻找帮助。</p><p>运气很好，我联系上了之前在日本认识的一个在学习中文的女孩子，我从她那里学习到了很多当下的流行词，也不乏有一些脏话。我们每天都会发消息，这样持续了半年左右。后来她和男友分手，得了抑郁症，删除了自己的账号。之后我再也找不到她。</p><details id="post-cooked-html__details-897306-1-5" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>你无法再向此人发送私信</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/3/2/6/3269a931a925a4fbe2cd1691339beebfe4a1575f.jpeg" data-download-href="https://linux.do/uploads/default/3269a931a925a4fbe2cd1691339beebfe4a1575f" title="f396a8815a3a568b4e842fd7b22aa000" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/3/2/6/3269a931a925a4fbe2cd1691339beebfe4a1575f_2_249x499.jpeg" alt="f396a8815a3a568b4e842fd7b22aa000" data-base62-sha1="7bYfyN9yHgSJOyWCBjxBPv15Shx" width="249" height="499" srcset="https://linux.do/uploads/default/optimized/4X/3/2/6/3269a931a925a4fbe2cd1691339beebfe4a1575f_2_249x499.jpeg, https://linux.do/uploads/default/optimized/4X/3/2/6/3269a931a925a4fbe2cd1691339beebfe4a1575f_2_373x748.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/3/2/6/3269a931a925a4fbe2cd1691339beebfe4a1575f_2_498x998.jpeg 2x" data-dominant-color="172229" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(23, 34, 41); aspect-ratio: 249 / 499;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 248.997px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><br><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/6/c/6/6c6116f9704bbee6b0ab2345598967ab08814e01.jpeg" data-download-href="https://linux.do/uploads/default/6c6116f9704bbee6b0ab2345598967ab08814e01" title="23a7c12e04ed1a77341710d98818a5b4" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/6/c/6/6c6116f9704bbee6b0ab2345598967ab08814e01_2_112x500.jpeg" alt="23a7c12e04ed1a77341710d98818a5b4" data-base62-sha1="fsLzZVajaFu0p6EgCfATSRA9Mc1" width="112" height="500" srcset="https://linux.do/uploads/default/optimized/4X/6/c/6/6c6116f9704bbee6b0ab2345598967ab08814e01_2_112x500.jpeg, https://linux.do/uploads/default/optimized/4X/6/c/6/6c6116f9704bbee6b0ab2345598967ab08814e01_2_168x750.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/6/c/6/6c6116f9704bbee6b0ab2345598967ab08814e01_2_224x1000.jpeg 2x" data-dominant-color="0E0F0E" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(14, 15, 14); aspect-ratio: 112 / 500;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 111.992px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>后来，我开始经营媒体账号，将我的业余爱好推向日本，以此认识了很多志同道合的日本人，也接受了一些日本媒体的采访。</p><details id="post-cooked-html__details-897306-1-6" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>展开</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/b/d/0/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b.jpeg" data-download-href="https://linux.do/uploads/default/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b" title="74da413d4a38c931e63e97e24f688d0d" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/optimized/4X/b/d/0/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b_2_97x500.jpeg" alt="74da413d4a38c931e63e97e24f688d0d" data-base62-sha1="qYoNOQ5QniZAStwM4mxYkGrykn9" width="97" height="500" srcset="https://linux.do/uploads/default/optimized/4X/b/d/0/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b_2_97x500.jpeg, https://linux.do/uploads/default/optimized/4X/b/d/0/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b_2_145x750.jpeg 1.5x, https://linux.do/uploads/default/optimized/4X/b/d/0/bd0c65c5fef4925a09493a4429fbafb1dd3e0f4b_2_194x1000.jpeg 2x" data-dominant-color="1B2931" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(27, 41, 49); aspect-ratio: 97 / 500;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 96.9922px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><h2 id="-3"><a href="#-3" class="headerlink" title=""></a></h2><p><strong>没有日语环境就创造环境</strong> 为了练习口语，我还加入了日本人的dc群组，他们很喜欢在里面的语音频道里聊天，最开始我只是加入进去闭麦偷听，后来我也慢慢的可以抠掉按钮与他们对话了。各位佬友想必都是在游戏方面的高手，平时可以试试玩日服，加入一些游戏群组。这是最简单且能配合爱好的方法，一定不要怕。<br>在交流过程中遇到骑士怎么办？你能跨国追杀我不成，直接开喷，你不提原子弹就来聊聊核废水，大不了找下一个。</p><h2 id="-4"><a href="#-4" class="headerlink" title=""></a></h2><p><strong>单就业方面，为什么选择日语和日本</strong></p><details id="post-cooked-html__details-897306-1-7" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>展开</summary><p><strong style="font-weight: bolder;"></strong><br></p><aside class="quote no-group" data-username="TooAme" data-post="17" data-topic="857884" data-full="true" data-expanded="false" style="margin-top: 1em; margin-bottom: 1em;"><div class="title" style="display: flex; align-items: start; gap: 8px; color: rgb(100, 100, 100); padding: 0.8em 0.8em 0px; border-left: 5px solid rgb(211, 211, 211); background-color: rgba(34, 34, 34, 0.05); cursor: default; user-select: none;"></div><blockquote id="quote-id-857884-17-0" style="border-left: 5px solid rgb(211, 211, 211); background-color: rgba(34, 34, 34, 0.05); margin-left: 0px; margin-right: 0px; padding: 0.75em; margin-top: 0px;"><div class="post__contents-cooked-quote" style="margin-top: 0px !important; margin-bottom: 0px !important;"><p dir="auto" style="margin-top: 0px !important; margin-bottom: 0px !important;"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><strong style="font-weight: bolder;"></strong><br><br></p></div></blockquote></aside></details><h2 id="-5"><a href="#-5" class="headerlink" title=""></a></h2><p><strong>程序员如何学日语</strong><br>初学的话从五十音开始，跟着视频学一学N5-N4的内容，打下基础，就可以开始结合你的技术了。<br>对日开发中，邮件和电话是最多的联系方式。在项目开始时，日本方会发送项目的详细作成书或是修改内容说明，难免会存在需要讨论的模糊或是难以实现的需求，因此总是附有一个QA文档。</p><p><img src="https://linux.do/uploads/default/original/4X/5/e/d/5ed1488adcd2dfddc95712a67d2cb60d2af5cd22.png" alt="image"></p><details id="post-cooked-html__details-897306-1-8" dir="auto" style="display: block; outline: none; background-color: rgb(248, 248, 248); padding: 0.25rem 0.75rem; margin-bottom: 0.5rem; color: rgb(34, 34, 34); font-family: Inter, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="display: block; outline: none; cursor: pointer;"><span>&nbsp;</span>QA文档</summary><p></p><div class="lightbox-wrapper" style="display: inline-block; vertical-align: middle; outline: 0px;"><a class="lightbox" href="https://linux.do/uploads/default/original/4X/7/6/7/767204c9d446bfcd2c1f87b923161ce4d52e3006.png" data-download-href="https://linux.do/uploads/default/767204c9d446bfcd2c1f87b923161ce4d52e3006" title="image" style="background-color: rgba(0, 0, 0, 0); color: rgb(0, 136, 204); text-decoration: none; cursor: pointer; outline: 0px; overflow-wrap: break-word; position: relative; display: inline-block; overflow: hidden; transition: 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);"><img src="https://linux.do/uploads/default/original/4X/7/6/7/767204c9d446bfcd2c1f87b923161ce4d52e3006.png" alt="image" data-base62-sha1="gTOCMgTC69pzuD5i4k3SqDH55UW" width="690" height="247" data-dominant-color="F2F0ED" loading="lazy" style="border-style: none; vertical-align: middle; outline: 0px; object-fit: cover; object-position: center top; max-width: 100%; height: auto; display: inline-block; opacity: 0.6 !important; background-color: rgb(242, 240, 237); aspect-ratio: 690 / 247;"><div class="meta" style="outline: 0px; --meta-element-margin: 0.375em; position: absolute; bottom: 0px; width: 666.029px; color: rgb(255, 255, 255); background: none 0% 0% / auto repeat scroll padding-box border-box rgb(34, 34, 34); opacity: 0; transition: opacity 0.2s; display: flex; align-items: center;"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use href="#far-image"></use></svg><span class="filename" style="outline: 0px; margin: 6px 6px 6px 0px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"></span><span class="informations" style="outline: 0px; margin: 6px; padding-right: 20px; color: rgb(166, 166, 166); font-size: 16px; flex-shrink: 0; flex-grow: 3;"></span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use href="#discourse-expand"></use></svg></div></a></div><p></p></details><p>双方会通过交换这个文档，在内部填入问与答来解决这些需求相关的疑问，那么在这个过程中必然会用到IT相关的词语，如データベース（数据库），佬友们可以回忆一下自己在公司时时如何和同事沟通的：“xx，你做一个接口”<br>专业术语的使用频率是非常高的，所以一定都要掌握。试试将最熟悉的IDE、操作系统、手机的界面语言改成日语吧 。这会强迫你记住ファイル(文件)、編集(编辑)、実行(运行)等高频的技术词汇。</p><p>但是话又说回来了，现在是AI的时代，翻译已经不再是以前那样对专业术语一窍不通的程度了，而是能够结合语境进行翻译。基于此，佬友们可以把平时在公司里说的话记录一下，然后让AI翻译，看下AI是怎么表达的。同时，也要让它讲一讲句子里的语法。<br>熟悉了一定的技术词汇后，来到佬友们最喜欢的环节：逛论坛 <a href="https://qiita.com/">Qiita</a><br>日本论坛内容虽短，但精干。同样也可以在上面与日本技术人员沟通。<br>结识一个当地人，是了解一个地方的最真实、最快速的方式。<br>当你拥有能够随时探讨技术问题的日本朋友后，你已经半脚踏进日本IT业了。接下来继续强化你的语法表达和“说”的能力，多争取直接语言沟通的机会。<br>试着写你的第一篇日语Readme，然后在这个帖子里回复我如何？</p><h2 id="-6"><a href="#-6" class="headerlink" title=""></a></h2><p>年底我会到日本公司去给佬友们做实况，带大家看日本程序员的日常，后续也会更新一些日本IT业的冷知识，敬请期待。</p>]]></content>
      
      
      <categories>
          
          <category> 疯穿箱子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】中国技术者容易搞错的日语(NEC)</title>
      <link href="/2025/08/15/%E4%B8%AD%E5%9B%BD%E6%8A%80%E6%9C%AF%E8%80%85%E5%AE%B9%E6%98%93%E6%90%9E%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD(NEC)/"/>
      <url>/2025/08/15/%E4%B8%AD%E5%9B%BD%E6%8A%80%E6%9C%AF%E8%80%85%E5%AE%B9%E6%98%93%E6%90%9E%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD(NEC)/</url>
      
        <content type="html"><![CDATA[<h1 id="中国技术者容易搞错的日语-NEC"><a href="#中国技术者容易搞错的日语-NEC" class="headerlink" title="中国技术者容易搞错的日语(NEC)"></a>中国技术者容易搞错的日语(NEC)</h1><p>取扱注意（部外秘）でお願い致します。<br>目的：<br>　経験が浅い中国人ＳＥが日本人ＳＥの書いた設計書を理解し開発する場合に設計書内容で「理解できない用語」、「誤解しやすい用語」の一般的な文言をまとめ品質を上げることを目的とした資料です。<br>　内容的には未完成な部分もありますが、今後、当資料を更新しより良い資料として行く予定です。</p><h2 id="【内容】"><a href="#【内容】" class="headerlink" title="【内容】"></a>【内容】</h2><p>内容は中国人ＳＥが誤りやすいと思われる「比較条件」、「期間比較」、「論理条件」、「数値操作」、「設定値」、「こよみ・年月日関係」、「わかりにくい日本語」、「日本での常識としてプログラミング時に注意するもの」に区分して記述しています。<br>また、一般的に理解しづらいと言われている外来語、カタカナ語の用語一覧及び設計書で時々記述してあるＣＯ<br>ＢＯＬでの印刷・表示編集を参考までに記述しています。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】会议记录</title>
      <link href="/2025/08/15/%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/08/15/%E4%BC%9A%E8%AE%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="会议记录"><a href="#会议记录" class="headerlink" title="会议记录"></a>会议记录</h1><p>会议记录的作用是记录和备忘。需要将会议上的问题整理到问题管理表中进行跟踪管理。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～を用意する 准备～<br>前接体言、形式名词，表示做某事之前准备必要的东西。</p><p><a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%82%B9%E3%83%88%E7%92%B0%E5%A2%83">テスト環境</a>を用意する。 准备测试环境。<br>資料を<a href="http://dict.hjenglish.com/jp/w/%E7%94%A8%E6%84%8F">用意</a>する。 准备资料。</p><p>（2）～ので～ 因为～，所以～<br>ので是接续助词，前接活用词连体形，表示客观存在的原因和理由，起顺态接续作用。</p><p><a href="http://dict.hjenglish.com/jp/w/%E5%A4%89%E6%9B%B4">変更</a>があったので修正します。 因为有变更所以修改。<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%BC%E3%83%AB">メール</a>の調子が悪いので<a href="http://dict.hjenglish.com/jp/w/%E9%9B%BB%E8%A9%B1">電話</a>で連絡します。 因为邮件有问题所以用电话联系。</p><p>（3）～予定です（だ、である） 预定，预计<br>前接连体形，表示提前对以后要做的事情作出决定或计划。</p><p><a href="http://dict.hjenglish.com/jp/w/%E5%87%BA%E5%BC%B5">出張</a>する予定です。 预计出差。<br><a href="http://dict.hjenglish.com/jp/w/%E5%85%AC%E9%96%8B">公開</a>する予定です。 计划公布。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）先週の金曜日にWTを<a href="http://dict.hjenglish.com/jp/w/%E9%96%8B%E5%82%AC">開催</a>しました。出席<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%B3%E3%83%90%E3%83%BC">メンバー</a>はプロジェクトメンバー<a href="http://dict.hjenglish.com/jp/w/%E5%85%A8%E5%93%A1">全員</a>で、 内容としてはプロジェクト<a href="http://dict.hjenglish.com/jp/w/%E5%89%8D%E5%8D%8A">前半</a>のまとめとこれからの開発作業についての<a href="http://dict.hjenglish.com/jp/w/%E8%AD%B0%E8%AB%96">議論</a>でした。</p><p>上周五项目全体成员进行了WT（走查），内容为“项目前期总结及对今后开发工作的讨论”。</p><p>（2）プロジェクト<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC">リーダー</a>が作業<a href="http://dict.hjenglish.com/jp/w/%E3%81%BE%E3%81%A8%E3%82%81">まとめ</a>を行い、<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%BC%E3%83%89">コード</a>修正結果と<a href="http://dict.hjenglish.com/jp/w/%E4%BA%8B%E5%89%8D">事前</a>設計の不一致なところについて説明を行いました。</p><p>由项目负责人总结作业，对代码修正结果和事前设计不匹配的地方进行了说明。</p><p>（3）双方の努力で、 作業は基本的に終わり、明日<a href="http://dict.hjenglish.com/jp/w/%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%BB%E3%83%BC%E3%83%95">ソースセーフ</a>上のコードを<a href="http://dict.hjenglish.com/jp/w/%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0">パッケージング</a>して送付する予定です。</p><p>通过双方的努力，作业基本上结束了。计划明天封装Source Safe上的代码并发送过去。</p><p>（4）会议记录大致的形式：</p><p>会議<a href="http://dict.hjenglish.com/jp/w/%E8%AD%B0%E4%BA%8B%E9%8C%B2">議事録</a></p><p>会議時間：5月19日（月曜日） 9:00～10:00<br>出 席 者：田中さん、渡辺さん、張さん、李さん、陳さん<br>会議場所：東京事業所<br>会議内容：<br>1．……<br>2．……<br>3．……</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）5月中旬各開発部長が<a href="http://dict.hjenglish.com/jp/w/%E6%9D%A5%E6%97%A5">来日</a>する時は、各開発部の宣伝<a href="http://dict.hjenglish.com/jp/w/%E3%83%91%E3%83%AF%E3%83%BC%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88">パワーポイント</a>を用意しておく。</p><p>（2）5月26日張さんが東京<a href="http://dict.hjenglish.com/jp/w/%E8%A8%AA%E5%95%8F">訪問</a>予定ですので、それに合わせて5月<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8B%E6%97%AC">下旬</a>山下さんが上海を訪問するように<a href="http://dict.hjenglish.com/jp/w/%E6%89%8B%E9%85%8D">手配</a>したい。</p><p>（3）プロジェクト成功のためですので、問題点交流は<a href="http://dict.hjenglish.com/jp/w/%E6%81%A5%E3%81%9A%E3%81%8B%E3%81%97%E3%81%84&type=jc">恥ずかしくない</a>。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p>（1）5月中旬各开发部长访日时，请事先准备好各开发部的宣传PPT资料。 </p><p>（2）由于张先生预计在5月26日访问东京，所以与此相应想安排山下先生在5月下旬访问上海。</p><p>（3）我们的目的是为了项目的成功，所以不要羞于进行问题点的交流。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>すぐ行動。 马上行动。<br>响应号召，把握住机会，紧急行动起来～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】使用说明书</title>
      <link href="/2025/08/15/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
      <url>/2025/08/15/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="使用说明书"><a href="#使用说明书" class="headerlink" title="使用说明书"></a>使用说明书</h1><p>使用说明书的作用是描述产品或程序的操作顺序。书写日文的使用说明书一般应使用敬体、但有时也可使用简体。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～とおり　如～，像～那样<br>　　连体形、（体言+の）+とおりだ（である、です）<br>　　表示“按照～样子”去理解或进行某一事项。</p><p>　　仕様書の<a href="http://dict.hjenglish.com/jp/w/%E3%81%A8%E3%81%8A%E3%82%8A">とおり</a>です。　如式样书那样。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E4%BB%A5%E4%B8%8B">以下</a>のとおりです。　　如下。</p><p>（2）～とは～です（である）　所谓～是～<br>　　体言+とは（というのは）+です，用来下定义。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%A6%E3%82%A4%E3%83%B3%E3%83%89%E3%82%A6%E3%82%BA">ウインドウズ</a>とはOSのことです。　所谓Windows指操作系统。<br>　　仕様書とは作業や製品などの仕様を<a href="http://dict.hjenglish.com/jp/w/%E8%A8%98%E9%8C%B2">記録</a>した<a href="http://dict.hjenglish.com/jp/w/%E6%96%87%E6%9B%B8">文書</a>のことである。　所谓式样书是记录了作业、产品等式样的文档。</p><p>（3）～なければならない　必须～，应该～，要～<br>　　未然形+なければならない</p><p>　　今日<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9">リリース</a>しなければならない。　今天必须发行。<br>　　修正しなければならない。　　　　　必须修改。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）本システムとは、既にX会社に<a href="http://dict.hjenglish.com/jp/w/%E7%B4%8D%E5%85%A5">納入</a>しているAシステム（別のシステムである）と<a href="http://dict.hjenglish.com/jp/w/%E3%81%82%E3%82%89%E3%81%9F">あらた</a>に追加するWebサーバを使用して、インタネットを<a href="http://dict.hjenglish.com/jp/w/%E7%B5%8C%E7%94%B1">経由</a>した<a href="http://dict.hjenglish.com/jp/w/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6">ブラウザ</a>によって、データの<a href="http://dict.hjenglish.com/jp/w/%E5%8F%82%E7%85%A7">参照</a>、<a href="http://dict.hjenglish.com/jp/w/%E7%B7%A8%E9%9B%86">編集</a>できるシステムである。</p><p>　　本系统是使用已向X公司提交的A系统（另外一个系统）和新追加的Web服务器，通过网络，利用浏览器查看、编辑数据的系统。</p><p>（2）本システムの<a href="http://dict.hjenglish.com/jp/w/%E6%A9%9F%E8%83%BD">機能</a>は、以下の三つとおり。<br>　　＊機械構成　＊<a href="http://dict.hjenglish.com/jp/w/%E3%81%97%E3%82%81%E3%81%8D%E3%82%8A&type=jc">締切</a><a href="http://dict.hjenglish.com/jp/w/%E8%BF%BD%E8%B7%A1">追跡</a>　＊ダウンロード</p><p>　　本系统有以下三个功能。<br>　　＊机器构成　＊期限跟踪　＊下载</p><p>（3）ApacheServerを正常に<a href="http://dict.hjenglish.com/jp/w/%E7%A8%BC%E5%8B%95">稼動</a>させるため、<a href="http://dict.hjenglish.com/jp/w/%E9%85%8D%E7%BD%AE">配置</a>ファイルを編集しなければならない。</p><p>　　为了使ApacheServer正常工作，需要编辑配置文件。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）ここで言っている<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%90%E3%83%83%E3%82%B0">デバッグ</a>モードとは、システムをDebugのユーザで<a href="http://dict.hjenglish.com/jp/w/%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3">ログイン</a>することです。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E3%82%B0%E3%83%A9%E3%83%95">グラフ</a>の表示は以下のとおりで確認する。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3">アプリケーション</a>が使用できなくなった場合に、<a href="http://dict.hjenglish.com/jp/w/IIS&type=jc">インターネット インフォメーション サービス </a>(IIS) を再起動しなければならない。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）这里说的Debug模式是指，用Debug用户登录系统。</p><p>（2）确认图表的表示如下所示。</p><p>（3）当Application无法使用时，必须重新启动IIS。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E6%9C%9F%E5%BE%85">期待</a>に<a href="http://dict.hjenglish.com/jp/w/%E3%81%93%E3%81%9F%E3%81%88%E3%82%8B&type=jc">応えよう</a>。　回应对你的期待。</p><p>被人期待的感觉是很幸福的，但不要忘了回应一下别人对你的期待～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各项目启动方式</title>
      <link href="/2025/08/15/%E5%90%84%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/"/>
      <url>/2025/08/15/%E5%90%84%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>oa_assistant：node16, npm run serve, +frpc, jdk1.8</strong><br><strong>EHS：node16, yarn dev, jdk1.8</strong><br><strong>jhi: node22, npm start, jdk23</strong><br><strong>omron: jdk11, localhost:8081, 账号<a href="mailto:&#103;&#x61;&#x70;&#x2e;&#x74;&#x65;&#x73;&#116;&#48;&#49;&#x36;&#x40;&#103;&#x61;&#x70;&#100;&#x65;&#118;&#50;&#x2e;&#111;&#109;&#x72;&#111;&#x6e;&#x2e;&#99;&#111;&#x6d;">gap.test016@gapdev2.omron.com</a></strong><br><strong>EMARS: python3 dataAcquisition.py</strong></p>]]></content>
      
      
      <categories>
          
          <category> 项目记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备忘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】单体测试式样书（2）</title>
      <link href="/2025/08/15/%E5%8D%95%E4%BD%93%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E5%8D%95%E4%BD%93%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="单体测试式样书（2）"><a href="#单体测试式样书（2）" class="headerlink" title="单体测试式样书（2）"></a>单体测试式样书（2）</h1><p>除了走查，测试也是对程序进行验证的手段之一。测试式样书是对程序进行测试的设计结果，必须具备完备性和无冗余。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～ことを確認する 确认～<br>前接连体形。</p><p>問題がないことを<a href="http://dict.hjenglish.com/jp/w/%E7%A2%BA%E8%AA%8D">確認</a>する。 确认没有问题。<br>画面<a href="http://dict.hjenglish.com/jp/w/%E9%81%B7%E7%A7%BB&type=jc">遷移する</a>ことを確認する。 确认画面跳转。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p><a href="http://image.l.hjfile.cn/img/200805/200805148441637443.gif"><img src="http://image.l.hjfile.cn/img/200805/200805148441637443.gif" alt="按此在新窗口浏览图片"></a></p><p>上图中的新单词^^</p><p><a href="http://dict.hjenglish.com/jp/w/%E5%B1%A5%E6%AD%B4">履歴</a>「りれき」历史记录<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88">レイアウト</a>（layout）格式，布局、版面设计<br><a href="http://dict.hjenglish.com/jp/w/%E4%BB%A5%E9%99%8D">以降</a>「いこう」以后<br><a href="http://dict.hjenglish.com/jp/w/%E7%9B%AE%E8%A6%96%E7%A2%BA%E8%AA%8D">目視確認</a>「もくしかくにん」目视确认<br><a href="http://dict.hjenglish.com/jp/w/%E5%90%88%E5%90%A6">合否</a>「ごうひ」合格与否<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88">ログアウト</a>（log out）注销退出程序</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）0円を入力して<a href="http://dict.hjenglish.com/jp/w/%E3%82%A8%E3%83%B3%E3%82%BF%E3%83%BC%E3%82%AD%E3%83%BC">エンターキー</a>を<a href="http://dict.hjenglish.com/jp/w/%E6%8A%BC%E3%81%99">押す</a>と、警告メッセージが表示されることを確認します。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E3%82%BF%E3%83%96%E3%82%AD%E3%83%BC">タブキー</a>を<a href="http://dict.hjenglish.com/jp/w/%E6%8A%BC%E4%B8%8B&type=jc">押下する</a>ことにより、<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AB%E3%82%B9">フォーカス</a>がA→B→C→Dの順番に移動することを確認します。</p><p>（3）「入力日」の<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88">デフォルト</a>日付が<a href="http://dict.hjenglish.com/jp/w/%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E6%97%A5%E4%BB%98">システム日付</a>であることを確認します。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）输入“0日元”后按下回车键时，确认是否显示警告信息。</p><p>（2）按下Tab键后，确认光标是否按“A→B→C→D”的顺序移动。</p><p>（3）确认“输入日期”的默认日期是否为系统日期。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>何も言わないで。 一切尽在不言中。<br>相互信任的朋友之间是不需要任何语言的，也许一个眼神就已经能够表达许多。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】周报（1）</title>
      <link href="/2025/08/15/%E5%91%A8%E6%8A%A5%EF%BC%881%EF%BC%89/"/>
      <url>/2025/08/15/%E5%91%A8%E6%8A%A5%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="周报（1）"><a href="#周报（1）" class="headerlink" title="周报（1）"></a>周报（1）</h1><p>週間進捗報告書「しゅうかんしんちょくほうこくしょ」周报是对一周工作的总结以及对下周工作的预计。在周报中必须如实总结、汇报项目情况，包括问题点、需要哪些方面的支持等等。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～を　做～，把～<br>　　前接体言、形式名词，构成宾语句，表示动作的直接对象。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E5%AF%BE%E7%AD%96">対策</a>を<a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E8%A8%8E">検討</a>する。　　　探讨对策。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8D%E5%85%B7%E5%90%88">不具合</a>をチェックする。　检查BUG。<br>　　レビューを<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9F%E6%96%BD">実施</a>する。　　实施检查。</p><p>（2）～と～　～和～<br>　　前接体言，表示并列。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E5%90%88%E7%90%86%E6%80%A7">合理性</a>と<a href="http://dict.hjenglish.com/jp/w/%E5%AE%8C%E5%82%99%E6%80%A7">完備性</a>　　合理性和完整性<br>　　<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9A%E6%95%B0">定数</a>と<a href="http://dict.hjenglish.com/jp/w/%E5%A4%89%E6%95%B0">変数</a>　　　　常量和变量<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB">モジュール</a>と<a href="http://dict.hjenglish.com/jp/w/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9">インターフェース</a>　模块和接口</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E5%85%88%E9%80%B1">先週</a>は<a href="http://dict.hjenglish.com/jp/w/%E4%B8%BB%E3%81%AB">主に</a>仕様理解及びドキュメントと<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%BC%E3%83%89">コード</a>の<a href="http://dict.hjenglish.com/jp/w/%E7%BF%92%E5%BE%97">習得</a>作業でした。</p><p>　　上周主要是理解式样，并研究了文档和代码。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E4%BB%8A%E9%80%B1">今週</a>は○○機能の単体試験に<a href="http://dict.hjenglish.com/jp/w/%E7%9D%80%E6%89%8B">着手</a>する予定です。</p><p>　　本周准备着手开始○○功能的单体测试。</p><p>（3）開発<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%B3%E3%83%90%E3%83%BC">メンバー</a>の開発環境を構築し、サーバー環境も<a href="http://dict.hjenglish.com/jp/w/%E6%A7%8B%E7%AF%89">構築</a>しました。</p><p>　　构筑了开发人员的开发环境，也构筑了服务器环境。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）Aモジュールのプログラム設計書の<a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC">レビュー</a>を行い、合理性と完備性を<a href="http://dict.hjenglish.com/jp/w/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>しました。</p><p>（2）Bモジュールは<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0">コーディング</a>中です。</p><p>（3）今週中にテストに入る<a href="http://dict.hjenglish.com/jp/w/%E4%BA%88%E5%AE%9A">予定</a>です。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）审查了A模块的程序设计书，检查了其合理性及完整性。</p><p>（2）B模块正在编码中。</p><p>（3）本周之内预计开始测试。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>笑ってみよう。　笑一笑吧。</p><p>笑容是最有吸引力的表情，笑一笑自己心情开朗，也给他人带来愉悦的感觉。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】关于对日项目中的Q&amp;A</title>
      <link href="/2025/08/15/%E5%85%B3%E4%BA%8E%E5%AF%B9%E6%97%A5%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84Q&amp;A/"/>
      <url>/2025/08/15/%E5%85%B3%E4%BA%8E%E5%AF%B9%E6%97%A5%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84Q&amp;A/</url>
      
        <content type="html"><![CDATA[<h1 id="Q-A的模板"><a href="#Q-A的模板" class="headerlink" title="Q&amp;A的模板"></a>Q&amp;A的模板</h1><ol><li>希望日方对障害详细说明:<ul><li>日本語：Lｘｘで&#x2F;障害xx番目、「○○○」について、具体的に説明していただけませんか。</li><li>中国語：在第xx行&#x2F;障碍号xx，关于「○○○」，是否能具体说明一下呢。</li></ul></li><li>日方所提供的障害现象在本方的环境中无法再现：<ul><li>日本語：Lｘｘで&#x2F;障害xx番目、「○○○」について、こちらで障害再現できませんので、エビデンスをいただけませんか。</li><li>中国語：在第xx行&#x2F;障碍号xx，关于「○○○」，由于在我们这不能障碍再现，是否能提供一下证据物</li></ul></li><li>对于日方的指摘存在疑问，并有自己认为正确的观点：<ul><li>日本語：Lｘｘで&#x2F;障害xx番目、「○○○」を指摘されましたが、しかし、「△△△」によって、ＸＸＸのほう正しいと思います、ご確認お願いいたします。</li><li>中国語：在第xx行&#x2F;障碍号xx，「○○○」被指摘了，但是根据「△△△」，我认为ＸＸＸ是正确的，请确认。</li></ul></li><li>对式样书存在疑问（不知道到底应该做什么处理，写的不明确）<ul><li>日本語：○○○画面の△△△処理に、□□□するか□□□しないかどちらが正ですか。ご確認お願いいたします。</li><li>中国語：对于○○○画面的△△△処理，是做□□□正确的？还是不做□□□正确的？请确认。</li></ul></li><li>按照日方提示的内容做下去，出现error,因此需要确认<ul><li>日本語：□□□場合、△△△がエラーを発生しました。ご確認お願いいたします。</li><li>中国語：在□□□情况下，△△△出错。请确认。</li></ul></li><li>对于某个处理，是否应该做，不是很清楚<ul><li>日本語：○○○画面の△△△処理に対して、□□□するかどうかわかりませんが、ご説明していただけせんか。</li><li>中国語：对于○○○画面的△△△処理，是做□□□还是不做不是很清楚？能否说明一下。</li></ul></li><li>对于某个处理，不太认同式样书的做法，觉得应该是另一种做法<ul><li>日本語：△△△処理に対して、問題があります。□□□はずだと思います。ご確認お願いいたします。</li><li>中国語：对于△△△处理，有点问题。我认为应该是□□□。请确认。</li></ul></li><li>式样书明显前后矛盾<ul><li>日本語：△△△仕様書のＬ××で、「○○○」と記述されているが、しかし、Ｌ××で、「○○○」と記述されています。ご記述されている内容には矛盾があると思います。ご確認お願いいたします。</li><li>中国語：△△△式样书的××行，写着「○○○」的处理，但是，××行又写着「○○○」的处理，我觉得这个内容互相矛盾，请确认。</li></ul></li><li>式样书中的内容（或某个字段）找不到（这是个非常常见的问题）<ul><li>日本語：△△△仕様書のＬ××で、「○○○に”ＡＡ”をセットする」と記述されているが、しかし、ＤＢ定義書で、「○○○」というフィールドが存在しないようです。ご確認お願いいたします。</li><li>中国語：△△△式样书的××行，写着向○○○字段赋值“ＡＡ”，但是，参照DB式样书，好像不存在○○○字段，请确认。</li></ul></li></ol><hr><h1 id="Q-A的注意点"><a href="#Q-A的注意点" class="headerlink" title="Q&amp;A的注意点"></a>Q&amp;A的注意点</h1><ol><li><p>问候语：</p><p> 一般情况下，问候语可以省略，即使是用，也一般会抱着打扰和抱歉的语气去问或回答，所以在开头部分用得比较多的为：</p><ul><li>すみません　中文：不好意思&#x2F;打扰一下&#x2F;对不起（使用上面相对比较多）。</li><li>申し訳ございません　 中文：十分抱歉 （一般在我方对应上有出错的时候使用。）。</li></ul></li><li><p>声明问题</p></li></ol><p> 在提Q&amp;A的时候，首先要让对方知道，本Q&amp;A是关于哪个问题提问的。</p><ul><li><p>如果是有障碍文档过来的话：<br>  L○○○で、　　　　　 中文：在第○○○行。<br>  或是告诉对方障碍号:<br>  障害○○○番目 中文：第○○○障碍 。</p></li><li><p>如果是没有障碍文档过来的时候：<br>  可以告诉是关于哪个机能<br>  ○○○について　　　 中文：关于○○○。<br>  ○○○に対して　　　 中文：对于○○○。</p></li><li><p>正文部分：</p></li></ul><p> 除了正确地表达想提出的问题的同时，还需要注意的是尽量使用简洁的语言把问题说清楚，一般比较使用比较多的说法有：</p><ul><li><p>转折 ○○○と指摘されましたが、△△△  中文：○○○被指摘了，但是△△△ </p></li><li><p>○○○と指摘されました、しかし、△△△  中文：○○○被指摘了，但是△△△ </p></li><li><p>条件&#x2F;选择：</p></li><li><p>○○○するか○○○しないかどちらが正しいですか。  中文：是做○○○？还是不做○○○？哪个正确。</p></li><li><p>○○○かどうかわかりません。 　 中文：是○○○？还是怎么地？</p></li><li><p>○○○場合、△△△　 中文：如果是○○○的情况下，△△△。</p></li><li><p>陈述：</p></li><li><p>こちらの判断が○○○です。 中文：我方的判断是○○○。</p></li><li><p>こちらのやり方が○○○です。 中文：我方的做法是○○○。</p></li><li><p>こちらの処理が○○○です。 中文：我方的处理是○○○。</p></li><li><p>こちらの認識が○○○です。 中文：我方对这个问题的认识是○○○。</p></li><li><p>因果：</p></li><li><p>○○○から、△△△　　中文：因为○○○，所以△△△（主要表示主管原因）。</p></li><li><p>○○○ので、△△△　　中文：因为○○○，所以△△△（主要表示客观原因）。</p></li><li><p>结尾部分：</p></li></ul><p> 结尾部分，一般用以会说一些客套话如：</p><ul><li>ご確認お願いいたします。 中文：请确认。</li><li>教えていただけませんか。 中文：能否给我说一下。</li><li>ご説明お願いいたします。 中文：请说明一下。</li><li>○○○をいただけませんか。 中文：能否给我○○○。</li><li>加上自己的理解：</li></ul><p> 这一点很重要，很多人往往认为我看不懂就可以说わかりません、这个固然没错，但是也可能会给对方留下你这个人不能主动积极的思考问题的习惯。因此，原则上希望在QA中加上自己对这段看不懂的问题的理解。例如：</p><ul><li>△△△仕様書のＬ××で，「○○○」と記述されているが、内容が良くわかりませんので、ご確認お願いいたします。</li><li>こちらの理解：多分「○○○」であると思います、正しいかどうかご確認お願いいたします。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】容易用错的日语（1）</title>
      <link href="/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%881%EF%BC%89/"/>
      <url>/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="容易用错的日语（1）"><a href="#容易用错的日语（1）" class="headerlink" title="容易用错的日语（1）"></a>容易用错的日语（1）</h1><h2 id="1-「表示」と「意味」"><a href="#1-「表示」と「意味」" class="headerlink" title="1 「表示」と「意味」"></a><strong>1 「表示」と「意味」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E8%A1%A8%E7%A4%BA">表示</a>：显示、标出<br>　<a href="http://dict.hjenglish.com/jp/w/%E6%84%8F%E5%91%B3">意味</a>：意思、意义</p><p>例文：<br>　×　赤信号は止まれを表示する。　（误用）<br>　○　赤信号は止まれを意味する。　&#x2F; 红灯意味着停下。</p><p>　1）<a href="http://dict.hjenglish.com/jp/w/%E8%AD%A6%E5%91%8A">警告</a>が画面に表示される。　&#x2F; 警告将在画面上显示<br>　2）パスワードは常に<em>として表示される。　&#x2F; 密码通常显示成</em>号。<br>　3）辞書を引けば単語の意味が分かる。　&#x2F; 一查字典就明白单词的意思了。<br>　4）意味のない仕事。　&#x2F; 没有意义的工作。</p><h2 id="2-「該当」と「当該」"><a href="#2-「該当」と「当該」" class="headerlink" title="2 「該当」と「当該」"></a><strong>2 「該当」と「当該」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E8%A9%B2%E5%BD%93">該当</a>：符合、适合、相当<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%BD%93%E8%A9%B2">当該</a>：该、有关</p><p>例文：<br>　×　該当条件に当該するデータを画面に表示させる。　（误用）<br>　○　当該条件に該当するデータを画面に表示させる。　&#x2F; 将符合该条件的数据显示到画面中。</p><p>　1）それは<a href="http://dict.hjenglish.com/jp/w/%E5%A5%91%E7%B4%84">契約</a>の第5条に該当する。　&#x2F; 那条符合合同的第5条。<br>　2）該当者いない。　&#x2F; 没有符合条件的人。<br>　3）当該画面に「設定」ボタンを追加する。　&#x2F; 在该画面追加“设定”按钮。<br>　4）契約書の当該<a href="http://dict.hjenglish.com/jp/w/%E6%9D%A1%E9%A0%85">条項</a>は以下のとおりである。　&#x2F; 合同的有关条款如下。</p><h2 id="3-「項目」と「プロジェクト」"><a href="#3-「項目」と「プロジェクト」" class="headerlink" title="3 「項目」と「プロジェクト」"></a><strong>3 「項目」と「プロジェクト」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E9%A0%85%E7%9B%AE">項目</a>：项、条目<br>　<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88">プロジェクト</a>：（软件开发等）项目、工程</p><p>例文：<br>　×　項目を受注する。　（误用）<br>　○　プロジェクトを<a href="http://dict.hjenglish.com/jp/w/%E5%8F%97%E6%B3%A8">受注</a>する。　&#x2F; 接受项目开发的委托。</p><p>　1）問題をいくつかの項目に分ける。　&#x2F; 把问题分成几项。<br>　2）十項目の<a href="http://dict.hjenglish.com/jp/w/%E8%A6%81%E6%B1%82">要求</a>を出す。　&#x2F; 提出十项要求。<br>　3）このプロジェクトを<a href="http://dict.hjenglish.com/jp/w/%E7%B4%8D%E6%9C%9F">納期</a>は12月末です。　&#x2F; 这个项目的交货期是12月末。<br>　4）初めまして、プロジェクト<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC">リーダー</a>の王です。　&#x2F; 初次见面，我是项目负责人小王。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>选择合适的词填空^^</p><p>1）では、当該（　項目 &#x2F; プロジェクト　）の仕様について説明します。<br>2）2番目の（　項目 &#x2F; プロジェクト　）を削除する。<br>3）この場合に（　該当 &#x2F; 当該　）する<a href="http://dict.hjenglish.com/jp/w/%E8%A6%8F%E5%89%87">規則</a>はない。<br>4）（　該当 &#x2F; 当該　）<a href="http://dict.hjenglish.com/jp/w/%E9%96%A2%E6%95%B0">関数</a>の<a href="http://dict.hjenglish.com/jp/w/%E6%88%BB%E3%82%8A%E5%80%A4">戻り値</a>は0です。<br>5）あの言葉はなにを（　表示 &#x2F; 意味　）するのか？<br>6）<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%94%E3%83%BC%E3%83%A9%E3%82%A4%E3%83%88">コピーライト</a>が（　表示 &#x2F; 意味　）されている。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>1）では、当該（　プロジェクト　）の仕様について説明します。　&#x2F; 那么，我来说明一下这个项目的式样。<br>2）2番目の（　項目　）を削除する。　&#x2F; 删除第2项。<br>3）この場合に（　該当　）する規則はない。　&#x2F; 没有适合这种情况的规章。<br>4）（　当該　）関数の戻り値は0です。　&#x2F; 该函数的返回值为0。<br>5）あの言葉はなにを（　意味　）するのか？　&#x2F; 那句话是意味着什么呢？<br>6）コピーライトが（　表示　）されている。　&#x2F; 标有著作权。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】周报（2）</title>
      <link href="/2025/08/15/%E5%91%A8%E6%8A%A5%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E5%91%A8%E6%8A%A5%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="周报（2）"><a href="#周报（2）" class="headerlink" title="周报（2）"></a>周报（2）</h1><p>週間進捗報告書「しゅうかんしんちょくほうこくしょ」周报是对一周工作的总结以及对下周工作的预计。在周报中必须如实总结、汇报项目情况，包括问题点、需要哪些方面的支持等等。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～の～　～的～<br>　　接体言，表示领属、性质、同位或数量等关系。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E4%BA%88%E5%AE%9A">予定</a>の変更　　　　　　预定的变更<br>　　設計書の<a href="http://dict.hjenglish.com/jp/w/%E6%95%B4%E7%90%86">整理</a>　　　　　设计书的整理<br>　　テスト<a href="http://dict.hjenglish.com/jp/w/%E4%BB%95%E6%A7%98%E6%9B%B8">仕様書</a>の作成　　测试式样书的完成</p><p>（2）～を行う　进行～<br>　　多指按照一定的方式做某件事情或动作。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E7%B4%A2">検索</a>を行う。　　进行检索<br>　　開発を<a href="http://dict.hjenglish.com/jp/w/%E8%A1%8C%E3%81%86">行う</a>。　　进行开发</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>直接抓张图放上来吧～</p><p><a href="http://image.l.hjfile.cn/img/200804/200804239241553331.gif"><img src="http://image.l.hjfile.cn/img/200804/200804239241553331.gif" alt="按此在新窗口浏览图片"></a></p><p>其中几个新单词：<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC">リーダー</a>（leader）组长，负责人<br><a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%96%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC">サブリーダー</a>（sub leader）副组长<br><a href="http://dict.hjenglish.com/jp/w/%E5%AF%BE%E7%AD%96">対策</a>「たいさく」对策、应对的方法<br><a href="http://dict.hjenglish.com/jp/w/%E9%96%A2%E9%80%A3">関連</a>「かんれん」相关、有关联<br><a href="http://dict.hjenglish.com/jp/w/%E8%A6%81%E6%9C%9B">要望</a>「ようぼう」要求、迫切期望<br><a href="http://dict.hjenglish.com/jp/w/%E4%B8%8A%E9%95%B7">上長</a>「じょうちょう」上司，上级</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）新しい<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%B3%E3%83%90%E3%83%BC">メンバー</a>が追加されたので、製造方法と<a href="http://dict.hjenglish.com/jp/w/%E3%82%B9%E3%82%B1%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB">スケジュール</a>の<a href="http://dict.hjenglish.com/jp/w/%E8%A6%8B%E7%9B%B4%E3%81%99&type=jc">見直し</a>を行いました。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E6%AE%8B%E6%A5%AD">残業</a>することで<a href="http://dict.hjenglish.com/jp/w/%E9%81%85%E3%82%8C">遅れ</a>を<a href="http://dict.hjenglish.com/jp/w/%E6%8C%BD%E5%9B%9E">挽回</a>する。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E6%96%B0%E8%A6%8F">新規</a>画面の<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB">サンプル</a>を提供いただけますか。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）因为增加了新成员，所以我们调整了制作方法和日程安排，并重新分配了工作。</p><p>（2）通过加班挽回进度。</p><p>（3）请问可以提供新画面的样本吗？</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E7%9F%AD%E6%B0%97">短気</a>は<a href="http://dict.hjenglish.com/jp/w/%E6%90%8D%E6%B0%97">損気</a>。　急性子吃亏。</p><p>遇到问题不要着急，要冷静，再冷静。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】单体测试式样书（1）</title>
      <link href="/2025/08/15/%E5%8D%95%E4%BD%93%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6/"/>
      <url>/2025/08/15/%E5%8D%95%E4%BD%93%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="单体测试式样书（1）"><a href="#单体测试式样书（1）" class="headerlink" title="单体测试式样书（1）"></a>单体测试式样书（1）</h1><p>除了走查，测试也是对程序进行验证的手段之一。测试式样书是对程序进行测试的设计结果，必须具备完备性和无冗余。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～として（は）　以～，作为～<br>　　表示身份、立场等。</p><p>　　これを例として説明する。　　以此为例进行说明。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E5%A5%91%E7%B4%84%E6%9B%B8">契約書</a>上の<a href="http://dict.hjenglish.com/jp/w/%E7%84%A1%E5%84%9F">無償</a>保障期間を前提として対応する。　把合同书上的免费保修期间作为前提进行处理。</p><p>（2）～に～がある　在～，有～<br>　　体言、形式名词+に+体言、形式名词+がある<br>　　表示诸如花草、桌椅等本身不能活动的物体的存在。</p><p>　　仕様書に<a href="http://dict.hjenglish.com/jp/w/%E3%83%9F%E3%82%B9">ミス</a>があります。　式样书里有错误。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%83%BC">ディレクトリー</a>に<a href="http://dict.hjenglish.com/jp/w/%E9%9A%8E%E5%B1%A4">階層</a>がある。　目录分了层次。</p><p>（3）～てしまう　～了<br>　　前接动词连用形，表示某一行为、动作所造成的无可挽回德现象或结果。怀有难过、失望、惋惜等各种复杂的心情。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">ファイル</a>を削除してしまいました。　　　　　把文件删掉了。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF">ネットワーク</a>が<a href="http://dict.hjenglish.com/jp/w/%E5%88%87%E6%96%AD">切断</a>されてしまいました。　网络被切断了。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）金額が1万円以上の場合、当<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89">フィールド</a>の背景色が青に<a href="http://dict.hjenglish.com/jp/w/%E5%A4%89%E6%9B%B4">変更</a>されるかを確認します。</p><p>　　金额在1万日元以上时，确认该字段的背景色是否变成蓝色。</p><p>（2）間違った番号を入力した場合、<a href="http://dict.hjenglish.com/jp/w/%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8">エラーメッセージ</a>が正しく表示されるかをチェックします。</p><p>　　当输入错误的号码时，检查错误信息能否正确表示。</p><p>（3）「削除」ボタンを押下した場合、当部品の<a href="http://dict.hjenglish.com/jp/w/%E9%96%A2%E9%80%A3">関連</a>情報が削除されるかを確認してください。</p><p>　　按下“删除”按钮时，请确认是否删除了该组件的相关信息。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）「業務（正常·異常）」では、<a href="http://dict.hjenglish.com/jp/w/%E3%83%A6%E3%83%BC%E3%82%B6">ユーザ</a>と管理者の<a href="http://dict.hjenglish.com/jp/w/%E6%AD%A3%E5%B8%B8">正常</a>作業<a href="http://dict.hjenglish.com/jp/w/%E3%81%8A%E3%82%88%E3%81%B3">および</a>データ未入力など<a href="http://dict.hjenglish.com/jp/w/%E7%95%B0%E5%B8%B8">異常</a>な作業に関連するテストを行う。</p><p>（2）「複数クライアント」では、<a href="http://dict.hjenglish.com/jp/w/%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88">クライアント</a>が<a href="http://dict.hjenglish.com/jp/w/%E8%A4%87%E6%95%B0">複数</a>ある場合の<a href="http://dict.hjenglish.com/jp/w/%E6%8E%92%E4%BB%96%E5%87%A6%E7%90%86">排他処理</a>などの試験を行う。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E9%99%90%E7%95%8C%E8%A9%A6%E9%A8%93">限界試験</a>などは<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%A2">デモ</a>システムのため<a href="http://dict.hjenglish.com/jp/w/%E5%89%B2%E6%84%9B">割愛</a>する。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p>（1）“业务（正常&#x2F;异常）”是指用户和管理者正常操作以及未输入数据等异常操作情况下进行的测试。</p><p>（2）“多个客户端”是在有多个客户端的情况下，进行排他处理等测试。</p><p>（3）由于是演示系统，极限测试等可以不做。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E5%8F%8D%E7%9C%81">反省</a>してみる。　反省一下自己。<br>能够反省自己固然很重要，但更重要的是，反省之后应该采取什么措施。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】容易用错的日语（3）</title>
      <link href="/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%883%EF%BC%89/"/>
      <url>/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="容易用错的日语（3）"><a href="#容易用错的日语（3）" class="headerlink" title="容易用错的日语（3）"></a>容易用错的日语（3）</h1><h2 id="1-「検討」と「反省」"><a href="#1-「検討」と「反省」" class="headerlink" title="1 「検討」と「反省」"></a><strong>1 「検討」と「反省」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E8%A8%8E">検討</a>：讨论、探讨研究<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%8F%8D%E7%9C%81">反省</a>：反省、检查自己</p><p>例文：<br>　×　自分の誤りを検討する。　（误用）<br>　○　自分の<a href="http://dict.hjenglish.com/jp/w/%E8%AA%A4%E3%82%8A">誤り</a>を反省する。　&#x2F; 检讨自己的错误。</p><p>　1）その問題の<a href="http://dict.hjenglish.com/jp/w/%E5%AF%BE%E7%AD%96">対策</a>を検討している。　&#x2F; 正在讨论那个问题的对策。<br>　2）これは残件として<a href="http://dict.hjenglish.com/jp/w/%E3%81%AE%E3%81%A1%E3%81%BB%E3%81%A9&type=jc">後ほど</a>検討します。　&#x2F; 这作为保留事项日后再作讨论。<br>　3）深く反省する。　&#x2F; 深刻反省。<br>　4）自分のしたことをよく反省してください。　&#x2F; 好好反省反省自己做的事吧。</p><h2 id="2-「質問」と「問題」"><a href="#2-「質問」と「問題」" class="headerlink" title="2 「質問」と「問題」"></a><strong>2 「質問」と「問題」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E8%B3%AA%E5%95%8F">質問</a>：质询、询问、提问、问题<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%95%8F%E9%A1%8C">問題</a>：题、需要解决或处理的问题</p><p>例文：<br>　×　問題がある人は手をあげてください。　（误用）<br>　○　質問がある人は手をあげてください。　&#x2F; 有问题的请举手。</p><p>　1）この質問にお答えください。　&#x2F; 请回答这个问题。<br>　2）仕様についての説明はここまでですが、質問がありますか？　&#x2F; 方法式样讲解到此为止，有疑问吗？<br>　3）数学の問題を<a href="http://dict.hjenglish.com/jp/w/%E8%A7%A3%E3%81%8F">解く</a>のはおもしろい。　&#x2F; 解数学题很有意思。<br>　4）そのために<a href="http://dict.hjenglish.com/jp/w/%E3%81%8B%E3%81%88%E3%81%A3%E3%81%A6">かえって</a>問題が複雑になった。　&#x2F; 因此问题反而变得更复杂了。</p><h2 id="3-「理由」と「原因」"><a href="#3-「理由」と「原因」" class="headerlink" title="3 「理由」と「原因」"></a><strong>3 「理由」と「原因」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E7%90%86%E7%94%B1">理由</a>：理由、缘故、借口（主观理由）<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%8E%9F%E5%9B%A0">原因</a>：原因（客观原因）</p><p>例文：<br>　×　仕事をやめる原因はなんですか？　（误用）<br>　○　仕事をやめる理由はなんですか？　&#x2F; 辞职的理由是什么？<br>　×　バグの理由を調査してください。　（误用）<br>　○　バグの原因を調査してください。　&#x2F; 请调查错误原因。</p><p>　1）そんなことは理由にならない。　&#x2F; 那不能成为理由。<br>　2）<a href="http://dict.hjenglish.com/jp/w/%E9%81%85%E5%88%BB">遅刻</a>の理由を説明してください。　&#x2F; 请说明一下迟到的理由。<br>　3）失敗の原因が分からない。　&#x2F; 不清楚失败的原因。<br>　4）寝たばこが原因で<a href="http://dict.hjenglish.com/jp/w/%E7%81%AB%E4%BA%8B">火事</a>になった。　&#x2F; 因为在床上吸烟，所以引起失火。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>选择合适的词填空^^</p><p>1）<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8B%E6%9C%9F">下期</a>の予算案を（　検討 &#x2F; 反省　）する。<br>2）今頃（　検討 &#x2F; 反省　）してももう遅い。<br>3）すぐ対策をとらないと大きな（　問題&#x2F; 質問　）になる。<br>4）（　問題&#x2F; 質問　）は以上です。<br>5）事故の（　原因 &#x2F; 理由　）は運転者の不注意だった。<br>6）風邪を（　原因 &#x2F; 理由　）に<a href="http://dict.hjenglish.com/jp/w/%E6%AC%A0%E5%8B%A4">欠勤</a>した。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】スケジュール</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A01/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h1 id="スケジュール"><a href="#スケジュール" class="headerlink" title="スケジュール"></a>スケジュール</h1><p>スケジュール就是进度表，是对工作的计划。在项目执行的过程中，需要依据工程表对项目的进度进行跟踪和控制。工程表是进行项目管理的重要手段之一。工程表应包含任务的分配状况、完成期限、每人不同时期的负荷、进度状况等内容。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～へ～　“向”、“到”、“往”<br>　　体言、形式名词 + へ，表示行为动作的方向</p><p>　　テーブルへデータを<a href="http://dict.hjenglish.com/jp/w/%E6%A0%BC%E7%B4%8D">格納</a>する。　往表里保存数据。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E6%AC%84">テキスト欄</a>へ文字を入力する。　往文本框里输入文字。<br>　　画面へグラフを表示する。　　　在画面上显示图表。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）今回の<a href="http://dict.hjenglish.com/jp/w/%E9%96%8B%E7%99%BA">開発</a><a href="http://dict.hjenglish.com/jp/w/%E5%A7%94%E8%A8%97">委託</a>範囲としては、システム設計から、<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0">プログラム</a>設計、<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0">コーディング</a>、<a href="http://dict.hjenglish.com/jp/w/%E5%8D%98%E4%BD%93%E3%83%86%E3%82%B9%E3%83%88">単体テスト</a>、<a href="http://dict.hjenglish.com/jp/w/%E7%B5%90%E5%90%88%E3%83%86%E3%82%B9%E3%83%88">結合テスト</a>までですが、<a href="http://dict.hjenglish.com/jp/w/%E6%88%90%E6%9E%9C%E7%89%A9">成果物</a>としては、プログラム設計書と結合テスト成績書のみです。</p><p>　　这次的委托开发范围涵盖系统设计、程序设计、编码、单体测试、结合测试。需要提交的成果物为程序设计书和结合测试成绩书。</p><p>（2）システム設計の時、日本に<a href="http://dict.hjenglish.com/jp/w/%E5%87%BA%E5%BC%B5&type=jc">出張する</a>可能性があるのでしょうか。もし、あるとしてたら、<a href="http://dict.hjenglish.com/jp/w/%E3%81%AB%E3%82%93%E3%81%9A%E3%81%86&type=jc">人数</a>は何名で、<a href="http://dict.hjenglish.com/jp/w/%E6%9C%9F%E9%96%93">期間</a>はどうなりますか。</p><p>　　在系统设计期间有可能到日本出差吗？如果有，出差人数是多少，时间安排又是怎样的？</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>中日单词互译^^</p><p>進捗（　　）　納期（　　）　チェック（　　）　レビュー（　　）</p><p>源代码（　　）　编写代码（　　）　日程管理（　　）　向外部订货（　　）</p><p>翻译这个句子^^</p><p><a href="http://dict.hjenglish.com/jp/w/%E3%82%BF%E3%82%B9%E3%82%AF">タスク</a>ごとの備考欄には、各<a href="http://dict.hjenglish.com/jp/w/%E6%8B%85%E5%BD%93%E8%80%85">担当者</a>の名前を<a href="http://dict.hjenglish.com/jp/w/%E8%A8%98%E5%85%A5">記入</a>し、<a href="http://dict.hjenglish.com/jp/w/%E8%BF%94%E9%80%81">返送</a>してください。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E9%80%B2%E6%8D%97">進捗</a>（进展）　<a href="http://dict.hjenglish.com/jp/w/%E7%B4%8D%E6%9C%9F">納期</a>（交货期）　<a href="http://dict.hjenglish.com/jp/w/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>（check，检查）　<a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC">レビュー</a>（review，检查、评审、复审）</p><p>源代码（<a href="http://dict.hjenglish.com/jp/w/%E3%82%BD%E3%83%BC%E3%82%B9">ソース</a>，source）　编写代码（<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0">コーディング</a>，coding）　日程管理（<a href="http://dict.hjenglish.com/jp/w/%E6%97%A5%E7%A8%8B%E7%AE%A1%E7%90%86">日程管理</a>）　向外部订货（<a href="http://dict.hjenglish.com/jp/w/%E5%A4%96%E6%B3%A8">外注</a>）</p><p>请在各任务的备注栏中填入负责人的姓名后，返回给我。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>さて、次のこと。　那么，来做下一件事情。</p><p>一件一件地完成手里的工作，是不是很有成就感？这可是非常重要的。那么，下一件该做什么了呢？</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（1）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A03/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A03/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（1）"><a href="#仕様書（1）" class="headerlink" title="仕様書（1）"></a>仕様書（1）</h1><p>在实际工作中，一开始最常接触到的应该就是仕様書。不过仕様書的格式各日企都会有其固定写法和样式，我们就从一些基础的词汇和例句开始吧～</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～とする　以～为，设～为，把～作为<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3">バージョン</a>を1.0とする。　把版本号设为1.0。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%82%B9%E3%83%88">テスト</a>対象外とする。　作为非测试对象。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9">サービス</a>を提供可能とする。　可提供服务。</p><p>（2）～で～　在～（后接具“行为意义”的动词，如する、ひらく等）<br>　　WEBで<a href="http://dict.hjenglish.com/jp/w/%E7%A8%BC%E5%8B%95">稼動</a>している。　在WEB上运行。<br>　　テスト環境で<a href="http://dict.hjenglish.com/jp/w/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>する。　在测试环境下检查。<br>　　画面で表示する。　在画面上显示。</p><p>（3）～や～　～和～（列举一些事项并类推其他）<br>　　Web<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC">サーバー</a>はNetscapeやapacheを使用します。　Web服务器将使用Netscape、apache等。<br>　　秋葉原の店には<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E3%82%AB%E3%83%A1%E3%83%A9">デジタルカメラ</a>や<a href="http://dict.hjenglish.com/jp/w/%E3%83%8E%E3%83%BC%E3%83%88%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3">ノートパソコン</a>など色々な電化製品が<a href="http://dict.hjenglish.com/jp/w/%E9%99%B3%E5%88%97">陳列</a>されています。　秋叶原的商店陈列着数码相机、笔记本电脑等各种各样的电器产品。</p><p>※用～や～涉及到言外事项，常和など前后呼应；而用～と～就不涉及言外事项。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E5%87%A6%E7%90%86">処理</a><a href="http://dict.hjenglish.com/jp/w/%E6%A6%82%E8%A6%81">概要</a>についてですが、機種マスタ·耐久<a href="http://dict.hjenglish.com/jp/w/%E9%80%B1%E5%A0%B1">週報</a><a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB">テーブル</a>より、画面にて指定された<a href="http://dict.hjenglish.com/jp/w/%E3%82%B7%E3%83%A3%E3%82%B7%E3%83%BC">シャシー</a>番号または機種略称に対して<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%BC%E3%82%BF">データ</a>を<a href="http://dict.hjenglish.com/jp/w/%E5%8F%96%E5%BE%97">取得</a>します。</p><p>　　关于处理概要，是从机种master·耐久周报表中，取得画面指定的底盘号码或对应于机种简称的数据。</p><p>（2）耐久距離&#x2F;年月<a href="http://dict.hjenglish.com/jp/w/%E3%82%B0%E3%83%A9%E3%83%95">グラフ</a>用のCSV<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">データファイル</a>を作成し、CSVファイル<a href="http://dict.hjenglish.com/jp/w/%E4%BD%9C%E6%88%90">作成</a>後に耐久距離&#x2F;年月グラフ作成<a href="http://dict.hjenglish.com/jp/w/%E3%83%9E%E3%82%AF%E3%83%AD">マクロ</a>の<a href="http://dict.hjenglish.com/jp/w/%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97">呼び出し</a>を行います。</p><p>　　制作耐久距离&#x2F;年月图表用的CSV数据文件，并在制作CSV文件后调用耐久距离&#x2F;年月图表制作宏。</p><p>（3）機種略称が<a href="http://dict.hjenglish.com/jp/w/%E6%9C%AA%E5%85%A5%E5%8A%9B">未入力</a>の場合には<a href="http://dict.hjenglish.com/jp/w/%E3%82%A8%E3%83%A9%E3%83%BC">エラー</a>（ERR_No.20）を表示し、シャシー番号に<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AB%E3%82%B9">フォーカス</a>を戻して処理終了します。</p><p>　　未输入机种简称时显示错误（ERR_No.20），并将光标移回到底盘号码后结束处理。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>第一次简单点吧，中日单词互译^^</p><p>ユーザー（　　　）　　プログラム（　　　）　せつぞく（　　　）<br>ディレクトリー（　　　）　　テンプレート（　　　）</p><p>客户端（　　　）　　菜单（　　　）　　密码（　　　）　　<br>下载（　　　）　　启动（　　　）　　</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p><a href="http://dict.hjenglish.com/jp/w/%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC">ユーザー</a>（user，用户）　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0">プログラム</a>（program，程序）　<a href="http://dict.hjenglish.com/jp/w/%E3%81%9B%E3%81%A4%E3%81%9E%E3%81%8F">せつぞく</a>（连接）<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%83%BC">ディレクトリー</a>（directory，目录）　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88">テンプレート</a>（template，模板）</p><p>客户端（<a href="http://dict.hjenglish.com/jp/w/%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88">クライアント</a>）　　菜单（<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC">メニュー</a>）　　密码（<a href="http://dict.hjenglish.com/jp/w/%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89">パスワード</a>）　　<br>下载（<a href="http://dict.hjenglish.com/jp/w/%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89">ダウンロード</a>）　　启动（<a href="http://dict.hjenglish.com/jp/w/%E8%B5%B7%E5%8B%95">起動</a>）</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>  明日があるさ。　总有明天。  《乱世佳人》结尾时斯佳丽说过，“After all, tomorrow is another day”，不管怎样，明天就是另外一天了。不论今天如何，总有明天，但是不能因为总有明天，今天就不干活哦，呵呵～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】容易用错的日语（2）</title>
      <link href="/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E5%AE%B9%E6%98%93%E7%94%A8%E9%94%99%E7%9A%84%E6%97%A5%E8%AF%AD%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="容易用错的日语（2）"><a href="#容易用错的日语（2）" class="headerlink" title="容易用错的日语（2）"></a>容易用错的日语（2）</h1><h2 id="1-「削除」と「クリア」"><a href="#1-「削除」と「クリア」" class="headerlink" title="1 「削除」と「クリア」"></a><strong>1 「削除」と「クリア」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%89%8A%E9%99%A4">削除</a>：删除，删掉（针对部分内容）<br>　<a href="http://dict.hjenglish.com/jp/w/%E3%82%AF%E3%83%AA%E3%82%A2">クリア</a>：清空、清除（针对全部内容）；解决</p><p>例文：<br>　×　画面の金額テキストボックスの内容を削除する。　（误用）<br>　○　画面の金額テキストボックスの内容をクリアする。　&#x2F; 清空画面中金额文本框中的内容。<br>　×　仕様書の第5章の内容をクリアする。　（误用）<br>　○　仕様書の第5章の内容を削除する。　&#x2F; 删除式样书第5章的内容。</p><p>　1）最後の1行を削除する。　&#x2F; 删除最后一行。<br>　2）このフィールドを削除する。　&#x2F; 删除该字段。<br>　3）前に入れたデータをクリアする。　&#x2F; 清除以前输入的数据。<br>　4）<a href="http://dict.hjenglish.com/jp/w/%E5%9B%B0%E9%9B%A3">困難</a>を一つ一つクリアしていく。　&#x2F; 逐一解决困难。</p><h2 id="2-「迷う」と「迷惑」"><a href="#2-「迷う」と「迷惑」" class="headerlink" title="2 「迷う」と「迷惑」"></a><strong>2 「迷う」と「迷惑」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E8%BF%B7%E3%81%86">迷う</a>：迷失，犹豫，迷惑<br>　<a href="http://dict.hjenglish.com/jp/w/%E8%BF%B7%E6%83%91">迷惑</a>：麻烦、打搅</p><p>例文：<br>　×　彼に教えるか教えないか迷惑している。　（误用）<br>　○　彼に教えるか教えないか迷っている。　&#x2F; 正在犹豫告诉不告诉他。</p><p>　1）道に迷ってずいぶん<a href="http://dict.hjenglish.com/jp/w/%E9%81%A0%E5%9B%9E%E3%82%8A">遠回り</a>した。　&#x2F; 迷路了，绕了一大圈。<br>　2）迷って末にようやく<a href="http://dict.hjenglish.com/jp/w/%E6%B1%BA%E6%96%AD">決断</a>した。　&#x2F; 犹豫了半天，最后终于下了决心。<br>　3）他人に迷惑をかける。　&#x2F; 给别人添麻烦。<br>　4）ご迷惑をお掛けしまして、申し訳ございません。　&#x2F; 对不起，给您添麻烦了。</p><h2 id="3-「工夫」と「暇」"><a href="#3-「工夫」と「暇」" class="headerlink" title="3 「工夫」と「暇」"></a><strong>3 「工夫」と「暇」</strong></h2><p>意思：<br>　<a href="http://dict.hjenglish.com/jp/w/%E5%B7%A5%E5%A4%AB">工夫</a>：设法、想办法、动脑筋、找窍门<br>　<a href="http://dict.hjenglish.com/jp/w/%E6%9A%87">暇</a>：时间、闲工夫、余暇、休假</p><p>例文：<br>　×　明日工夫がありますか？　（误用）<br>　○　明日暇がありますか？　&#x2F; 明天有空吗？</p><p>　1）<a href="http://dict.hjenglish.com/jp/w/%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C">あれこれ</a>工夫する。　&#x2F; 想各种方法、千方百计。<br>　2）<a href="http://dict.hjenglish.com/jp/w/%E6%80%A7%E8%83%BD">性能</a>の面で工夫する。　&#x2F; 在性能方面下功夫。<br>　3）忙しくてお昼を食べる暇もない。　&#x2F; 忙得连吃午饭的时间都没有。<br>　4）暇なら温泉にでも行きませんか？　&#x2F; 有时间的话去不去泡温泉？</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>选择合适的词填空，注意变形^^</p><p>1）（　暇 &#x2F; 工夫　）をもらって<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9F%E5%AE%B6">実家</a>に帰った。<br>2）使いやすいようにいろいろと（　暇 &#x2F; 工夫　）を<a href="http://dict.hjenglish.com/jp/w/%E5%87%9D%E3%82%89%E3%81%99&type=jc">こらした</a>。<br>3）行くべきか行かざるべきか（　迷う &#x2F; 迷惑　）いる。<br>4）人の（　迷う &#x2F; 迷惑　）にならないように気をつける。<br>5）連絡先から名前を（　削除 &#x2F; クリア　）する。<br>6）メッセージを出力した後、ユーザーID、パスワードの入力領域を（　削除 &#x2F; クリア　）する。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>1）（　暇　）をもらって実家に帰った。　&#x2F; 告假回老家了。<br>2）使いやすいようにいろいろと（　工夫　）をこらした。　&#x2F; 为求使用方便动了不少脑筋。<br>3）行くべきか行かざるべきか（　迷って　）いる。　&#x2F; 犹豫该不该去。<br>4）人の（　迷惑　）にならないように気をつける　&#x2F; 注意不要给人带来麻烦。<br>5）連絡先から名前を（　削除　）する。　&#x2F; 从联系对象中删掉名字。<br>6）エラーメッセージを出力した後、ユーザーID、パスワードの入力領域を（　クリア　）する。　&#x2F; 出错信息表示后，清空用户ID、密码输入框中的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（3）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A05/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A05/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（3）"><a href="#仕様書（3）" class="headerlink" title="仕様書（3）"></a>仕様書（3）</h1><p>在实际工作中，一开始最常接触到的应该就是仕様書。不过仕様書各日企都会有其固定写法和样式，我们就从一些基础的词汇和例句开始吧～</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～必要がある　有～必要，需要～，前接连体形</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E4%BF%AE%E6%AD%A3">修正</a>する<a href="http://dict.hjenglish.com/jp/w/%E5%BF%85%E8%A6%81">必要</a>があります。　需要修改。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E7%82%B9%E6%A4%9C">点検</a>する必要があります。　需要检查。</p><p>（2）～か、～か　是～还是，或者～或者是～<br>　　か前接体言、用言终止形，表示列举若干事项，从中选一。</p><p>　　できるかできないか<a href="http://dict.hjenglish.com/jp/w/%E5%A0%B1%E5%91%8A">報告</a>してください。　请汇报能还是不能。<br>　　問題があるかないかご<a href="http://dict.hjenglish.com/jp/w/%E7%A2%BA%E8%AA%8D">確認</a>ください。　请确认有没有问题。</p><p>（3）～を～から～に～する　把～从～到～<br>　　体言、形式名词+を+体言、形式名词+から+体言、形式名词+に～する</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E7%94%BB%E5%83%8F">画像</a>をDBから画面に表示する。　把图像从数据库显示到画面上。<br>　　データをアップロード用テーブルから<a href="http://dict.hjenglish.com/jp/w/%E6%AD%A3%E8%A6%8F">正規</a>テーブルに<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%94%E3%83%BC">コピー</a>する。　把数据从上载用表拷贝到正规表。</p><p>（4）～により（よって、よる）　由于～，取决于～，根据～<br>　　前接体言，表示事物产生的原因、方式</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E7%8A%B6%E6%B3%81">状況</a>によって決めます。　根据情况决定。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%9E%E3%83%8B%E3%83%A5%E3%82%A2%E3%83%AB">マニュアル</a>により操作する。　根据用户手册操作。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）本システムの<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9F%E8%A1%8C">実行</a>に<a href="http://dict.hjenglish.com/jp/w/%E4%BE%9D%E5%AD%98">依存</a>する定義を<a href="http://dict.hjenglish.com/jp/w/%E8%A8%98%E8%BF%B0">記述</a>したファイル。WebサーバーやDBサーバーが変わった時はこのファイルの<a href="http://dict.hjenglish.com/jp/w/%E4%B8%AD%E8%BA%AB">中身</a>を修正し全プログラムを<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB">リコンパイル</a>する。</p><p>　　本系统的执行环境定义文件。当Web服务器或DB发生变化时，修改此文件的内容并重新编译全部程序。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3">ログイン</a>認証処理。失敗の場合メッセージページを出力、認証できた場合はログイン者の<a href="http://dict.hjenglish.com/jp/w/%E6%A8%A9%E9%99%90">権限</a>によりメニュー＋お<a href="http://dict.hjenglish.com/jp/w/%E7%9F%A5%E3%82%89%E3%81%9B">知らせ</a>ページを出力する。</p><p>　　登录认证处理。失败时，输出信息页面。认证成功后根据登录者的权限输出菜单+通知页面。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>中日单词互译^^</p><p>プロトコル（　　　）　　インクルード（　　　）　　オブジェクトファイル（　　　）　　解析（　　　）</p><p>错误检查（　　　）　　定义文件（　　　）　　认证处理（　　　）　　运行环境（　　　）</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB">プロトコル</a>（protocol，协议）　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AB%E3%83%BC%E3%83%89">インクルード</a>（include，包括）　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">オブジェクトファイル</a>（object file，对象文件）　　<a href="http://dict.hjenglish.com/jp/w/%E8%A7%A3%E6%9E%90">解析</a>（解析，分析）</p><p>错误检查（<a href="http://dict.hjenglish.com/jp/w/%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">エラーチェック</a>，error check）　　定义文件（<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9A%E7%BE%A9%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">定義ファイル</a>，definition file）　　认证处理（<a href="http://dict.hjenglish.com/jp/w/%E8%AA%8D%E8%A8%BC%E5%87%A6%E7%90%86">認証処理</a>）　　运行环境（<a href="http://dict.hjenglish.com/jp/w/%E5%AE%9F%E8%A1%8C%E7%92%B0%E5%A2%83">実行環境</a>）</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>もう一頑張り。　再坚持一下。</p><p>当你感觉疲惫的时候，鼓励一下自己，再坚持一下，再坚持一下，马上就完成了～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】レビュー</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A02/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A02/</url>
      
        <content type="html"><![CDATA[<h1 id="レビュー"><a href="#レビュー" class="headerlink" title="レビュー"></a>レビュー</h1><p>一般我们公司这个阶段叫 review<br>走查（Walk Through）简称WT，是一种非正式的评审。由产品作者将该产品向一组同事进行介绍，并希望他们给出意见。走查的目的在于及早和高效率地消除缺陷，提高质量，降低软件开发的成本。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a>【语法】</h2><p>（1）～てください　请～<br>　　动词连用形+て（で）ください，表示请求对方做某事</p><p>　　詳細は備考を参照してください。　　　　　详细请参照备注。<br>　　何かありましたら随時連絡してください。　如有问题请随时联系。</p><p>（2）～を～に変更する　把～改为，把～变更为～<br>　　体言、形式名词+を+体言、形式名词+に変更する</p><p>　　変数を定数に変更する。　把变量改为常量。<br>　　全角を半角に変更する。　请全角改为半角。</p><p>（3）～を統一する　统一～<br>　　体言、形式名词+を統一する，表示把多个事物归纳起来。</p><p>　　レイアウトを統一する。　统一格式。<br>　　ルールを統一する。　　　统一规则。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a>【实例】</h2><p>（1）モジュールファイルの先頭に統一にヘッダー情報を記載する。</p><p>　　要在模块文件的前面统一写上头信息。</p><p>（2）各SQL文にコメントをちゃんと入れてください。</p><p>　　请给每个SQL语句加上注释。</p><p>（3）画面に表示される文字のフォント、サイズを統一する。</p><p>　　画面上显示的文字字体和大小要统一。</p><p>（4）WT実施一覧と実施内容</p><p>上图中的新单词</p><p>カーニング（kerning）字间距调整<br>取扱説明書「とりあつかいせつめいしょ」操作说明书<br>バージョン（version）版本<br>日限「にちげん」期限</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a>【作业】</h2><p>翻译下列句子</p><p>（1）マニュアルはユーザに見せるものなので、必ず敬語を使わなければなりません。</p><p>（2）画面の操作については分かりやすいように番号をつけて順番に説明しなければなりません。</p><p>（3）「宋体」の日本語文字もあるので、フォントを統一してください。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p>（1）手册是给用户看的，所以必须使用敬语。 </p><p>（2）关于画面操作，为使用户易懂，必须加上序号按顺序进行说明。</p><p>（3）还存在“宋体”的日语文字，请统一字体。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a>【每期一句】</h2><p>自分のこと考える。　 </p><p>不要只顾着往前跑，偶尔也要停下来好好想想自己的事情～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（2）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A04/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A04/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（2）"><a href="#仕様書（2）" class="headerlink" title="仕様書（2）"></a>仕様書（2）</h1><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～に～ 来，到，去<br>　　体言、形式名词+に，表示动作的目的地或终点。</p><p>　　管理<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%8B%E3%83%A5%E3%83%BC">メニュー</a>に戻る。 返回到管理菜单。<br>　　データを<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9">データベース</a>に<a href="http://dict.hjenglish.com/jp/w/%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89">アップロード</a>する。 把数据上载到数据库。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3">ログイン</a>画面に<a href="http://dict.hjenglish.com/jp/w/%E9%81%B7%E7%A7%BB">遷移</a>する。 跳转到登录画面。</p><p>（2）～ため～ 为了～，由于～<br>　　连体形、（体言+の）+ため，表示行为或事物发生的目的或原因。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%82%B0">バグ</a>があるため<a href="http://dict.hjenglish.com/jp/w/%E7%B4%8D%E5%93%81">納品</a>できません。 因为有bug所以不能交货。<br>　　感染されないために<a href="http://dict.hjenglish.com/jp/w/%E3%82%A6%E3%82%A4%E3%83%AB%E3%82%B9">ウイルス</a>を駆除する<a href="http://dict.hjenglish.com/jp/w/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2">ソフトウェア</a>を設定する。 为了不被病毒感染而安装杀毒软件。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%83%BC">セキュリティー</a>のため<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A1%E3%82%A4%E3%82%A2%E3%82%A6%E3%82%A9%E3%83%BC%E3%83%AB">ファイアウォール</a>を設置する。 为了安全而设置防火墙。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）入力した従業員番号が社員基本情報テーブルにない場合は、「従業員番号がみつかりません」との<a href="http://dict.hjenglish.com/jp/w/%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8">エラーメッセージ</a>を返します。</p><p>　　当职员基本信息表中不存在输入的职员编号时，显示错误信息“没有找到此职员编号”。</p><p>（2）処理終了時、「処理が終了しました」とのメッセージを<a href="http://dict.hjenglish.com/jp/w/%E3%83%9D%E3%83%83%E3%83%97%E3%82%A2%E3%83%83%E3%83%97">ポップアップ</a>で表示します。</p><p>　　处理结束时，弹出“处理结束”的消息。</p><p>（3）URLに指定したファイルを<a href="http://dict.hjenglish.com/jp/w/%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89">ダウンロード</a>する。画面展開されないで、確認<a href="http://dict.hjenglish.com/jp/w/%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0">ダイアログ</a>が出る。</p><p>　　下载在URL中指定的文件，不打开画面，只显示确认对话框。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>中日单词互译^^</p><p>格納（ ） 登録（ ） 圧縮ファイル（ ） タブ画面（ ）</p><p>共享（ ） 删除（ ） 清空（ ） 更新（ ）</p><p>再翻个句子吧～</p><p>ダウンロードする調査表ファイルを作成し、一覧画面を表示する。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p><a href="http://dict.hjenglish.com/jp/w/%E6%A0%BC%E7%B4%8D">格納</a>（保存） <a href="http://dict.hjenglish.com/jp/w/%E7%99%BB%E9%8C%B2">登録</a>（登录） <a href="http://dict.hjenglish.com/jp/w/%E5%9C%A7%E7%B8%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">圧縮ファイル</a>（压缩文件） <a href="http://dict.hjenglish.com/jp/w/%E3%82%BF%E3%83%96%E7%94%BB%E9%9D%A2">タブ画面</a>（Tab画面）</p><p>共享（<a href="http://dict.hjenglish.com/jp/w/%E5%85%B1%E6%9C%89">共有</a>） 删除（<a href="http://dict.hjenglish.com/jp/w/%E5%89%8A%E9%99%A4">削除</a>） 清空（<a href="http://dict.hjenglish.com/jp/w/%E3%82%AF%E3%83%AA%E3%82%A2">クリア</a>） 更新（<a href="http://dict.hjenglish.com/jp/w/%E6%9B%B4%E6%96%B0">更新</a>）</p><p>生成下载的调查表文件，显示一览画面。</p><p>※几点说明：</p><p>1）「格納」本意是收藏，指把东西放入固定的地方，和数据存入数据库的形式有点类似。所以在软件开发中，一般向数据库里保存数据时会用「格納」，比如：<br>ワーク表へデータ格納 将数据保存到工作表。</p><p>2）「登録」也有保存的意思在，比如在一个窗口里输入了很多信息，最后点一个按钮保存，这个按钮上往往就写着「登録」，而不是「保存」。</p><p>3）那什么时候用「保存」呢？保存一个文件的时候可以用，比如在软件菜单中常见的：<br>名前をつけて保存 另存为（命名保存）<br>上書き保存 保存（覆盖掉原来的）</p><p>不知道我解释清楚了没有？其实在实际工作中都是习惯就这么用了，我还是第一次认真考虑该如何解释呢，擦汗ing。。。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>変化はチャンス。 变化就是机会。</p><p>最近在你的身边有没有发生什么变化？你有没有注意到呢？也许变化就意味着机会哦～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（5）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A07/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A07/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（5）"><a href="#仕様書（5）" class="headerlink" title="仕様書（5）"></a>仕様書（5）</h1><p>仕様書的作用是对程序进行详细的设计，对程序编码的实现进行指导。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～ておく　为了～做准备<br>　　前接动词连用形，表示预先做好某种准备。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97">バックアップ</a>を取っておく。　做好备份。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88">コメント</a>をつけておく。　　　加上注释。 </p><p>（2）～てから～　～之后<br>　　接动词连体形，表示前后两个动作或行为是依次相继进行的。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88">ドキュメント</a>を作成してから<a href="http://dict.hjenglish.com/jp/w/%E7%B7%A8%E9%9B%86">編集</a>する。　文档作成后进行编辑。<br>　　値を<a href="http://dict.hjenglish.com/jp/w/%E8%A8%98%E5%85%A5">記入</a>してから<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%96%E3%83%9F%E3%83%83%E3%83%88">サブミット</a>する。　　　填入值后提交。 </p><p>（3）～について　关于，就～而言<br>　　前接体言，表示动作、事务所涉及的对象</p><p>　　詳しいことについては<a href="http://dict.hjenglish.com/jp/w/%E6%B7%BB%E4%BB%98%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">添付ファイル</a>をご覧ください。　详细事项请参阅附件。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E5%87%BA%E5%8A%9B">出力</a>項目についてはTAB形式画面<a href="http://dict.hjenglish.com/jp/w/%E5%8F%82%E7%85%A7">参照</a>。　关于输出项目，参照TAB形式画面。</p><p>（4）～になる　变为，成为<br>　　前接体言、形式名词，表示事物自然变化的结果</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E6%9C%AC%E7%95%AA">本番</a>になる。　正式使用。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%AB%E3%83%AC%E3%83%B3%E3%83%88">カレント</a>になっている状態で<a href="http://dict.hjenglish.com/jp/w/%E5%85%A5%E5%8A%9B">入力</a>する。　当前状态下输入。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>項目は、宣言·延期·自由入力<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%82%B9%E3%83%88%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89">テストフィールド</a>として、このうち宣言と延期は<a href="http://dict.hjenglish.com/jp/w/%E4%BA%8C%E8%80%85%E6%8A%9E%E4%B8%80">二者択一</a>とします。</p><p>　　校验项目为宣言、延期、自由输入文本框，其中宣言和延期为二选一形式。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E8%A4%87%E6%95%B0">複数</a>事件の<a href="http://dict.hjenglish.com/jp/w/%E4%B8%80%E6%8B%AC%E5%87%A6%E7%90%86">一括処理</a>は行わないものとし、単一事件の<a href="http://dict.hjenglish.com/jp/w/%E6%89%8B%E7%B6%9A%E3%81%8D">手続き</a>とします。</p><p>　　不进行多个事件的批量处理，只办理单一事件手续。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）以下の<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">ファイル</a>を<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9">データベース</a>に登録しておく。</p><p>（2）各<a href="http://dict.hjenglish.com/jp/w/%E3%83%9C%E3%82%BF%E3%83%B3">ボタン</a>の表示については、本<a href="http://dict.hjenglish.com/jp/w/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88">ドキュメント</a>の表3を参照してください。</p><p>（3）一旦その<a href="http://dict.hjenglish.com/jp/w/%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8">パッケージ</a>を削除してから再<a href="http://dict.hjenglish.com/jp/w/%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">インストール</a>するという処理が必要になる。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）将以下的文件预先登录到数据库中。</p><p>（2）关于各按钮的表示，请参考本文档的表3。</p><p>（3）一旦将那个程序包删除后再安装处理就有必要了。 </p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>もっと楽に生きて。　活得轻松些。</p><p>为什么要给自己那么沉重的包袱呢？放下这些包袱吧，要学会拿得起、放得下。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（4）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A06/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A06/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（4）"><a href="#仕様書（4）" class="headerlink" title="仕様書（4）"></a>仕様書（4）</h1><p>仕様書的作用是对程序进行详细的设计，对程序编码的实现进行指导。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～こと（结句）　必须，务必（肯定）；不许，不要（否定）<br>　　前接连体形，こと在句末相当于终助词，带有说明和命令的语气。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%AB%E3%83%BC%E3%83%AB">ルール</a>を守ること。　应该遵守规则。<br>　　お客さんの<a href="http://dict.hjenglish.com/jp/w/%E8%A6%81%E6%9C%9B">要望</a>に<a href="http://dict.hjenglish.com/jp/w/%E5%BF%9C%E3%81%98%E3%82%8B">応じる</a>こと。　必须满足用户的需求。</p><p>（2）できる　能够，可以，会<br>　　连体形 + ことが（も）できる<br>　　名词 + が + できる<br>　　サ变动词词干 + できる</p><p>　　理解できます。　　可以理解。<br>　　画面表示できる。　画面能显示。</p><p>（3）～たばかり　刚刚<br>　　动词过去式 + ばかり</p><p>　　メールを<a href="http://dict.hjenglish.com/jp/w/%E5%8F%97%E4%BF%A1">受信</a>したばかりです。　刚刚收到邮件。<br>　　終わったばかりです。　　　　　刚刚结束。</p><p>（4）～を～にする　使～变为，使～成为<br>　　体言 + を + にする</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E5%80%A4">値</a>を1にする。　　　　 把值变为1。<br>　　画面を<a href="http://dict.hjenglish.com/jp/w/%E9%9D%9E%E8%A1%A8%E7%A4%BA">非表示</a>にする。　使画面不表示。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）新パスワードと新パスワードの<a href="http://dict.hjenglish.com/jp/w/%E7%A2%BA%E8%AA%8D">確認</a>は同じであること。</p><p>　　新密码与新密码确认必须相同。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89">アップロード</a>用テーブルから正規部品テーブルにデータを登録する。登録<a href="http://dict.hjenglish.com/jp/w/%E6%B8%88%E3%81%BF">済み</a>データはなにもしない。それぞれのテーブルに登録した<a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89">レコード</a>数を表示する。</p><p>　　把数据从上载表登录到正规组件表中。已登录的数据不做任何处理。显示登录在各个表中的记录数。</p><p>（3）取引先コードを入力、<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%B3%E3%83%9E">コンマ</a>編集することにより<a href="http://dict.hjenglish.com/jp/w/%E8%A4%87%E6%95%B0">複数</a>指定することができる。</p><p>　　输入交易方代码，通过使用逗号可以指定多个顾客。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>中日单词互译^^</p><p>仮テーブル（　　）　サブウィンドウ（　　）　デフォルト（　　）　取引先（　　）</p><p>初始值（　　）　一览（　　）　返回（　　）　鼠标（　　）</p><p>翻译这个句子^^</p><p>刚刚把文件送出去。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E4%BB%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB">仮テーブル</a>（临时表）　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%96%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6">サブウィンドウ</a>（subwindow，子窗口）　<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88">デフォルト</a>（default，默认）　<a href="http://dict.hjenglish.com/jp/w/%E5%8F%96%E5%BC%95%E5%85%88">取引先</a>（交易方，顾客） </p><p>初始值（<a href="http://dict.hjenglish.com/jp/w/%E5%88%9D%E6%9C%9F%E5%80%A4">初期値</a>）　一览（<a href="http://dict.hjenglish.com/jp/w/%E4%B8%80%E8%A6%A7">一覧</a>）　返回（<a href="http://dict.hjenglish.com/jp/w/%E6%88%BB%E3%82%8B">戻る</a>）　鼠标（<a href="http://dict.hjenglish.com/jp/w/%E3%83%9E%E3%82%A6%E3%82%B9">マウス</a>，mouse）</p><p>ファイルを<a href="http://dict.hjenglish.com/jp/w/%E9%80%81%E4%BB%98">送付</a>したばかりです。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>他人のこと考える。　顾及一下别人。</p><p>不要完全沉浸在自己的事情之中。有时间的话，应该想一想你的家人、你的朋友。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板</title>
      <link href="/2025/08/15/%E6%A8%A1%E6%9D%BF/"/>
      <url>/2025/08/15/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1>]]></content>
      
      
      <categories>
          
          <category> 杂七杂八 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】测试工作中日中文化导致的差异</title>
      <link href="/2025/08/15/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%97%A5%E4%B8%AD%E6%96%87%E5%8C%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%B7%AE%E5%BC%82/"/>
      <url>/2025/08/15/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%97%A5%E4%B8%AD%E6%96%87%E5%8C%96%E5%AF%BC%E8%87%B4%E7%9A%84%E5%B7%AE%E5%BC%82/</url>
      
        <content type="html"><![CDATA[<h1 id="测试工作中日中文化导致的差异"><a href="#测试工作中日中文化导致的差异" class="headerlink" title="测试工作中日中文化导致的差异"></a>测试工作中日中文化导致的差异</h1><p>下面是一位中国软件工程技术人员演讲中的节选：</p><p>　<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%82%B0">バグ</a>には、システムに重大な影響を及ばすもの、例えば、システムが止まったり、データを壊すようなものから、画面の文字表示が少し<a href="http://dict.hjenglish.com/jp/w/%E3%81%9A%E3%82%8C%E3%82%8B&type=jc">ずれて</a>いるといったシステムの<a href="http://dict.hjenglish.com/jp/w/%E7%A8%BC%E5%83%8D">稼働</a>にはほとんど影響がない<a href="http://dict.hjenglish.com/jp/w/%E8%BB%BD%E3%81%84">軽い</a>ものまで、幾つかの<a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%83%99%E3%83%AB">レベル</a>があります。</p><p>　こうした、幾つかのレベルのバグがあったとき、重要なバグから修正するのは、中日共通の考え方です。</p><p>　しかし、軽いバグに対する認識の<a href="http://dict.hjenglish.com/jp/w/%E5%BA%A6%E5%90%88%E3%81%84">度合い</a>は、中日で少し違うように思います。日本人は、中国人から見ると不必要に思えるくらい、軽いバグも気にします。これは、以下の理由によると思います。</p><p>　日本人は、画面の文字表示が少し<a href="http://dict.hjenglish.com/jp/w/%E3%81%8A%E3%81%8B%E3%81%97%E3%81%84">おかしい</a>といった軽いバグがあると、すぐ見つかるはずなのに、こんなことも気付かないようでは、<a href="http://dict.hjenglish.com/jp/w/%E6%9B%B4%E3%81%AB">更に</a>重大なバグも隠れているに違いないと考えます。</p><p>　このように考えるのは、安全確保に関する「ハインリッヒの法則」、つまり、小さな事故を<a href="http://dict.hjenglish.com/jp/w/%E6%92%B2%E6%BB%85">撲滅</a>することが、安全の<a href="http://dict.hjenglish.com/jp/w/%E7%A2%BA%E4%BF%9D">確保</a>に効果があるという考え方に基づいた<a href="http://dict.hjenglish.com/jp/w/%E5%93%81%E8%B3%AA">品質</a>の見方をするためであります。このような考え方から、軽いバグも重要視するわけです。</p><p>　また、日本人には、物事を判断する際、まず<a href="http://dict.hjenglish.com/jp/w/%E5%A4%96%E8%A6%8B">外見</a>で判断する傾向があり、外見が駄目なら全体を<a href="http://dict.hjenglish.com/jp/w/%E5%90%A6%E5%AE%9A">否定</a>する傾向があります。従って、外見を重要視します。</p><p>　……</p><p>　このような日本人の外見を重要視する考えは、システムの評価の<a href="http://dict.hjenglish.com/jp/w/%E4%BB%95%E6%96%B9">仕方</a>にも現れています。外見上の問題があると、それで、システムの全体を判断してしまう傾向があります。従って、システムを作るとき、<a href="http://dict.hjenglish.com/jp/w/%E8%A6%8B%E6%A0%84%E3%81%88">見栄え</a>が重要ということになります。システム設計時の画面<a href="http://dict.hjenglish.com/jp/w/%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88">レイアウト</a>などには特に注意を<a href="http://dict.hjenglish.com/jp/w/%E6%89%95%E3%81%86">払う</a>必要があります。</p><p>※ハインリッヒの法則（Heinrich’s Law）１件の重大災害の裏には29件の軽い災害と300件のひやりミス体験があるという労働災害の頻度を示す法則。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>这位软件工程技术人员主要叙述了什么问题？<br>其中，日中有差异的地方在哪里？为什么日本人会有这样的判断呢？</p><p>结合自己的工作情况或感受谈谈也可以，开放式讨论，不用隐藏～</p><p>PS：上面的文章不是很难，大家需要中文翻译么？如果能看懂，我就偷懒不翻了，呵呵~~如果觉得有困难，我再打上来。大意可参考欣然个人的感受，回复可见。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】仕様書（6）</title>
      <link href="/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A08/"/>
      <url>/2025/08/15/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A08/</url>
      
        <content type="html"><![CDATA[<h1 id="仕様書（6）"><a href="#仕様書（6）" class="headerlink" title="仕様書（6）"></a>仕様書（6）</h1><p>仕様書的作用是对程序进行详细的设计，对程序编码的实现进行指导。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～済み　～已经完了<br>　　接在名词下构成复合词。</p><p>　　選択<a href="http://dict.hjenglish.com/jp/w/%E6%B8%88%E3%81%BF">済み</a>　　选择完了<br>　　<a href="http://dict.hjenglish.com/jp/w/%E6%94%AF%E6%89%95">支払</a>済み　　支付完毕</p><p>（2）～に合わせる　对照，使～一致<br>　　前接体言、形式名词。</p><p>　　項目長はDBに<a href="http://dict.hjenglish.com/jp/w/%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B">合わせる</a>。　　使项目长度和数据库长度一致。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%82%A4%E3%82%BA">サイズ</a>を画面に合わせる。　使尺寸和画面一致。</p><p>（3）～ようにする　如～那样，尽量成为～那样<br>　　前接连用形，表示样态或人为要求的状态。</p><p>　　計画<a href="http://dict.hjenglish.com/jp/w/%E9%80%9A%E3%82%8A">通り</a>完成するようにする。　尽量按计划完成。<br>　　表示できるようにする。　　　　使尽量能显示。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）設定済みのデータを<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%82%B9%E3%83%88">リスト</a>から選択後、Deleteボタン<a href="http://dict.hjenglish.com/jp/w/%E6%8A%BC%E3%81%97%E4%B8%8B%E3%81%92%E3%82%8B&type=jc">押下げ</a>で、選択行データを含むテーブル全てを<a href="http://dict.hjenglish.com/jp/w/%E5%89%8A%E9%99%A4">削除</a>する。</p><p>　　从列表中选择已设定完毕的数据，按下Delete按钮，包括该选择行数据在内的表将全部删除。</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88">テンプレート</a>の内容に合わせて2<a href="http://dict.hjenglish.com/jp/w/%E3%83%9A%E3%83%BC%E3%82%B8">ページ</a>に分けて<a href="http://dict.hjenglish.com/jp/w/%E5%8D%B0%E5%88%B7">印刷</a>を<a href="http://dict.hjenglish.com/jp/w/%E7%B6%99%E7%B6%9A">継続</a>しますか？</p><p>　　按照模板的内容分2页继续打印吗？</p><p>（3）管理画面から<a href="http://dict.hjenglish.com/jp/w/%E5%90%84%E7%A8%AE">各種</a><a href="http://dict.hjenglish.com/jp/w/%E5%B8%B3%E7%A5%A8">帳票</a>を<a href="http://dict.hjenglish.com/jp/w/%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89">ダウンロード</a>できるようにする。</p><p>　　使在管理画面上可以下载各种账单票据。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E3%81%99%E3%81%A7%E3%81%AB&type=jc">既に</a>選択済みの<a href="http://dict.hjenglish.com/jp/w/%E3%83%A9%E3%82%B8%E3%82%AA%E3%83%9C%E3%82%BF%E3%83%B3">ラジオボタン</a>を<a href="http://dict.hjenglish.com/jp/w/%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF">クリック</a>した場合は、<a href="http://dict.hjenglish.com/jp/w/%E9%81%B8%E6%8A%9E">選択</a>が解除されます。</p><p>（2）画面に合わせて<a href="http://dict.hjenglish.com/jp/w/%E5%86%8D%E8%A1%A8%E7%A4%BA">再表示</a>されていた。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E4%BB%BB%E6%84%8F">任意</a>期間を指定して<a href="http://dict.hjenglish.com/jp/w/%E9%9B%86%E8%A8%88">集計</a>できるようにする。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p>（1）单击已选择的单选按钮时，选择状态将被取消。</p><p>（2）配合画面重新显示了一次。</p><p>（3）要做到指定任意期间都可以合计。</p><p>PS：突然发觉我自己翻得也不是很到位，其实平时工作中能看懂就行，不一定非要翻成中文的。不知道是不是有点难为大家了？可是我想不出其他的作业呃……</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>早起きする。　早起。</p><p>早起太痛苦了，我已经连续2个周末在7点之前起床了，55(&gt;_&lt;)<br>但偶尔早起呼吸一下早晨的空气，感觉也不错哦，会觉得这一天充满希望～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】结合测试式样书（1）</title>
      <link href="/2025/08/15/%E7%BB%93%E5%90%88%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%881%EF%BC%89/"/>
      <url>/2025/08/15/%E7%BB%93%E5%90%88%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="结合测试式样书（1）"><a href="#结合测试式样书（1）" class="headerlink" title="结合测试式样书（1）"></a>结合测试式样书（1）</h1><p>在单体测试之后，要将各模块组装进行结合测试。主要是测试各功能结合起来后是否会出问题、模块与模块之间的交互等等。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～てくる　～来了<br>　　前接动词连用形，表示空间上或状态的由远及近的变化状态，即变化过程由过去到现在。</p><p>　　ログインしてきた。　　注册上来了。<br>　　送られてきた。　　　　送来了。</p><p>（2）～と～　一～就～，若～则～<br>　　前接活用词终止形，表示确定条件或假定条件的顺态接续。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF">ネットワーク</a>が<a href="http://dict.hjenglish.com/jp/w/%E5%88%87%E6%96%AD">切断</a>されると送受信できません。　网络一断就不能收发邮件。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%AA%E3%83%B3%E3%82%AF">リンク</a>をクリックすると遷移します。　点击链接就跳转。</p><p>（3）～のみ　仅，只<br>　　前接体言、用言或助动词的连体型、助词（除が、は、も），表示事物的限定数量或范围。</p><p>　　問題が一つのみ<a href="http://dict.hjenglish.com/jp/w/%E6%AE%8B%E3%82%8B&type=jc">残って</a>います。　　　　只剩下一个问题。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%82%B9%E3%83%88">コスト</a>のみ<a href="http://dict.hjenglish.com/jp/w/%E5%BC%B7%E8%AA%BF">強調</a>しても良くありません。　只强调成本也不好。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E6%96%B0%E8%A6%8F">新規</a>予約からリンクしてきたときに表示された<a href="http://dict.hjenglish.com/jp/w/%E7%95%AA%E5%8F%B7">番号</a>が、DBのテーブルにないことを確認する。</p><p>　　确认从新建预约链接过来时，所显示的编号是数据库里不存在的编号。</p><p>（2）すべての画面において「<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC">プレビュー</a>」ボタンを押すと、新しい<a href="http://dict.hjenglish.com/jp/w/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88">テンプレート</a>を利用した<a href="http://dict.hjenglish.com/jp/w/%E5%B8%B3%E7%A5%A8">帳票</a>が表示されることを確認します。</p><p>　　在所有画面上按下“预览”按钮时，确认是否显示使用了新模板的帐票。</p><p>（3）入力画面にて<a href="http://dict.hjenglish.com/jp/w/%E5%80%A4">値</a>を修正したら、すべての<a href="http://dict.hjenglish.com/jp/w/%E9%96%A2%E9%80%A3">関連</a>画面の<a href="http://dict.hjenglish.com/jp/w/%E5%BD%93%E8%A9%B2">当該</a>値が変更されることを確認します。</p><p>　　在输入画面修改值后，确认所有相关画面中的该值也已改变。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9">データベース</a>未接続状態で「予約状況」ボタンを押すと、エラーが表示される。</p><p>（2）「検索」ボタンを押すと、検索画面に<a href="http://dict.hjenglish.com/jp/w/%E9%81%B7%E7%A7%BB">遷移</a>されることを確認します。</p><p>（3）予約番号欄には<a href="http://dict.hjenglish.com/jp/w/%E7%AC%A6%E5%8F%B7">符号</a>なし<a href="http://dict.hjenglish.com/jp/w/%E6%95%B4%E6%95%B0">整数</a>値のみ入力可。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a>【答案】</h2><p>（1）在数据库未连接的状态按下“预约状况”按钮，报错。</p><p>（2）按下“检索”按钮时，确认是否跳转到检索画面。</p><p>（3）预约号栏里只能输入整数值，不能输入符号。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>頭を空にする。　清空大脑。<br>每天过得都不轻松，会有很多压力。所以让大脑偶尔也休息一下吧，重新整理一下思路吧～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】相互评价</title>
      <link href="/2025/08/15/%E7%9B%B8%E4%BA%92%E8%AF%84%E4%BB%B7/"/>
      <url>/2025/08/15/%E7%9B%B8%E4%BA%92%E8%AF%84%E4%BB%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="相互评价"><a href="#相互评价" class="headerlink" title="相互评价"></a>相互评价</h1><p>项目组与客户之间坦诚的互相评价，是彼此沟通的重要渠道，也是彼此之间互相了解、信任的基础。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～てほしい　希望～，请～<br>　　前接动词连用形，表示别人如何做或请别人为自己或自己一方做某事，相当于「～ていただきたい」或「～てもらいたい」。</p><p>　　説明して<a href="http://dict.hjenglish.com/jp/w/%E3%81%BB%E3%81%97%E3%81%84">ほしい</a>。　　请说明一下。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E6%94%B9%E5%96%84">改善</a>してほしい。　　希望得到改善。</p><p>（2）～聞かせていただく　请让我～<br>　　使役动词的连用性+て<a href="http://dict.hjenglish.com/jp/w/%E3%81%84%E3%81%9F%E3%81%A0%E3%81%8F">いただく</a>，是请求对方同意的自谦表达方式。</p><p>　　ご意見を<a href="http://dict.hjenglish.com/jp/w/%E8%81%9E%E3%81%8F&type=jc">聞かせて</a>いただきます。　请允许我听听您的意见。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E5%A0%B1%E5%91%8A">報告</a>させていただきます。　　　　请允许我报告。</p><p>（3）～てもかまわない　～也无妨，～没关系<br>　　前接用言或助动词的连用形。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E6%8B%A1%E5%BC%B5%E5%AD%90">拡張子</a>はなくてもかまわない。　　没有后缀名也没关系。<br>　　保存しなくても<a href="http://dict.hjenglish.com/jp/w/%E3%81%8B%E3%81%BE%E3%82%8F%E3%81%AA%E3%81%84">かまわない</a>。　　　不保存也无妨。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1） 仕様は正しく理解していると思います。但し、<a href="http://dict.hjenglish.com/jp/w/%E6%97%A5%E4%B8%AD">日中</a><a href="http://dict.hjenglish.com/jp/w/%E4%B8%A1%E5%9B%BD">両国</a>の文化などの<a href="http://dict.hjenglish.com/jp/w/%E5%B7%AE%E7%95%B0">差異</a>により、<a href="http://dict.hjenglish.com/jp/w/%E7%B4%B0%E3%81%8B%E3%81%84">細かい</a>所での考え方が違う場合があります。今後からはぜひ<a href="http://dict.hjenglish.com/jp/w/%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3">コミュニケーション</a>を強めて、ユーザの<a href="http://dict.hjenglish.com/jp/w/%E7%AB%8B%E5%A0%B4">立場</a>から考えていただければ非常にうれしいです。</p><p>　　对式样的理解是正确的。但由于中日两国的文化等差异，有时在细节方面考虑得不一样。希望今后加强交流，多从用户的角度考虑问题。</p><p>（2）指摘事項がある場合は、すぐに調査、解決できなくても、いつまでに<a href="http://dict.hjenglish.com/jp/w/%E8%BF%94%E4%BA%8B">返事</a>できるかという<a href="http://dict.hjenglish.com/jp/w/%E4%B8%AD%E9%96%93%E5%A0%B1%E5%91%8A">中間報告</a>をしてください。</p><p>　　当有指摘事项时，即使不能马上调查或解决，也请一定做中间报告，即告诉我们什么时候能回复。</p><p>（3）仕様書の量が多く、また<a href="http://dict.hjenglish.com/jp/w/%E5%8A%B9%E7%8E%87">効率</a>を<a href="http://dict.hjenglish.com/jp/w/%E5%90%91%E4%B8%8A">向上</a>させるために、仕様書に修正または追加などの変更がある場合は、修正<a href="http://dict.hjenglish.com/jp/w/%E5%B1%A5%E6%AD%B4">履歴</a>を書いていただければ<a href="http://dict.hjenglish.com/jp/w/%E9%9D%9E%E5%B8%B8">非常</a>に助かります。</p><p>　　式样书的量很多，为了提高效率，在对式样书做修正或追加等变更时，请一定要写休整履历，这样对我们的帮助将非常大。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）ご<a href="http://dict.hjenglish.com/jp/w/%E6%BA%80%E8%B6%B3">満足</a>いただけない場合、その理由をぜひ聞かせてください。</p><p>（2）当該<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88">プロジェクト</a>の開発作業をここまでに<a href="http://dict.hjenglish.com/jp/w/%E7%B5%82%E4%BA%86">終了</a>させて頂いても構わないのでしょうか。</p><p>（3）これから<a href="http://dict.hjenglish.com/jp/w/%E5%BD%93%E6%96%B9">当方</a>に改善してほしい事項がございますならば、ご<a href="http://dict.hjenglish.com/jp/w/%E9%81%A0%E6%85%AE">遠慮</a>なくご指摘いただれば<a href="http://dict.hjenglish.com/jp/w/%E5%B9%B8%E3%81%84">幸い</a>だと存じます。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）若不满意，请一定将理由告诉我。</p><p>（2）此项目的开发工作是否可以就此结束？</p><p>（3）对我方今后的工作，若有希望改善的事项，请无需顾虑地给与指点，我方将深感荣幸。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E8%A3%8F%E5%88%87%E3%82%8B&type=jc">裏切らない</a>ように。　不要背叛。<br>能有信任自己的人是最大的幸福、最大的财富，千万不要背叛～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】言語、フレームワーク、DB、OS、ブラウザなどまとめ</title>
      <link href="/2025/08/15/%E8%A8%80%E8%AA%9E%E3%80%81%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E3%80%81DB%E3%80%81OS%E3%80%81%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AA%E3%81%A9%E3%81%BE%E3%81%A8%E3%82%81/"/>
      <url>/2025/08/15/%E8%A8%80%E8%AA%9E%E3%80%81%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E3%80%81DB%E3%80%81OS%E3%80%81%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AA%E3%81%A9%E3%81%BE%E3%81%A8%E3%82%81/</url>
      
        <content type="html"><![CDATA[<h1 id="言語、フレームワーク、DB、OS、ブラウザなどまとめ"><a href="#言語、フレームワーク、DB、OS、ブラウザなどまとめ" class="headerlink" title="言語、フレームワーク、DB、OS、ブラウザなどまとめ"></a>言語、フレームワーク、DB、OS、ブラウザなどまとめ</h1><p><a href="https://engineer-shukatu.jp/column/archives/42435">https://engineer-shukatu.jp/column/archives/42435</a></p><p>プログラミングの勉強を進めていくと、言語やら、フレームワークやら、データーベース（DB）やらいろんなものが出てきますが、今回ひとつひとつの説明は省き、こんな分類で分けられていて、こんな種類があるんだというのがざっくりイメージできるようにまとめてみました。</p><p>これらを全部詳しく説明できる方はそうそういないと思いますし、その必要もないのでMySQLって聞いたらデーターベースのことなんだとか、Gitはバージョン管理するものなんだというのがこの表を見てなんとなく理解していけばよいかと思います。私自身なんとなくそうしています。（執筆：1年目PG）</p><table><thead><tr><th>分類</th><th>綴り</th><th>読み方</th></tr></thead><tbody><tr><td>languages(プログラミング言語)</td><td>C</td><td>シー</td></tr><tr><td></td><td>C#</td><td>シーシャープ</td></tr><tr><td></td><td>C++</td><td>シープラスプラス</td></tr><tr><td></td><td>CoffeeScript</td><td>コーヒースクリプト</td></tr><tr><td></td><td>ECMAScript</td><td>エクマスクリプト</td></tr><tr><td></td><td>Elixir</td><td>エリクサー</td></tr><tr><td></td><td>Go</td><td>ゴー</td></tr><tr><td></td><td>Golo</td><td>ゴーロー</td></tr><tr><td></td><td>Java</td><td>ジャバ</td></tr><tr><td></td><td>NodeJS</td><td>ノードジェイエス</td></tr><tr><td></td><td>PHP</td><td>ピーエイチピー</td></tr><tr><td></td><td>Python</td><td>パイソン</td></tr><tr><td></td><td>Ruby</td><td>ルビー</td></tr><tr><td></td><td>Rust</td><td>ラスト</td></tr><tr><td></td><td>Scala</td><td>スカラ</td></tr><tr><td></td><td>Swift</td><td>スイフト</td></tr><tr><td></td><td>Unity</td><td>ユニティ</td></tr><tr><td></td><td>TypeScript</td><td>タイプスクリプト</td></tr><tr><td></td><td>JavaScript</td><td>ジャバスクリプト</td></tr><tr><td>Frameworks(フレームワーク)</td><td>Angular</td><td>アングラー</td></tr><tr><td></td><td>ASP.NET</td><td>エーエスピードットネット</td></tr><tr><td></td><td>Backbone.js</td><td>バックボーンドットジェイエス</td></tr><tr><td></td><td>Bootstrap</td><td>ブートストラップ</td></tr><tr><td></td><td>Bulma</td><td>ブルマ</td></tr><tr><td></td><td>CodeIgniter</td><td>コードイグナイター</td></tr><tr><td></td><td>Django</td><td>ジャンゴ</td></tr><tr><td></td><td>Ember</td><td>エンバー</td></tr><tr><td></td><td>Foundation</td><td>ファンデーション</td></tr><tr><td></td><td>Hanami</td><td>ハナミ</td></tr><tr><td></td><td>Ionic</td><td>アイオニック</td></tr><tr><td></td><td>Laravel</td><td>ララベル</td></tr><tr><td></td><td>Meteor</td><td>メテオ</td></tr><tr><td></td><td>Mithril.js</td><td>ミスリルドットジェイエス</td></tr><tr><td></td><td>NativeScript</td><td>ネイティブスクリプト</td></tr><tr><td></td><td>Phalcon</td><td>ファルコン</td></tr><tr><td></td><td>Phoenix</td><td>フェニックス</td></tr><tr><td></td><td>React</td><td>リアクト</td></tr><tr><td></td><td>Ruby on Rails</td><td>ルビーオンレイルズ</td></tr><tr><td></td><td>Silverstripe</td><td>シルバーストライプ</td></tr><tr><td></td><td>Sinatra</td><td>シナトラ</td></tr><tr><td></td><td>Spring</td><td>スプリング</td></tr><tr><td></td><td>Symfony</td><td>シンフォニー</td></tr><tr><td></td><td>UIKit</td><td>ユーアイキット</td></tr><tr><td></td><td>Vue.js</td><td>ビュードットジェイエス</td></tr><tr><td>Web Servers(ウェブサーバー)</td><td>Apache</td><td>アパッチ</td></tr><tr><td></td><td>Nginx</td><td>エンジンエックス</td></tr><tr><td></td><td>Phusion Passenger</td><td></td></tr><tr><td>Databases(データーベース)</td><td>Cassandra</td><td>カサンドラ</td></tr><tr><td></td><td>CouchDB</td><td>カウチディービィー</td></tr><tr><td></td><td>MariaDB</td><td>マリアディービィー</td></tr><tr><td></td><td>MongoDB</td><td>モンゴディービィー</td></tr><tr><td></td><td>MSSQL</td><td>エムエスエスキュエル</td></tr><tr><td></td><td>MySQL</td><td>マイエスキュエル</td></tr><tr><td></td><td>Percona</td><td>ペルコナ</td></tr><tr><td></td><td>PostgreSQL</td><td>ポストグレスキュエル</td></tr><tr><td></td><td>Redis</td><td>レディス</td></tr><tr><td></td><td>RethinkDB</td><td>リシィンクディービィー</td></tr><tr><td></td><td>SQLite</td><td>エスキュライト</td></tr><tr><td>Browsers(ブラウザ)</td><td>Google Chrome</td><td>グーグルクローム</td></tr><tr><td></td><td>Internet Explorer</td><td>インターネットエクスプローラー</td></tr><tr><td></td><td>Microsoft Edge</td><td>マイクロソフトエッジ</td></tr><tr><td></td><td>Mozilla Firefox</td><td>モジラファイヤーフォックス</td></tr><tr><td></td><td>Opera</td><td>オペラ</td></tr><tr><td></td><td>Safari</td><td>サファリ</td></tr><tr><td></td><td>Vivaldi</td><td>ヴィヴァルディ</td></tr><tr><td>OS(オーエス)</td><td>Android</td><td>アンドロイド</td></tr><tr><td></td><td>Chrome OS</td><td>クロームオーエス</td></tr><tr><td></td><td>ElementaryOS</td><td>エラァメェンタァリィオーエス</td></tr><tr><td></td><td>Fedora</td><td>フェドラ</td></tr><tr><td></td><td>iOS</td><td>アイオーエス</td></tr><tr><td></td><td>macOS</td><td>マックオーエス</td></tr><tr><td></td><td>Mint</td><td>ミント</td></tr><tr><td></td><td>Redhat Enterprise</td><td>レッドハットエンタープライズ</td></tr><tr><td></td><td>Ubuntu</td><td>ウブントゥ</td></tr><tr><td></td><td>Windows</td><td>ウィンドウズ</td></tr><tr><td>Version Control(バージョン管理)</td><td>Git</td><td>ギット</td></tr><tr><td></td><td>Mercurial</td><td>マーキュリアル</td></tr><tr><td>Project management(プロジェクト管理)</td><td>Redmine</td><td>レッドマイン</td></tr><tr><td></td><td>backlog</td><td>バックログ</td></tr><tr><td></td><td>Jira</td><td>ジラ</td></tr><tr><td></td><td>Trello</td><td>トレロ</td></tr><tr><td></td><td>Redbooth</td><td>レッドブース</td></tr><tr><td></td><td>Flow</td><td>フロー</td></tr><tr><td></td><td>Wrike</td><td>ライク</td></tr><tr><td></td><td>Producteev</td><td>ロダクティーブ</td></tr><tr><td></td><td>Asana</td><td>アサナン</td></tr><tr><td>Information share(情報共有ツール)</td><td>Confluence</td><td>コンフルエンス</td></tr><tr><td></td><td>Qiita</td><td>キータ</td></tr><tr><td>Communication(ミュニケーションツール)</td><td>Slack</td><td>スラック</td></tr><tr><td></td><td>Chatwork</td><td>チャットワーク</td></tr><tr><td>CMS(コンテンツマネジメントシステム)</td><td>Concrete5</td><td>コンクリートファイブ</td></tr><tr><td></td><td>Craft CMS</td><td>クラフトシーエムエス</td></tr><tr><td></td><td>Drupal</td><td>ドルーパル</td></tr><tr><td></td><td>Joomla!</td><td>ジュームラ</td></tr><tr><td></td><td>Magento 2</td><td>マジェントツー</td></tr><tr><td></td><td>Magento v1</td><td>マジェントブィワン</td></tr><tr><td></td><td>October CMS</td><td>オクトーバーシーエムエス</td></tr><tr><td></td><td>PrestaShop</td><td>プレスタショップ</td></tr><tr><td></td><td>WordPress</td><td>ワードプレス</td></tr><tr><td>Apps(アプリケーション)</td><td>Seafile</td><td>シーファイル</td></tr><tr><td></td><td>Sketch</td><td>スケッチ</td></tr><tr><td>Package Managers(パッケージ管理システム)</td><td>Cargo</td><td>カーゴ</td></tr><tr><td></td><td>CocoaPods</td><td>ココアポッズ</td></tr><tr><td></td><td>Composer</td><td>コンポーザー</td></tr><tr><td></td><td>Homebrew</td><td>ホームブリュー</td></tr><tr><td></td><td>NPM</td><td>エヌピーエム</td></tr><tr><td></td><td>RubyGems</td><td>ルビージェムズ</td></tr><tr><td></td><td>Yarn</td><td>ヤーン</td></tr><tr><td>Cache(メモリキャッシュシステム)</td><td>Memcached</td><td>メムキャッシュディー</td></tr><tr><td></td><td>Redis</td><td>レディス</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】测试式样书拟定注意事项</title>
      <link href="/2025/08/15/%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%E6%8B%9F%E5%AE%9A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>/2025/08/15/%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%E6%8B%9F%E5%AE%9A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="测试式样书拟定注意事项"><a href="#测试式样书拟定注意事项" class="headerlink" title="测试式样书拟定注意事项"></a>测试式样书拟定注意事项</h1><p>测试式样书应该由测试方法、预想结果等项目组成。<br>· 测试方法通常是指为了达到某个测试点而采取的方法；<br>· 预想结果则指通过该测试方法理应产生的结果。<br>· 通过实际结果和预想结果的对比，对测试项目进行验证。</p><p>所以，在书写日文测试式样书时，测试方法应该使用主动态，预想结果则尽可能使用被动态。</p><p>下面就预想结果举几个常用的例子：</p><p>（1）正确使用「～を確認する」句型</p><p>良くない例：<br>担当者コードに4桁で入力する場合、別の項目に<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AB%E3%82%B9">フォーカス</a>が移った時、正しい。</p><p>良い例：<br>担当者コードに4桁で入力し、ロストフォーカスした際、エラーが発生しないことを確認する。<br>确认在担当者Code中输入4位值，鼠标离开（失去焦点）时，不报错。</p><p>（2）正确使用被动态</p><p>良くない例：<br>データの<a href="http://dict.hjenglish.com/jp/w/%E8%AA%AD%E3%81%BF%E5%8F%96%E3%82%8A">読み取り</a>に失敗した場合、エラーメッセージ<strong>を表示する</strong>ことを確認。</p><p>良い例：<br>データの読み取りに失敗した場合、エラーメッセージ<strong>が表示される</strong>ことを確認。<br>读取数据失败时，确认错误信息是否表示。</p><p>PS：被动态大家要好好学哦，经常用到的，呵呵^^</p><p>（3）正确使用可能态</p><p>良くない例：<br>右クリックを禁止する。</p><p>良い例：<br>右クリックできないことを確認。<br>确认不可以右击。</p><p>（4）正确使用「～となる」句型</p><p>良くない例：<br>和暦を選択して<a href="http://dict.hjenglish.com/jp/w/%E5%88%87%E3%82%8A%E6%9B%BF%E3%81%88&type=jc">切替</a>ボタンで西暦と設定し直す。</p><p>良い例：<br>和暦を選択して、切替ボタンをクリックすると、西暦となることを確認。<br>选择和历，单击转换按钮，确认是否转换成西历。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>其实是在正式接触测试工作后，才第一次看到测试式样书这个东西。写测试式样书并不容易，起初我也觉得，把那么多时间花在写这份东东上，不如把时间直接用来测试不更好么？不过后来在自己写的过程中，才渐渐领悟到，写这份东东可决不是浪费时间。因为要想写出合格的测试式样书，必须建立在对开发式样充分理解的基础上，测试点要覆盖到所有的功能、从正确和错误两方面各自造不同的数据例来验证。而且测试方法要详细到即使从来没有接触过测试的人员，拿到这份测试式样书后也能照着开始测试。总之，最早写的时候还真是痛苦不堪，往往我花2天写出来的东西，日本人看2个小时就给我打回来了，汗||| 不过通过一遍遍反复，也锻炼了自己缜密的思维，这可不是吹牛的哦，哈哈~~</p><p>好了，我说了一大堆，那么对于测试和测试式样书，你的看法或实际经历？开放式讨论，不用隐藏～</p><p>稍稍预告一下，下一期我们将来看看测试工作中，日中文化导致的差异。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】邮件书写技巧（2）</title>
      <link href="/2025/08/15/%E9%82%AE%E4%BB%B6%E4%B9%A6%E5%86%99%E6%8A%80%E5%B7%A7%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E9%82%AE%E4%BB%B6%E4%B9%A6%E5%86%99%E6%8A%80%E5%B7%A7%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件书写技巧（2）"><a href="#邮件书写技巧（2）" class="headerlink" title="邮件书写技巧（2）"></a>邮件书写技巧（2）</h1><p>（7）尽可能采取令对方容易回答的形式，提问的范围要明确。</p><p>良くない例：<br>仕様書の意味が良く分かりません。<a href="http://dict.hjenglish.com/jp/w/%E3%83%AB%E3%83%BC%E3%83%AB">ルール</a>を説明してください。</p><p>良い例：<br>仕様書の＊＊ページの＊＊部分ですが、＊＊の意味が良く分かりません。<br>＊＊の意味でしょうか。それとも＊＊の意味でしょうか。<br>他にも類似な所がありますので、ご<a href="http://dict.hjenglish.com/jp/w/%E6%95%99%E6%8E%88">教授</a>お願い申し上げます。</p><p>（8）回答应迅速，如无法立即回答时，应给于中间回复。</p><p>例：<br>ご質問の内容については現在調査中です。<br>一番遅くて明日には回答いたします。（調査結果は明日<a href="http://dict.hjenglish.com/jp/w/%E5%A0%B1%E5%91%8A">報告</a>する予定です。）</p><p>（9）拒绝对方时应谨慎。<br>　　明确告知我方的困难，并进行积极的建议，尽可能让对方知难而退，或让对方取舍。</p><p>例１：<br>○○から判断するとご<a href="http://dict.hjenglish.com/jp/w/%E8%A6%81%E6%9C%9B">要望</a>に応じるには無理があると判断しております。<br>○○を＊日までに完成させる場合、テストが不充分ですので品質は保障できません。<br>（納期を保障できません。<a href="http://dict.hjenglish.com/jp/w/%E6%8F%90%E6%A1%88">提案</a>ですが、＊＊＊）</p><p>例２：<br>○○ご要望の<a href="http://dict.hjenglish.com/jp/w/%E6%A9%9F%E8%83%BD">機能</a>を実現するには＊日かかると認識しております。<br><a href="http://dict.hjenglish.com/jp/w/%E4%B8%8A%E8%A8%98">上記</a>事情をご理解のうえ、ご支持お願い申し上げます。</p><p>（10）任何时候都始终保持积极的心态。</p><p>良くない例１：<br>いろいろ調査しましたが、<a href="http://dict.hjenglish.com/jp/w/%E5%86%8D%E7%8F%BE">再現</a>できません。</p><p>良くない例２：<br>ご要望に応じるのはできません。</p><p>良い例１：<br>いろいろ調査しましたが、再現できません。<br>もっと詳しい情報をご提供いただけますでしょうか。</p><p>良い例２：<br>現在の作業<a href="http://dict.hjenglish.com/jp/w/%E8%B2%A0%E8%8D%B7">負荷</a>から判断するとご要望の作業追加に応じるのは難しいと<a href="http://dict.hjenglish.com/jp/w/%E8%AA%8D%E8%AD%98">認識</a>しております。優先度が高い物であれば、A機能を<a href="http://dict.hjenglish.com/jp/w/%E6%9D%A5%E6%9C%9F">来期</a>にするのも一つの<a href="http://dict.hjenglish.com/jp/w/%E6%A1%88">案</a>だと思いますが。</p><p>（11）完成邮件后至少应检查一遍，确认没有问题再发送。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>开放式讨论，不用隐藏～<br>为什么“良くない例”不能这么写呢？</p><p>良くない例：<br>仕様書の意味が良く分かりません。ルールを説明してください。</p><p>良くない例２：<br>ご要望に応じるのはできません。</p><p>呵呵，其实工作中有时最想说的就是「できません」了，可是不能说，抓狂|||</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】邮件书写技巧（1）</title>
      <link href="/2025/08/15/%E9%82%AE%E4%BB%B6%E4%B9%A6%E5%86%99%E6%8A%80%E5%B7%A7%EF%BC%881%EF%BC%89/"/>
      <url>/2025/08/15/%E9%82%AE%E4%BB%B6%E4%B9%A6%E5%86%99%E6%8A%80%E5%B7%A7%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件书写技巧（1）"><a href="#邮件书写技巧（1）" class="headerlink" title="邮件书写技巧（1）"></a>邮件书写技巧（1）</h1><p>此前我们已经学过3期邮件相关，当时也答应大家会继续深入的，呵呵～</p><p>（1）书写邮件，首先要明确三部分：对方姓名、主要目的&#x2F;内容、署名。</p><p>（2）书写邮件一定要简明扼要，逻辑清晰，目的明确而没有遗漏。<br>　　· 尽可能使用日方常用的词汇，不要使用生僻、不确定的词汇。<br>　　· 不要轻易认为有些内容你不写，对方也会明白或理解。一定要时刻提醒自己，对方在很远的地方，并不能看到我们现在的工作状况。</p><p>以下是一个邮件实例，开发人员想要延长一周的交货期。但是两封邮件所产生的结果将是截然不同的。</p><p>良くない例：<br>10月1日－7日は中国の<a href="http://dict.hjenglish.com/jp/w/%E5%BB%BA%E5%9B%BD%E8%A8%98%E5%BF%B5%E6%97%A5">建国記念日</a>ですので、<a href="http://dict.hjenglish.com/jp/w/%E7%B4%8D%E6%9C%9F">納期</a>を一週間延期したいと思います。</p><p>良い例：<br>休日無しで残業を予定していますが、ご<a href="http://dict.hjenglish.com/jp/w/%E5%AD%98%E7%9F%A5">存知</a>のようにテストが遅れていますので、<br>可能であれば納期を一週間延長したほうが品質<a href="http://dict.hjenglish.com/jp/w/%E7%A2%BA%E4%BF%9D">確保</a>に役立つと認識しております。<br>ご意見はいかがでしょうか、ご<a href="http://dict.hjenglish.com/jp/w/%E6%8C%87%E7%A4%BA">指示</a>お待ちしております。</p><p>（3）附件的文件名应该采用日文或英文，避免发送中文文件名的附件。因为在日文系统中，中文文件名会变成乱码。</p><p>（4） 邮件的书写应保持排版整洁、字体统一。<br>　　· 杜绝中日文同时存在的现象。<br>　　· 一般每行不超过35个字，即每35个字要敲回车换行（※日本人的习惯，字数可调）</p><p>（5）向对方提出要求时，应提供充分的理由和目的。</p><p>例：<br>明後日には試験作業に入る予定です。そのため、ご<a href="http://dict.hjenglish.com/jp/w/%E5%A4%9A%E5%BF%99">多忙</a>中恐縮ですが、<br>至急送付予定の試験仕様書をご提供頂けますでしょうか。<br>明日までに提供できない場合、試験が遅れる<a href="http://dict.hjenglish.com/jp/w/%E5%8F%AF%E8%83%BD%E6%80%A7">可能性</a>がありますので、<br><a href="http://dict.hjenglish.com/jp/w/%E3%81%AA%E3%81%AB%E3%81%A8%E3%81%9E">なにとぞ</a>よろしくお願いします。</p><p>（6）使用的术语要统一。</p><p>例：<br><a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E7%B4%A2">検索</a>、<a href="http://dict.hjenglish.com/jp/w/%E6%8D%9C%E7%B4%A2">捜索</a>、<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%BC%E3%83%81">サーチ</a>　→　検索<br><a href="http://dict.hjenglish.com/jp/w/%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF">パラメータ</a>、<a href="http://dict.hjenglish.com/jp/w/%E5%BC%95%E6%95%B0">引数</a>　→　引数</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>开放式讨论，不用隐藏～<br>大家来说说看吧，为什么上面那个“良くない例”不能这么写呢？<br>或者工作中遇到的类似情况，该如何应对？</p><p>良くない例：<br>10月1日－7日は中国の建国記念日ですので、納期を一週間延期したいと思います。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】邮件（2）</title>
      <link href="/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件（2）"><a href="#邮件（2）" class="headerlink" title="邮件（2）"></a>邮件（2）</h1><p>在对日软件开发过程中，邮件是与日方交流最为重要的手段之一。写好日文邮件可以让我们在商务交往中如鱼得水，从容应对各种问题。另外，使用邮件能够将重要的交流信息形成文字，保存下来，以备今后查阅～</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～における（～においての）　在～，在～方面<br>　　前接体言，表示事物涉及的范围，地点。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E4%BC%81%E6%A5%AD">企業</a>における<a href="http://dict.hjenglish.com/jp/w/%E6%95%99%E8%82%B2">教育</a>。　　企业的教育。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E9%96%8B%E7%99%BA">開発</a>においての<a href="http://dict.hjenglish.com/jp/w/%E8%AA%B2%E9%A1%8C">課題</a>。　开发中存在的课题。</p><p>（2）～お願い申し上げます（～お願いします）　请～，拜托了<br>　　お、御（ご）＋动词连用形、サ变动词的词干+<a href="http://dict.hjenglish.com/jp/w/%E7%94%B3%E3%81%97%E4%B8%8A%E3%81%92%E3%82%8B">申し上げる</a>，对动作的对象表示敬意。</p><p>　　資料の<a href="http://dict.hjenglish.com/jp/w/%E9%80%81%E4%BB%98">送付</a>お願い申し上げます。　请您把资料送来。<br>　　ご<a href="http://dict.hjenglish.com/jp/w/%E5%8D%94%E5%8A%9B">協力</a>お願い申し上げます。　　　拜托给予协助。</p><p>（3）～了解いたしました（～了解しました）　知道了，了解了<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%81%84%E3%81%9F%E3%81%99">いたす</a>是する的自谦语，有了解、懂得、理解之意。</p><p>　　メールの内容を了解いたしました。　已经了解邮件的内容。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%B9%E3%82%B1%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB">スケジュール</a>を了解しました。　　　日程方面的事情，已经知道了。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）先日お願いした資料をまだ頂いておりません、明日まで送付できない場合、テストの<a href="http://dict.hjenglish.com/jp/w/%E9%80%B2%E6%8D%97">進捗</a>に<a href="http://dict.hjenglish.com/jp/w/%E5%BD%B1%E9%9F%BF">影響</a>を<a href="http://dict.hjenglish.com/jp/w/%E5%8F%8A%E3%81%BC%E3%81%99">及ぼす</a>事になりますので、至急<a href="http://dict.hjenglish.com/jp/w/%E5%AF%BE%E5%BF%9C">対応</a>よろしくお願いいたします。</p><p>　尚未收到几天前向贵公司索要的资料。如果明天之内不能发过来的话，将会影响测试的进度，因此请尽快办理。</p><p>（2）ご<a href="http://dict.hjenglish.com/jp/w/%E8%A6%81%E6%9C%9B">要望</a>は了解致しました。<a href="http://dict.hjenglish.com/jp/w/%E8%87%B3%E6%80%A5">至急</a>関係者と<a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E8%A8%8E">検討</a>し、明日には連絡致します。</p><p>　我们已经了解贵方的请求。我们将火速与相关人员讨论，并于明天与贵方联系。</p><p>（3）Aの<a href="http://dict.hjenglish.com/jp/w/%E4%BB%B6">件</a>について<a href="http://dict.hjenglish.com/jp/w/%E5%A0%B1%E5%91%8A">報告</a>させて頂きます。</p><p>　现就A事件进行报告。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>次の（　　）に適当な言葉を書いてください。</p><p>1）今までは<a href="http://dict.hjenglish.com/jp/w/%E7%B5%B6%E5%A4%A7">絶大</a>なご<a href="http://dict.hjenglish.com/jp/w/%E5%8E%9A%E6%83%85">厚情</a>を（　　）、（　　）感謝しております。<br>2）プロジェクト開発（　　）課題などの<a href="http://dict.hjenglish.com/jp/w/%E8%AD%B0%E8%AB%96">議論</a>·交流。<br>3）<a href="http://dict.hjenglish.com/jp/w/%E7%99%BA%E6%B3%A8">発注</a>計画については（　　　）ました。<br>4）これからもよろしく（　　　）。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>1）今まではな絶大ご厚情を（頂き）、（心から）感謝しております。<br>2）プロジェクト開発（における）課題などの議論·交流。<br>3）発注計画については（了解いたし）ました。<br>3）これからも引き続きよろしく（お願い申し上げます）。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>楽しもう。　开心起来。  </p><p>塞翁失马，焉知非福。不管遇到什么，积极地让自己开心起来吧～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】邮件（3）</title>
      <link href="/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%883%EF%BC%89/"/>
      <url>/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件（3）"><a href="#邮件（3）" class="headerlink" title="邮件（3）"></a>邮件（3）</h1><p>在对日软件开发过程中，邮件是与日方交流最为重要的手段之一。写好日文邮件可以让我们在商务交往中如鱼得水，从容应对各种问题。另外，使用邮件能够将重要的交流信息形成文字，保存下来，以备今后查阅～</p><h2 id="【例文】"><a href="#【例文】" class="headerlink" title="【例文】"></a><strong>【例文】</strong></h2><p>田中　部長殿：</p><p>いつもお世話になっております。<br>○○SOFTの張です。</p><p>上海ご<a href="http://dict.hjenglish.com/jp/w/%E6%9D%A5%E8%A8%AA">来訪</a>なさることで<a href="http://dict.hjenglish.com/jp/w/%E5%A4%A7%E5%A4%89">大変</a>嬉しく思っております。</p><p>2017年度<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8B%E6%9C%9F">下期</a>には<a href="http://dict.hjenglish.com/jp/w/%E5%BE%A1%E7%A4%BE">御社</a>から絶大なご厚情を頂き、心から感謝しております。<br>また、今まで<a href="http://dict.hjenglish.com/jp/w/%E5%BC%8A%E7%A4%BE">弊社</a>に対するご支援、ご指導どうもありがとうございました。<br>ご提案の＊＊＊<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88">プロジェクト</a>開発における課題などの議論·交流はぜひよろしくお願いいたします。</p><p>2018年<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8A%E6%9C%9F">上期</a>の<a href="http://dict.hjenglish.com/jp/w/%E7%99%BA%E6%B3%A8">発注</a>計画については了解いたしました。<br><a href="http://dict.hjenglish.com/jp/w/%E6%97%A2%E5%AD%98">既存</a>問題をうまく改善することで、御社からの発注拡大の<a href="http://dict.hjenglish.com/jp/w/%E3%83%81%E3%83%A3%E3%83%AC%E3%83%B3%E3%82%B8">チャレンジ</a><a href="http://dict.hjenglish.com/jp/w/%E7%AB%8B%E3%81%A1%E5%90%91%E3%81%8B%E3%81%86">立ち向かう</a><a href="http://dict.hjenglish.com/jp/w/%E8%A6%9A%E6%82%9F">覚悟</a>でございます。これからも<a href="http://dict.hjenglish.com/jp/w/%E5%BC%95%E3%81%8D%E7%B6%9A%E3%81%8D">引き続き</a>よろしくお願い申し上げます。</p><p>4月上旬に2018年上期の<a href="http://dict.hjenglish.com/jp/w/%E5%A7%94%E8%A8%97">委託</a><a href="http://dict.hjenglish.com/jp/w/%E5%AE%9F%E7%B8%BE">実績</a>、開発課題、今後の組織<a href="http://dict.hjenglish.com/jp/w/%E4%BD%93%E5%88%B6">体制</a>などをそちらに送付する予定です。</p><p>では、4月21日のご来訪楽しみにしております。</p><p>以上</p><p>○○SOFT<br>ソフトウェア開発部<br>張××<br>電話番号：12345678<br>ファックス番号：87654321<br>ホームページ：…</p><h2 id="【译文】"><a href="#【译文】" class="headerlink" title="【译文】"></a><strong>【译文】</strong></h2><p>田中部长：</p><p>一直以来承蒙关照，我是○○软件的小张。<br>得知您将来访上海，非常高兴。</p><p>2007年下半年，承蒙贵公司的关照，在此由衷地表示感谢。<br>同时对您多年以来给予我们的支持与指导表示感谢。<br>如您建议，关于开发过程中的课题，我们非常愿意跟贵公司进行探讨和沟通。</p><p>另外，关于2008上半年的订货计划，我们已经很清楚了。我们将努力改善现有的问题，来迎接贵公司增加订货的挑战。希望得到贵公司一如既往的支持和帮助。</p><p>4月上旬，我们将给贵公司发送2004上半年委托实际业绩，开发课题，今后的组织体制等资料。</p><p>最后，期盼您4月21日的来访。</p><p>就此</p><p>○○SOFT<br>软件开发部<br>张××<br>电话号码：12345678<br>传真号码：87654321<br>主页：…</p><h2 id="【简略要点】"><a href="#【简略要点】" class="headerlink" title="【简略要点】"></a><strong>【简略要点】</strong></h2><p>邮件大致分3部分：对方姓名、主要目的及内容、署名</p><p>1）对方姓名一般写姓、尊称，用「<a href="http://dict.hjenglish.com/jp/w/%E6%AE%BF">殿</a>」还是用「<a href="http://dict.hjenglish.com/jp/w/%E6%A7%98">様</a>」要看情况，一般「様」可以用的范围比较广，男女都可以用，「殿」只用于男性。有职位的可写上职位，比如<a href="http://dict.hjenglish.com/jp/w/%E9%83%A8%E9%95%B7">部長</a>、<a href="http://dict.hjenglish.com/jp/w/%E8%AA%B2%E9%95%B7">課長</a>等，也可以带上部门，比如：×××部　○○部長様</p><p>2）主要内容前面一般会有句客套，然后自报家门说明自己是谁。比如：いつもお世話になっております。○○SOFTの張です。</p><p>3）邮件内容简明扼要、不宜太长，尽量使用日方常用的词汇，不能用中文或特殊符号，以免产生乱码。</p><p>4）最后就是自己的署名，一般公司都会有正规签名模板，在outlook等收发邮件工具中设置好就可以了。</p><h2 id="【开放提问】"><a href="#【开放提问】" class="headerlink" title="【开放提问】"></a><strong>【开放提问】</strong></h2><p>如何写好邮件是一门比较深的学问。这里我只能抛砖引玉了，希望有经验的朋友们来分享更多具体关于邮件方面的点滴、自己的感想等。我会整理大家的回复，参与讨论奖励沪元50，无需隐藏。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>約束を守る。　一定要守约。</p><p>不守约的人是不会被信任的，答应了就一定要做，约好了就一定要准时。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】邮件（1）</title>
      <link href="/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%881%EF%BC%89/"/>
      <url>/2025/08/15/%E9%82%AE%E4%BB%B6%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件（1）"><a href="#邮件（1）" class="headerlink" title="邮件（1）"></a>邮件（1）</h1><p>在对日软件开发过程中，邮件是与日方交流最为重要的手段之一。写好日文邮件可以让我们在商务交往中如鱼得水，从容应对各种问题。另外，使用邮件能够将重要的交流信息形成文字，保存下来，以备今后查阅～</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～ております（～ています）　表示行动还在进行或继续<br>　　前接动词连用形，おる是いる的自谦形，表示对对方的尊敬。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E7%9B%B8%E8%AB%87">相談</a>に乗っております。　　正在参与商量。<br>　　試験を行っております。　　正在进行试验。</p><p>（2）～を頂く　（从别人那里）得到<br>　　前接体言、形式名词，<a href="http://dict.hjenglish.com/jp/w/%E9%A0%82%E3%81%8F">頂く</a>「いただく」是领受动词，是もらう的自谦语。</p><p>　　ご<a href="http://dict.hjenglish.com/jp/w/%E6%8C%87%E5%B0%8E">指導</a>をいただきました。 　得到指导了。<br>　　ご<a href="http://dict.hjenglish.com/jp/w/%E5%9B%9E%E7%AD%94">回答</a>をいただきました。　 得到答复了。</p><p>（3）～に対する　对于～、对～<br>　　前接体言，表示行为或事物涉及的对象。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E6%AE%8B%E6%A5%AD">残業</a>に対する態度。　　对加班的态度。<br>　　弊社に対するご<a href="http://dict.hjenglish.com/jp/w/%E6%94%AF%E6%8F%B4">支援</a>。　对于我公司的支持。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）初めまして、A公司B部の李と申します。今回のプロジェクトは私が<a href="http://dict.hjenglish.com/jp/w/%E6%8B%85%E5%BD%93&type=jc">担当する</a>ことになりましたので、よろしくお願いいたします。</p><p>　　初次见面，我是A公司B部的小李。这次的项目由我来负责，所以请多关照。</p><p>（2）先週の<a href="http://dict.hjenglish.com/jp/w/%E9%80%B2%E6%8D%97">進捗</a>報告書を送付します。ご確認宜しくお願いします。</p><p>　　现发送上周的进度报告书，请确认。</p><p>（3）ご連絡どうもありがとうございます。<a href="http://dict.hjenglish.com/jp/w/%E8%87%B3%E6%80%A5">至急</a>原因を調査し、結果が出る次第連絡致します。遅くても明日には状況を報告します。</p><p>　　谢谢联络。我们将立即着手调查原因，一有结果便与贵方联系。最迟将于明天向贵方通报进展情况。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>中日单词互译^^</p><p>発注（　　　）　　プロジェクト（　　　）　　打ち合わせ（　　　）　　送付（　　　）</p><p>贵公司（　　　）　　我公司（　　　）　　邮件地址（　　　）　　附件（　　　）</p><p>翻译这个句子：对工作的责任心。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E7%99%BA%E6%B3%A8">発注</a>（订货）　　<a href="http://dict.hjenglish.com/jp/w/%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88">プロジェクト</a>（project，项目）　　<a href="http://dict.hjenglish.com/jp/w/%E6%89%93%E3%81%A1%E5%90%88%E3%82%8F%E3%81%9B">打ち合わせ</a>（商洽）　　<a href="http://dict.hjenglish.com/jp/w/%E9%80%81%E4%BB%98">送付</a>（发送）</p><p>贵公司（<a href="http://dict.hjenglish.com/jp/w/%E5%BE%A1%E7%A4%BE">御社</a>）　　我公司（<a href="http://dict.hjenglish.com/jp/w/%E5%BC%8A%E7%A4%BE">弊社</a>）　　邮件地址（<a href="http://dict.hjenglish.com/jp/w/%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9">メールアドレス</a>）　　附件（<a href="http://dict.hjenglish.com/jp/w/%E6%B7%BB%E4%BB%98%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB">添付ファイル</a>）</p><p>仕事に対する<a href="http://dict.hjenglish.com/jp/w/%E8%B2%AC%E4%BB%BB%E6%84%9F">責任感</a>。 </p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>自分で動こう。　让自己主动起来。</p><p>没有机会就创造机会，让自己动起来，把握主动权。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】问题点管理表</title>
      <link href="/2025/08/15/%E9%97%AE%E9%A2%98%E7%82%B9%E7%AE%A1%E7%90%86%E8%A1%A8/"/>
      <url>/2025/08/15/%E9%97%AE%E9%A2%98%E7%82%B9%E7%AE%A1%E7%90%86%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="问题点管理表"><a href="#问题点管理表" class="headerlink" title="问题点管理表"></a>问题点管理表</h1><p>问题点管理表简称QA（Question Answer）表。在理解式样书、编写设计书以及编码等过程中将产生很多问题，通过问题点管理表可以确保没有遗漏并最终得到解决。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～が<a href="http://dict.hjenglish.com/jp/w/%E5%8E%9F%E5%9B%A0">原因</a>です（だ、である）　原因是～<br>　　前接体言、形式名词、用言句节，用来说明原因。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%A6%E3%82%A3%E3%83%AB%E3%82%B9">ウィルス</a>が原因です。　　原因是有病毒。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91">文字化け</a>が原因だ。　　原因是有文字乱码。</p><p>（2）～ですが～　虽然～但是～<br>　　前接用言终止形，起逆态接续作用。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E5%93%81%E8%B3%AA">品質</a>がいいですが、<a href="http://dict.hjenglish.com/jp/w/%E6%80%A7%E8%83%BD">性能</a>は良くありません。　虽然质量很好，但是性能不太好。<br>　　明日は<a href="http://dict.hjenglish.com/jp/w/%E4%BC%91%E6%97%A5">休日</a>ですが、<a href="http://dict.hjenglish.com/jp/w/%E6%AE%8B%E6%A5%AD">残業</a>します。　明天虽然是休息日，但是要加班。</p><p>（3）～に関して　关于～，对于～<br>　　前接体言，表示事物或行为所涉及的对象。</p><p>　　<a href="http://dict.hjenglish.com/jp/w/%E7%8A%B6%E6%B3%81">状況</a>に関して確認します。　　　　对情况进行确认。<br>　　<a href="http://dict.hjenglish.com/jp/w/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3">セキュリティ</a>に関して<a href="http://dict.hjenglish.com/jp/w/%E6%A4%9C%E8%A8%8E">検討</a>します。　研究有关安全的问题。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E5%8F%82%E7%85%A7">参照</a>画面に「××年××月度」の項目がありますが、それは<a href="http://dict.hjenglish.com/jp/w/%E5%92%8C%E6%9A%A6">和暦</a>ですか、それとも<a href="http://dict.hjenglish.com/jp/w/%E8%A5%BF%E6%9A%A6">西暦</a>ですか。</p><p>　　在参照画面上有“××年××月度”的项目，此项目是和历还是公历？</p><p>（2）<a href="http://dict.hjenglish.com/jp/w/%E6%A6%82%E8%A6%81">概要</a>には休止処理が記載されていますが、画面には対応項目がありません。<a href="http://dict.hjenglish.com/jp/w/%E8%BF%BD%E5%8A%A0&type=jc">追加する</a>必要がありますか。</p><p>　　概要中虽然有中止处理的记述，但在画面上却没有对应的项目。需要追加吗？</p><p>（3）問題記述：<a href="http://dict.hjenglish.com/jp/w/%E5%B8%B3%E7%A5%A8">帳票</a>設計書<a href="http://dict.hjenglish.com/jp/w/%E3%82%B7%E3%83%BC%E3%83%88">シート</a>にて金額フィールド<a href="http://dict.hjenglish.com/jp/w/%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88">フォーマット</a>の「ZZ,ZZZ,ZZZ,ZZ9」は11<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%82%A4%E3%83%88">バイト</a>ですが「データ定義仕様書」では12バイトになっています。<br>　　回答：帳票設計書の<a href="http://dict.hjenglish.com/jp/w/%E8%AA%A4%E3%82%8A">誤り</a>です。12バイトでお願いします。修正した設計書を送付致します。申し訳ありません。</p><p>　　问题描述：在帐票设计书Sheet中，金额字段的格式“ZZ,ZZZ,ZZZ,ZZ9”是11字节，而在“数据定义式样书”中该字段为12字节。<br>　　回答：是帐票设计书出错了。请按照12字节做。现发送修改完的设计书。非常抱歉。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下列句子^^</p><p>（1）<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8D%E6%AD%A3">不正</a>なデータが入力されたのが原因です。</p><p>（2）テスト仕様書に関して、すべてのテスト項目を<a href="http://dict.hjenglish.com/jp/w/%E7%B6%B2%E7%BE%85&type=jc">網羅する</a>のはなかなか難しいと思います。</p><p>（3）「社員名」が<a href="http://dict.hjenglish.com/jp/w/%E6%97%A2%E3%81%AB">既に</a>存在する場合、同一の社員名を入力すると、エラーとしますか？それとも、<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8A%E6%9B%B8%E3%81%8D">上書き</a>しますか？</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）原因是输入了不正确的数据。</p><p>（2）关于测试式样书，我认为很难做到包含所有的测试项。<br>※这句我感觉翻译不到位，大致解释一下吧。在拟定测试式样书时，一般要求是必须测试到所有的功能。也就是测试项的分布要覆盖到所有功能，并尽量保持均衡。</p><p>（3）当“员工名”已经存在时，如果输入同样的员工名，是报错呢？还是，覆盖掉（原本存在的员工名）呢？</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p>誰かに話そう。　找人聊聊吧。<br>开心的事，不开心的事，多跟身边的家人朋友聊一聊，与大家分享。</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【对日开发】结合测试式样书（2）</title>
      <link href="/2025/08/15/%E7%BB%93%E5%90%88%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%882%EF%BC%89/"/>
      <url>/2025/08/15/%E7%BB%93%E5%90%88%E6%B5%8B%E8%AF%95%E5%BC%8F%E6%A0%B7%E4%B9%A6%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="结合测试式样书（2）"><a href="#结合测试式样书（2）" class="headerlink" title="结合测试式样书（2）"></a>结合测试式样书（2）</h1><p>在单体测试之后，要将各模块组装进行结合测试。主要是测试各功能结合起来后是否会出问题、模块与模块之间的交互等等。</p><h2 id="【语法】"><a href="#【语法】" class="headerlink" title="【语法】"></a><strong>【语法】</strong></h2><p>（1）～まま　仍旧，原封不动，如实<br>　　连体形、（体言+の）+まま，表示保持原状不变地做某件事情。常用ままに的形式，表示任意的行为状态，可译为“任意”“任凭”。</p><p>　　項目が<a href="http://dict.hjenglish.com/jp/w/%E7%A9%BA%E6%AC%84">空欄</a>のままでは<a href="http://dict.hjenglish.com/jp/w/%E3%82%B5%E3%83%96%E3%83%9F%E3%83%83%E3%83%88">サブミット</a>できません。　项目仍为空栏时不能提交。<br>　　問題点を<a href="http://dict.hjenglish.com/jp/w/%E6%94%BE%E7%BD%AE&type=jc">放置する</a>ままではいけません。　问题点不能置之不理。</p><p>（2）～ず　不～<br>　　ず是文语否定助动词，前接用言未然形，相当于口语中的ない。</p><p>　　忘れずに<a href="http://dict.hjenglish.com/jp/w/%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97">バックアップ</a>を実施します。　不要忘记做备份。<br>　　ほかに<a href="http://dict.hjenglish.com/jp/w/%E5%BD%B1%E9%9F%BF">影響</a>を<a href="http://dict.hjenglish.com/jp/w/%E4%B8%8E%E3%81%88%E3%82%8B&type=jc">与えず</a>変更点のみを修正します。　不影响其他部分，只修改变更点。</p><h2 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a><strong>【实例】</strong></h2><p>（1）期間が<a href="http://dict.hjenglish.com/jp/w/%E9%80%86%E8%BB%A2">逆転</a>している（過去に<a href="http://dict.hjenglish.com/jp/w/%E3%81%95%E3%81%8B%E3%81%AE%E3%81%BC%E3%82%8B&type=jc">さかのぼった</a>日付で入力されている）まま、「登録·変更」ボタンを押した場合、エラーを<a href="http://dict.hjenglish.com/jp/w/%E9%80%9A%E7%9F%A5">通知</a>することを確認。</p><p>　　在期间颠倒的状态下（输入了过去的日期），按下“保存&#x2F;变更”按钮时，确认是否通知出错。</p><p>（2）自動<a href="http://dict.hjenglish.com/jp/w/%E8%A8%88%E7%AE%97">計算</a>された「<a href="http://dict.hjenglish.com/jp/w/%E6%AE%8B%E9%A1%8D">残額</a>」の値が<a href="http://dict.hjenglish.com/jp/w/%E3%83%9E%E3%82%A4%E3%83%8A%E3%82%B9">マイナス</a>の場合、数字が<a href="http://dict.hjenglish.com/jp/w/%E8%B5%A4%E8%89%B2">赤色</a>になることを確認します。</p><p>　　自动计算出来的“余额”值为负数时，确认数字是否变成红色。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E3%83%9E%E3%83%BC%E3%82%AF">マーク</a>の表示が<a href="http://dict.hjenglish.com/jp/w/%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB">スクロール</a>に<a href="http://dict.hjenglish.com/jp/w/%E9%80%A3%E5%8B%95">連動</a>せずに元の表示のままであること。</p><p>　　标记的表示不会因滚动条的滚动而随之改变，仍旧按照原状态表示。</p><h2 id="【作业】"><a href="#【作业】" class="headerlink" title="【作业】"></a><strong>【作业】</strong></h2><p>翻译下面的句子^^</p><p>（1）データベースから正しい「使用額」の値を<a href="http://dict.hjenglish.com/jp/w/%E5%8F%96%E5%BE%97">取得</a>していることを確認します。</p><p>（2）妥当性を<a href="http://dict.hjenglish.com/jp/w/%E5%88%A4%E6%96%AD">判断</a>せず言われたままに<a href="http://dict.hjenglish.com/jp/w/%E8%A1%8C%E5%8B%95">行動</a>してもだめです。</p><p>（3）<a href="http://dict.hjenglish.com/jp/w/%E7%94%BB%E5%83%8F">画像</a>生成は<a href="http://dict.hjenglish.com/jp/w/%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%AB">キャンセル</a>されずに<a href="http://dict.hjenglish.com/jp/w/%E7%B6%9A%E8%A1%8C">続行</a>することを<a href="http://dict.hjenglish.com/jp/w/%E3%83%AD%E3%82%B0">ログ</a>にて確認してください。</p><h2 id="【答案】"><a href="#【答案】" class="headerlink" title="【答案】"></a><strong>【答案】</strong></h2><p>（1）确认是否从数据库中取得了正确的“使用额”值。</p><p>（2）不对合理性作判断而完全依照对方所说的来做，这也是不行的。</p><p>（3）请在log中确认图像生成（处理）未被取消仍旧在执行。</p><h2 id="【每期一句】"><a href="#【每期一句】" class="headerlink" title="【每期一句】"></a><strong>【每期一句】</strong></h2><p><a href="http://dict.hjenglish.com/jp/w/%E6%BA%96%E5%82%99">準備</a>が<a href="http://dict.hjenglish.com/jp/w/%E5%A4%A7%E4%BA%8B">大事</a>。　准备工作尤为重要。</p><p>事先安排、做好准备，可以事半功倍哦～</p>]]></content>
      
      
      <categories>
          
          <category> 日语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue好啊，Vue得学</title>
      <link href="/2025/03/07/vuelearning/"/>
      <url>/2025/03/07/vuelearning/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Vue3简介"><a href="#1-Vue3简介" class="headerlink" title="1. Vue3简介"></a>1. Vue3简介</h1><ul><li>2020年9月18日，<code>Vue.js</code>发布版<code>3.0</code>版本，代号：<code>One Piece</code>（n</li><li>经历了：<a href="https://github.com/vuejs/core/commits/main">4800+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs">40+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is:pr+is:merged+-author:app/dependabot-preview+">600+次PR</a>、<a href="https://github.com/vuejs/core/graphs/contributors">300+贡献者</a></li><li>官方发版地址：<a href="https://github.com/vuejs/core/releases/tag/v3.0.0">Release v3.0.0 One Piece · vuejs&#x2F;core</a></li><li>截止2023年10月，最新的公开版本为：<code>3.3.4</code></li></ul><h2 id="1-1-【性能的提升】"><a href="#1-1-【性能的提升】" class="headerlink" title="1.1. 【性能的提升】"></a>1.1. 【性能的提升】</h2><ul><li><p>打包大小减少<code>41%</code>。</p></li><li><p>初次渲染快<code>55%</code>, 更新渲染快<code>133%</code>。</p></li><li><p>内存减少<code>54%</code>。</p></li></ul><h2 id="1-2-【-源码的升级】"><a href="#1-2-【-源码的升级】" class="headerlink" title="1.2.【 源码的升级】"></a>1.2.【 源码的升级】</h2><ul><li><p>使用<code>Proxy</code>代替<code>defineProperty</code>实现响应式。</p></li><li><p>重写虚拟<code>DOM</code>的实现和<code>Tree-Shaking</code>。</p></li></ul><h2 id="1-3-【拥抱TypeScript】"><a href="#1-3-【拥抱TypeScript】" class="headerlink" title="1.3. 【拥抱TypeScript】"></a>1.3. 【拥抱TypeScript】</h2><ul><li><code>Vue3</code>可以更好的支持<code>TypeScript</code>。</li></ul><h2 id="1-4-【新的特性】"><a href="#1-4-【新的特性】" class="headerlink" title="1.4. 【新的特性】"></a>1.4. 【新的特性】</h2><ol><li><p><code>Composition API</code>（组合<code>API</code>）：</p><ul><li><p><code>setup</code></p></li><li><p><code>ref</code>与<code>reactive</code></p></li><li><p><code>computed</code>与<code>watch</code></p><p>……</p></li></ul></li><li><p>新的内置组件：</p><ul><li><p><code>Fragment</code></p></li><li><p><code>Teleport</code></p></li><li><p><code>Suspense</code></p><p>……</p></li></ul></li><li><p>其他改变：</p><ul><li><p>新的生命周期钩子</p></li><li><p><code>data</code> 选项应始终被声明为一个函数</p></li><li><p>移除<code>keyCode</code>支持作为<code> v-on</code> 的修饰符</p><p>……</p></li></ul></li></ol><h1 id="2-创建Vue3工程"><a href="#2-创建Vue3工程" class="headerlink" title="2. 创建Vue3工程"></a>2. 创建Vue3工程</h1><h2 id="2-1-【基于-vue-cli-创建】"><a href="#2-1-【基于-vue-cli-创建】" class="headerlink" title="2.1. 【基于 vue-cli 创建】"></a>2.1. 【基于 vue-cli 创建】</h2><p>点击查看<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create">官方文档</a></p><blockquote><p>备注：目前<code>vue-cli</code>已处于维护模式，官方推荐基于 <code>Vite</code> 创建项目。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上</span></span><br><span class="line">vue <span class="literal">--version</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装或者升级你的@vue/cli </span></span><br><span class="line">npm install <span class="literal">-g</span> @vue/<span class="built_in">cli</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行创建命令</span></span><br><span class="line">vue create vue_test</span><br><span class="line"></span><br><span class="line"><span class="comment">##  随后选择3.x</span></span><br><span class="line"><span class="comment">##  Choose a version of Vue.js that you want to start the project with (Use arrow keys)</span></span><br><span class="line"><span class="comment">##  &gt; 3.x</span></span><br><span class="line"><span class="comment">##    2.x</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动</span></span><br><span class="line"><span class="built_in">cd</span> vue_test</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><hr><h2 id="2-2-【基于-vite-创建】-推荐"><a href="#2-2-【基于-vite-创建】-推荐" class="headerlink" title="2.2. 【基于 vite 创建】(推荐)"></a>2.2. 【基于 vite 创建】(推荐)</h2><p><code>vite</code> 是新一代前端构建工具，官网地址：<a href="https://vitejs.cn/">https://vitejs.cn</a>，<code>vite</code>的优势如下：</p><ul><li>轻量快速的热重载（<code>HMR</code>），能实现极速的服务启动。</li><li>对 <code>TypeScript</code>、<code>JSX</code>、<code>CSS</code> 等支持开箱即用。</li><li>真正的按需编译，不再等待整个应用编译完成。</li><li><code>webpack</code>构建 与 <code>vite</code>构建对比图如下：<br><img src="../../../../images/1683167182037-71c78210-8217-4e7d-9a83-e463035efbbe.png" alt="webpack构建" title="webpack构建" style="zoom:20%;box-shadow:0 0 10px black" />    <img src="../../../../images/1683167204081-582dc237-72bc-499e-9589-2cdfd452e62f.png" alt="vite构建" title="vite构建" style="zoom: 20%;box-shadow:0 0 10px black" /></li></ul><ul><li>具体操作如下（点击查看<a href="https://cn.vuejs.org/guide/quick-start.html#creating-a-vue-application">官方文档</a>）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 1.创建命令</span></span><br><span class="line">npm create vue@latest</span><br><span class="line"></span><br><span class="line"><span class="comment">## 2.具体配置</span></span><br><span class="line"><span class="comment">## 配置项目名称</span></span><br><span class="line">√ Project name: vue3_test</span><br><span class="line"><span class="comment">## 是否添加TypeScript支持</span></span><br><span class="line">√ Add TypeScript?  Yes</span><br><span class="line"><span class="comment">## 是否添加JSX支持</span></span><br><span class="line">√ Add JSX Support?  No</span><br><span class="line"><span class="comment">## 是否添加路由环境</span></span><br><span class="line">√ Add Vue Router <span class="keyword">for</span> Single Page Application development?  No</span><br><span class="line"><span class="comment">## 是否添加pinia环境</span></span><br><span class="line">√ Add Pinia <span class="keyword">for</span> state management?  No</span><br><span class="line"><span class="comment">## 是否添加单元测试</span></span><br><span class="line">√ Add Vitest <span class="keyword">for</span> Unit Testing?  No</span><br><span class="line"><span class="comment">## 是否添加端到端测试方案</span></span><br><span class="line">√ Add an <span class="keyword">End</span><span class="literal">-to-End</span> Testing Solution? » No</span><br><span class="line"><span class="comment">## 是否添加ESLint语法检查</span></span><br><span class="line">√ Add ESLint <span class="keyword">for</span> code quality?  Yes</span><br><span class="line"><span class="comment">## 是否添加Prettiert代码格式化</span></span><br><span class="line">√ Add Prettier <span class="keyword">for</span> code formatting?  No</span><br></pre></td></tr></table></figure><p>自己动手编写一个App组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h1&gt;你好啊！&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;App&#x27; //组件名</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .app &#123;</span><br><span class="line">    background-color: #ddd;</span><br><span class="line">    box-shadow: 0 0 10px;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    padding: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>安装官方推荐的<code>vscode</code>插件：</p><img src="../../../../images/volar.png" alt="Snipaste_2023-10-08_20-46-34" style="zoom:50%;" /> <img src="../../../../images/image-20231218085906380.png" alt="image-20231218085906380" style="zoom:42%;" /> <p>总结：</p><ul><li><code>Vite</code> 项目中，<code>index.html</code> 是项目的入口文件，在项目最外层。</li><li>加载<code>index.html</code>后，<code>Vite</code> 解析 <code>&lt;script type=&quot;module&quot; src=&quot;xxx&quot;&gt;</code> 指向的<code>JavaScript</code>。</li><li><code>Vue3</code>**中是通过 **<code>createApp</code> 函数创建一个应用实例。</li></ul><h2 id="2-3-【一个简单的效果】"><a href="#2-3-【一个简单的效果】" class="headerlink" title="2.3. 【一个简单的效果】"></a>2.3. 【一个简单的效果】</h2><p><code>Vue3</code>向下兼容<code>Vue2</code>语法，且<code>Vue3</code>中的模板中可以没有根标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        name:&#x27;张三&#x27;,</span><br><span class="line">        age:18,</span><br><span class="line">        tel:&#x27;13888888888&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      changeName()&#123;</span><br><span class="line">        this.name = &#x27;zhang-san&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      changeAge()&#123;</span><br><span class="line">        this.age += 1</span><br><span class="line">      &#125;,</span><br><span class="line">      showTel()&#123;</span><br><span class="line">        alert(this.tel)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="3-Vue3核心语法"><a href="#3-Vue3核心语法" class="headerlink" title="3. Vue3核心语法"></a>3. Vue3核心语法</h1><h2 id="3-1-【OptionsAPI-与-CompositionAPI】"><a href="#3-1-【OptionsAPI-与-CompositionAPI】" class="headerlink" title="3.1.  【OptionsAPI 与 CompositionAPI】"></a>3.1.  【OptionsAPI 与 CompositionAPI】</h2><ul><li><code>Vue2</code>的<code>API</code>设计是<code>Options</code>（配置）风格的。</li><li><code>Vue3</code>的<code>API</code>设计是<code>Composition</code>（组合）风格的。</li></ul><h3 id="Options-API-的弊端"><a href="#Options-API-的弊端" class="headerlink" title="Options API 的弊端"></a>Options API 的弊端</h3><p><code>Options</code>类型的 <code>API</code>，数据、方法、计算属性等，是分散在：<code>data</code>、<code>methods</code>、<code>computed</code>中的，若想新增或者修改一个需求，就需要分别修改：<code>data</code>、<code>methods</code>、<code>computed</code>，不便于维护和复用。</p><p><img src="../../../../images/1696662197101-55d2b251-f6e5-47f4-b3f1-d8531bbf9279.gif" alt="1.gif" style="zoom:70%;border-radius:20px" /><img src="../../../../images/1696662200734-1bad8249-d7a2-423e-a3c3-ab4c110628be.gif" alt="2.gif" style="zoom:70%;border-radius:20px" /></p><h3 id="Composition-API-的优势"><a href="#Composition-API-的优势" class="headerlink" title="Composition API 的优势"></a>Composition API 的优势</h3><p>可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。</p><p><img src="../../../../images/1696662249851-db6403a1-acb5-481a-88e0-e1e34d2ef53a.gif" alt="3.gif" style="height:300px;border-radius:10px"  /><img src="../../../../images/1696662256560-7239b9f9-a770-43c1-9386-6cc12ef1e9c0.gif" alt="4.gif" style="height:300px;border-radius:10px"  /></p><blockquote><p>说明：以上四张动图原创作者：大帅老猿</p></blockquote><h2 id="3-2-【拉开序幕的-setup】"><a href="#3-2-【拉开序幕的-setup】" class="headerlink" title="3.2. 【拉开序幕的 setup】"></a>3.2. 【拉开序幕的 setup】</h2><h3 id="setup-概述"><a href="#setup-概述" class="headerlink" title="setup 概述"></a>setup 概述</h3><p><code>setup</code>是<code>Vue3</code>中一个新的配置项，值是一个函数，它是 <code>Composition API</code> <strong>“表演的舞台</strong><em><strong>”</strong></em>，组件中所用到的：数据、方法、计算属性、监视……等等，均配置在<code>setup</code>中。</p><p>特点如下：</p><ul><li><code>setup</code>函数返回的对象中的内容，可直接在模板中使用。</li><li><code>setup</code>中访问<code>this</code>是<code>undefined</code>。</li><li><code>setup</code>函数会在<code>beforeCreate</code>之前调用，它是“领先”所有钩子执行的。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Person&#x27;,</span><br><span class="line">    setup()&#123;</span><br><span class="line">      // 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据）</span><br><span class="line">      let name = &#x27;张三&#x27;</span><br><span class="line">      let age = 18</span><br><span class="line">      let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">      // 方法，原来写在methods中</span><br><span class="line">      function changeName()&#123;</span><br><span class="line">        name = &#x27;zhang-san&#x27; //注意：此时这么修改name页面是不变化的</span><br><span class="line">        console.log(name)</span><br><span class="line">      &#125;</span><br><span class="line">      function changeAge()&#123;</span><br><span class="line">        age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class="line">        console.log(age)</span><br><span class="line">      &#125;</span><br><span class="line">      function showTel()&#123;</span><br><span class="line">        alert(tel)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 返回一个对象，对象中的内容，模板中可以直接使用</span><br><span class="line">      return &#123;name,age,tel,changeName,changeAge,showTel&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="setup-的返回值"><a href="#setup-的返回值" class="headerlink" title="setup 的返回值"></a>setup 的返回值</h3><ul><li>若返回一个<strong>对象</strong>：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**</li><li>若返回一个<strong>函数</strong>：则可以自定义渲染内容，代码如下：</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">()=&gt;</span> <span class="string">&#x27;你好啊！&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="setup-与-Options-API-的关系"><a href="#setup-与-Options-API-的关系" class="headerlink" title="setup 与 Options API 的关系"></a>setup 与 Options API 的关系</h3><ul><li><code>Vue2</code> 的配置（<code>data</code>、<code>methos</code>……）中<strong>可以访问到</strong> <code>setup</code>中的属性、方法。</li><li>但在<code>setup</code>中<strong>不能访问到</strong><code>Vue2</code>的配置（<code>data</code>、<code>methos</code>……）。</li><li>如果与<code>Vue2</code>冲突，则<code>setup</code>优先。</li></ul><h3 id="setup-语法糖"><a href="#setup-语法糖" class="headerlink" title="setup 语法糖"></a>setup 语法糖</h3><p><code>setup</code>函数有一个语法糖，这个语法糖，可以让我们把<code>setup</code>独立出去，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;Person&#x27;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 下面的写法是setup语法糖 --&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  console.log(this) //undefined</span><br><span class="line">  </span><br><span class="line">  // 数据（注意：此时的name、age、tel都不是响应式数据）</span><br><span class="line">  let name = &#x27;张三&#x27;</span><br><span class="line">  let age = 18</span><br><span class="line">  let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changName()&#123;</span><br><span class="line">    name = &#x27;李四&#x27;//注意：此时这么修改name页面是不变化的</span><br><span class="line">  &#125;</span><br><span class="line">  function changAge()&#123;</span><br><span class="line">    console.log(age)</span><br><span class="line">    age += 1 //注意：此时这么修改age页面是不变化的</span><br><span class="line">  &#125;</span><br><span class="line">  function showTel()&#123;</span><br><span class="line">    alert(tel)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>扩展：上述代码，还需要编写一个不写<code>setup</code>的<code>script</code>标签，去指定组件名字，比较麻烦，我们可以借助<code>vite</code>中的插件简化</p><ol><li>第一步：<code>npm i vite-plugin-vue-setup-extend -D</code></li><li>第二步：<code>vite.config.ts</code></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueSetupExtend</span> <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-vue-setup-extend&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [ <span class="title class_">VueSetupExtend</span>() ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>第三步：<code>&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</code></li></ol><h2 id="3-3-【ref-创建：基本类型的响应式数据】"><a href="#3-3-【ref-创建：基本类型的响应式数据】" class="headerlink" title="3.3. 【ref 创建：基本类型的响应式数据】"></a>3.3. 【ref 创建：基本类型的响应式数据】</h2><ul><li>**作用：**定义响应式变量。</li><li><strong>语法：</strong><code>let xxx = ref(初始值)</code>。</li><li>**返回值：**一个<code>RefImpl</code>的实例对象，简称<code>ref对象</code>或<code>ref</code>，<code>ref</code>对象的<code>value</code><strong>属性是响应式的</strong>。</li><li><strong>注意点：</strong><ul><li><code>tS</code>中操作数据需要：<code>xxx.value</code>，但模板中不需要<code>.value</code>，直接使用即可。</li><li>何时需要<code>.value</code>？模板中不需要；包裹在响应式对象里面的ref不需要；未包裹的ref需要。</li><li>对于<code>let name = ref(&#39;张三&#39;)</code>来说，<code>name</code>不是响应式的，<code>name.value</code>是响应式的。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;年龄+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;showTel&quot;&gt;点我查看联系方式&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line">  // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。</span><br><span class="line">  let name = ref(&#x27;张三&#x27;)</span><br><span class="line">  let age = ref(18)</span><br><span class="line">  // tel就是一个普通的字符串，不是响应式的</span><br><span class="line">  let tel = &#x27;13888888888&#x27;</span><br><span class="line"></span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    // JS中操作ref对象时候需要.value</span><br><span class="line">    name.value = &#x27;李四&#x27;</span><br><span class="line">    console.log(name.value)</span><br><span class="line"></span><br><span class="line">    // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。</span><br><span class="line">    // name = ref(&#x27;zhang-san&#x27;)</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    // JS中操作ref对象时候需要.value</span><br><span class="line">    age.value += 1 </span><br><span class="line">    console.log(age.value)</span><br><span class="line">  &#125;</span><br><span class="line">  function showTel()&#123;</span><br><span class="line">    alert(tel)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-4-【reactive-创建：对象类型的响应式数据】"><a href="#3-4-【reactive-创建：对象类型的响应式数据】" class="headerlink" title="3.4. 【reactive 创建：对象类型的响应式数据】"></a>3.4. 【reactive 创建：对象类型的响应式数据】</h2><ul><li><strong>作用：<strong>定义一个</strong>响应式对象</strong>（基本类型不要用它，要用<code>ref</code>，否则报错）</li><li><strong>语法：</strong><code>let 响应式对象= reactive(源对象)</code>。</li><li>**返回值：**一个<code>Proxy</code>的实例对象，简称：响应式对象。</li><li><strong>注意点：</strong><code>reactive</code>定义的响应式数据是“深层次”的。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 数据</span><br><span class="line">let car = reactive(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class="line">let games = reactive([</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class="line">])</span><br><span class="line">let obj = reactive(&#123;</span><br><span class="line">  a:&#123;</span><br><span class="line">    b:&#123;</span><br><span class="line">      c:&#123;</span><br><span class="line">        d:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function changeCarPrice() &#123;</span><br><span class="line">  car.price += 10</span><br><span class="line">&#125;</span><br><span class="line">function changeFirstGame() &#123;</span><br><span class="line">  games[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class="line">&#125;</span><br><span class="line">function test()&#123;</span><br><span class="line">  obj.a.b.c.d = 999</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-5-【ref-创建：对象类型的响应式数据】"><a href="#3-5-【ref-创建：对象类型的响应式数据】" class="headerlink" title="3.5. 【ref 创建：对象类型的响应式数据】"></a>3.5. 【ref 创建：对象类型的响应式数据】</h2><ul><li>其实<code>ref</code>接收的数据可以是：<strong>基本类型</strong>、<strong>对象类型</strong>。</li><li>若<code>ref</code>接收的是对象类型，内部其实也是调用了<code>reactive</code>函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;汽车信息：一台&#123;&#123; car.brand &#125;&#125;汽车，价值&#123;&#123; car.price &#125;&#125;万&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;游戏列表：&lt;/h2&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c.d&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCarPrice&quot;&gt;修改汽车价格&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFirstGame&quot;&gt;修改第一游戏&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 数据</span><br><span class="line">let car = ref(&#123; brand: &#x27;奔驰&#x27;, price: 100 &#125;)</span><br><span class="line">let games = ref([</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa01&#x27;, name: &#x27;英雄联盟&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa02&#x27;, name: &#x27;王者荣耀&#x27; &#125;,</span><br><span class="line">  &#123; id: &#x27;ahsgdyfa03&#x27;, name: &#x27;原神&#x27; &#125;</span><br><span class="line">])</span><br><span class="line">let obj = ref(&#123;</span><br><span class="line">  a:&#123;</span><br><span class="line">    b:&#123;</span><br><span class="line">      c:&#123;</span><br><span class="line">        d:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(car)</span><br><span class="line"></span><br><span class="line">function changeCarPrice() &#123;</span><br><span class="line">  car.value.price += 10</span><br><span class="line">&#125;</span><br><span class="line">function changeFirstGame() &#123;</span><br><span class="line">  games.value[0].name = &#x27;流星蝴蝶剑&#x27;</span><br><span class="line">&#125;</span><br><span class="line">function test()&#123;</span><br><span class="line">  obj.value.a.b.c.d = 999</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-6-【ref-对比-reactive】"><a href="#3-6-【ref-对比-reactive】" class="headerlink" title="3.6. 【ref 对比 reactive】"></a>3.6. 【ref 对比 reactive】</h2><p>宏观角度看：</p><blockquote><ol><li><p><code>ref</code>用来定义：<strong>基本类型数据</strong>、<strong>对象类型数据</strong>；</p></li><li><p><code>reactive</code>用来定义：<strong>对象类型数据</strong>。</p></li></ol></blockquote><ul><li>区别：</li></ul><blockquote><ol><li><p><code>ref</code>创建的变量必须使用<code>.value</code>（可以使用<code>volar</code>插件自动添加<code>.value</code>）。</p><img src="../../../../images/自动补充value.png" alt="自动补充value" style="zoom:90%;border-radius:20px" /> </li><li><p><code>reactive</code>重新分配一个新对象，会<strong>失去</strong>响应式（可以使用<code>Object.assign</code>去整体替换）。</p><p><code> Object.assign(car, &#123; brand: &#39;奥拓&#39;, price: 1 &#125;)</code></p></li></ol></blockquote><ul><li>使用原则：</li></ul><blockquote><ol><li>若需要一个基本类型的响应式数据，必须使用<code>ref</code>。</li><li>若需要一个响应式对象，层级不深，<code>ref</code>、<code>reactive</code>都可以。</li><li>若需要一个响应式对象，且层级较深，推荐使用<code>reactive</code>。</li></ol></blockquote><h2 id="3-7-【toRefs-与-toRef】"><a href="#3-7-【toRefs-与-toRef】" class="headerlink" title="3.7. 【toRefs 与 toRef】"></a>3.7. 【toRefs 与 toRef】</h2><ul><li>作用：将一个响应式对象中的每一个属性，转换为<code>ref</code>对象。并且改变解构的值，也会影响到原响应式对象的值。</li><li>备注：<code>toRefs</code>与<code>toRef</code>功能一致，但<code>toRefs</code>可以批量转换。</li><li>语法如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123;person.name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123;person.age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;性别：&#123;&#123;person.gender&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeGender&quot;&gt;修改性别&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,reactive,toRefs,toRef&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;name:&#x27;张三&#x27;, age:18, gender:&#x27;男&#x27;&#125;)</span><br><span class="line"></span><br><span class="line">  // 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力</span><br><span class="line">  //改变name和gender的值，也会影响到person里面的值</span><br><span class="line">  let &#123;name,gender&#125; =  toRefs(person)</span><br><span class="line"></span><br><span class="line">  // 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力</span><br><span class="line">  let age = toRef(person,&#x27;age&#x27;)</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    name.value += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    age.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeGender()&#123;</span><br><span class="line">    gender.value = &#x27;女&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-8-【computed】"><a href="#3-8-【computed】" class="headerlink" title="3.8. 【computed】"></a>3.8. 【computed】</h2><p>作用：根据已有数据计算出新数据（和<code>Vue2</code>中的<code>computed</code>作用一致）。</p><p>实现同样的功能，方法function没有缓存，模板调用几次，函数就执行几次；计算属性computed有缓存，模板调用多次，实际上只执行一次。</p><p>计算属性实际上是一个ref响应式对象，因此赋值时候需要加上<code>.value</code></p><img src="../../../../images/computed.gif" style="zoom:20%;" />  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    姓：&lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt; &lt;br&gt;</span><br><span class="line">    名：&lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt; &lt;br&gt;</span><br><span class="line">    全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br&gt;</span><br><span class="line">    全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;changeFullName&quot;&gt;全名改为：li-si&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;App&quot;&gt;</span><br><span class="line">  import &#123;ref,computed&#125; from &#x27;vue&#x27;//引入computed</span><br><span class="line"></span><br><span class="line">  let firstName = ref(&#x27;zhang&#x27;)</span><br><span class="line">  let lastName = ref(&#x27;san&#x27;)</span><br><span class="line"></span><br><span class="line">  // 计算属性——只读取，不修改</span><br><span class="line">  /* let fullName = computed(()=&gt;&#123;</span><br><span class="line">    return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class="line">  &#125;) */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  // 计算属性——既读取又修改</span><br><span class="line">  let fullName = computed(&#123;</span><br><span class="line">    // 读取</span><br><span class="line">    get()&#123;</span><br><span class="line">      return firstName.value + &#x27;-&#x27; + lastName.value</span><br><span class="line">    &#125;,</span><br><span class="line">    // 修改</span><br><span class="line">    set(val)&#123;</span><br><span class="line">      console.log(&#x27;有人修改了fullName&#x27;,val)</span><br><span class="line">      firstName.value = val.split(&#x27;-&#x27;)[0]</span><br><span class="line">      lastName.value = val.split(&#x27;-&#x27;)[1]</span><br><span class="line">      //第二种写法  </span><br><span class="line">      //const [str1,str2] = val.split(&#x27;-&#x27;)</span><br><span class="line">      //firstName.value = str1</span><br><span class="line">      //lastName.value = str2</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  function changeFullName()&#123;</span><br><span class="line">    fullName.value = &#x27;li-si&#x27;//引起set的val变化</span><br><span class="line">  &#125; </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-9-【watch】"><a href="#3-9-【watch】" class="headerlink" title="3.9.【watch】"></a>3.9.【watch】</h2><ul><li>作用：监视数据的变化（和<code>Vue2</code>中的<code>watch</code>作用一致）</li><li>特点：<code>Vue3</code>中的<code>watch</code>只能监视以下<strong>四种数据</strong>：</li></ul><blockquote><ol><li><code>ref</code>定义的数据。</li><li><code>reactive</code>定义的数据。</li><li>函数返回一个值（<code>getter</code>函数）。</li><li>一个包含上述内容的数组。</li></ol></blockquote><p>我们在<code>Vue3</code>中使用<code>watch</code>的时候，通常会遇到以下几种情况：</p><h3 id="情况一"><a href="#情况一" class="headerlink" title="* 情况一"></a>* 情况一</h3><p>监视<code>ref</code>定义的【基本类型】数据：直接写数据名即可，监视的是其<code>value</code>值的改变。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况一：监视【ref】定义的【基本类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let sum = ref(0)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeSum()&#123;</span><br><span class="line">    sum.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  // 监视，情况一：监视【ref】定义的【基本类型】数据</span><br><span class="line">  const stopWatch = watch(sum,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;sum变化了&#x27;,newValue,oldValue)</span><br><span class="line">    if(newValue &gt;= 10)&#123;</span><br><span class="line">      stopWatch()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况二"><a href="#情况二" class="headerlink" title="* 情况二"></a>* 情况二</h3><p>监视<code>ref</code>定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。</p><blockquote><p>注意：</p><ul><li><p>若修改的是<code>ref</code>定义的对象中的属性，<code>newValue</code> 和 <code>oldValue</code> 都是新值，因为它们是同一个对象。</p></li><li><p>若修改整个<code>ref</code>定义的对象，<code>newValue</code> 是新值， <code>oldValue</code> 是旧值，因为不是同一个对象了。</p></li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况二：监视【ref】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let person = ref(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.value.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.value.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changePerson()&#123;</span><br><span class="line">    person.value = &#123;name:&#x27;李四&#x27;,age:90&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  /* </span><br><span class="line">    监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视</span><br><span class="line">    watch的第一个参数是：被监视的数据</span><br><span class="line">    watch的第二个参数是：监视的回调</span><br><span class="line">    watch的第三个参数是：配置对象（deep、immediate等等.....） </span><br><span class="line">  */</span><br><span class="line">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true,immediate:true&#125;)</span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况三"><a href="#情况三" class="headerlink" title="*  情况三"></a>*  情况三</h3><p>监视<code>reactive</code>定义的【对象类型】数据，且默认开启了深度监视，且深层监视无法关闭。</p><p>无法监视地址值，因为对象地址值没有改变，本质上assign在原对象上进行的是赋值。</p><p><code>newValue</code>和<code>oldValue</code>值相同，都是新值，还是因为对象地址值没有改变，本质上assign在原对象上进行的是赋值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况三：监视【reactive】定义的【对象类型】数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changePerson&quot;&gt;修改整个人&lt;/button&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;h2&gt;测试：&#123;&#123;obj.a.b.c&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;test&quot;&gt;修改obj.a.b.c&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18</span><br><span class="line">  &#125;)</span><br><span class="line">  let obj = reactive(&#123;</span><br><span class="line">    a:&#123;</span><br><span class="line">      b:&#123;</span><br><span class="line">        c:666</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changePerson()&#123;</span><br><span class="line">   // person = &#123; name: &#x27;李四&#x27;, age: 80 &#125;//直接修改，不行</span><br><span class="line">  // person = reactive(&#123; name: &#x27;李四&#x27;, age: 80 &#125;)//reactive包裹修改，也不行</span><br><span class="line">    Object.assign(person,&#123;name:&#x27;李四&#x27;,age:80&#125;)//本质上替换了原person的每个属性值</span><br><span class="line">  &#125;</span><br><span class="line">  function test()&#123;</span><br><span class="line">    obj.a.b.c = 888</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的</span><br><span class="line">  watch(person,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;)</span><br><span class="line">  watch(obj,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;Obj变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况四"><a href="#情况四" class="headerlink" title="* 情况四"></a>* 情况四</h3><p>监视<code>ref</code>或<code>reactive</code>定义的【对象类型】数据中的<strong>某个属性</strong>，注意点如下：</p><ol><li><p>若该属性值<strong>不是</strong>【对象类型】即【基本类型】，需要写成函数形式，此时oldValue是旧值，newValue是新值。</p></li><li><p>若该属性值是<strong>依然</strong>是【对象类型】，可直接编，也可写成函数，建议写成函数。</p><blockquote><p>**直接写：**可以监视到对象内部属性a，b…的变化，但是监视不到整体的变化。整体改变时，对象地址值变化了，所以监视不到了。</p><p>**写函数（不开启深度监视）：**监视不到对象内部属性a，b…的变化，但是可以监视到整体的变化，函数返回值监视的是对象的地址值，改变整体是产生一个新对象，所以能监视到，并且新值是新值，旧值是旧值。（不过对象内部属性a，b…的新旧值都是新值）</p><p>**写函数（开启深度监视）推荐：**既能监视到对象内部属性a，b…的变化，也可以监视到整体的变化，函数返回值监视的是对象的地址值，改变整体是产生一个新对象，所以能监视到，并且新值是新值，旧值是旧值。（不过对象内部属性a，b…的新旧值都是新值）</p></blockquote></li></ol><p>结论：监视的要是对象里的属性，那么最好写函数式。</p><p>注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18,</span><br><span class="line">    car:&#123;</span><br><span class="line">      c1:&#x27;奔驰&#x27;,</span><br><span class="line">      c2:&#x27;宝马&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC1()&#123;</span><br><span class="line">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC2()&#123;</span><br><span class="line">    person.car.c2 = &#x27;大众&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeCar()&#123;</span><br><span class="line">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是【基本类型】的，要写成函数式</span><br><span class="line">  /* watch(()=&gt; person.name,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.name变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;) */</span><br><span class="line"></span><br><span class="line">  // 监视，情况四：监视响应式对象中的某个属性，且该属性是【对象类型】的，可以直接写，也能写函数，更推荐写函数</span><br><span class="line">  //直接写：</span><br><span class="line">  watch(person.car, (newValue, oldValue) =&gt; &#123;</span><br><span class="line">  console.log(&#x27;person.car变化了&#x27;, newValue, oldValue)</span><br><span class="line">&#125;, &#123; deep: true &#125;)</span><br><span class="line">  //写函数（不开启深度监视）：</span><br><span class="line">  watch(()=&gt;person.car,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;)</span><br><span class="line">  //写函数（开启深度监视）：</span><br><span class="line">  watch(()=&gt;person.car,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="情况五"><a href="#情况五" class="headerlink" title="* 情况五"></a>* 情况五</h3><p>监视上述的多个数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;情况五：监视上述的多个数据&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; person.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; person.age &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;汽车：&#123;&#123; person.car.c1 &#125;&#125;、&#123;&#123; person.car.c2 &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeName&quot;&gt;修改名字&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeAge&quot;&gt;修改年龄&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC1&quot;&gt;修改第一台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeC2&quot;&gt;修改第二台车&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeCar&quot;&gt;修改整个车&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;reactive,watch&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let person = reactive(&#123;</span><br><span class="line">    name:&#x27;张三&#x27;,</span><br><span class="line">    age:18,</span><br><span class="line">    car:&#123;</span><br><span class="line">      c1:&#x27;奔驰&#x27;,</span><br><span class="line">      c2:&#x27;宝马&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeName()&#123;</span><br><span class="line">    person.name += &#x27;~&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeAge()&#123;</span><br><span class="line">    person.age += 1</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC1()&#123;</span><br><span class="line">    person.car.c1 = &#x27;奥迪&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeC2()&#123;</span><br><span class="line">    person.car.c2 = &#x27;大众&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">  function changeCar()&#123;</span><br><span class="line">    person.car = &#123;c1:&#x27;雅迪&#x27;,c2:&#x27;爱玛&#x27;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 监视，情况五：监视上述的多个数据</span><br><span class="line">  watch([()=&gt;person.name,person.car],(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(&#x27;person.car变化了&#x27;,newValue,oldValue)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-10-【watchEffect】"><a href="#3-10-【watchEffect】" class="headerlink" title="3.10. 【watchEffect】"></a>3.10. 【watchEffect】</h2><ul><li><p>官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。</p></li><li><p><code>watch</code>对比<code>watchEffect</code></p><blockquote><ol><li><p>都能监听响应式数据的变化，不同的是监听数据变化的方式不同</p></li><li><p><code>watch</code>：要明确指出监视的数据</p></li><li><p><code>watchEffect</code>：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。</p></li></ol></blockquote></li><li><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1&gt;需求：水温达到50℃，或水位达到20cm，则联系服务器&lt;/h1&gt;</span><br><span class="line">    &lt;h2 id=&quot;demo&quot;&gt;水温：&#123;&#123;temp&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;水位：&#123;&#123;height&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changePrice&quot;&gt;水温+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;水位+10&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,watch,watchEffect&#125; from &#x27;vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let temp = ref(0)</span><br><span class="line">  let height = ref(0)</span><br><span class="line"></span><br><span class="line">  // 方法</span><br><span class="line">  function changePrice()&#123;</span><br><span class="line">    temp.value += 10</span><br><span class="line">  &#125;</span><br><span class="line">  function changeSum()&#123;</span><br><span class="line">    height.value += 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 用watch实现，需要明确的指出要监视：temp、height</span><br><span class="line">  watch([temp,height],(value)=&gt;&#123;</span><br><span class="line">    // 从value中获取最新的temp值、height值</span><br><span class="line">    const [newTemp,newHeight] = value</span><br><span class="line">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class="line">    if(newTemp &gt;= 50 || newHeight &gt;= 20)&#123;</span><br><span class="line">      console.log(&#x27;联系服务器&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  // 用watchEffect实现，不用</span><br><span class="line">  const stopWtach = watchEffect(()=&gt;&#123;</span><br><span class="line">    // 室温达到50℃，或水位达到20cm，立刻联系服务器</span><br><span class="line">    if(temp.value &gt;= 50 || height.value &gt;= 20)&#123;</span><br><span class="line">      console.log(document.getElementById(&#x27;demo&#x27;)?.innerText)</span><br><span class="line">      console.log(&#x27;联系服务器&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">    // 水温达到100，或水位达到50，取消监视</span><br><span class="line">    if(temp.value === 100 || height.value === 50)&#123;</span><br><span class="line">      console.log(&#x27;清理了&#x27;)</span><br><span class="line">      stopWtach()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-11-【标签的-ref-属性】"><a href="#3-11-【标签的-ref-属性】" class="headerlink" title="3.11. 【标签的 ref 属性】"></a>3.11. 【标签的 ref 属性】</h2><p>作用：用于注册模板引用。</p><blockquote><ul><li><p>用在普通<code>DOM</code>标签上，获取的是<code>DOM</code>节点。</p></li><li><p>用在组件标签上，获取的是组件实例对象。</p></li></ul></blockquote><p>用在普通<code>DOM</code>标签上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h1 ref=&quot;title1&quot;&gt;尚硅谷&lt;/h1&gt;</span><br><span class="line">    &lt;h2 ref=&quot;title2&quot;&gt;前端&lt;/h2&gt;</span><br><span class="line">    &lt;h3 ref=&quot;title3&quot;&gt;Vue&lt;/h3&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; ref=&quot;inpt&quot;&gt; &lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;button @click=&quot;showLog&quot;&gt;点我打印内容&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  let title1 = ref()</span><br><span class="line">  let title2 = ref()</span><br><span class="line">  let title3 = ref()</span><br><span class="line"></span><br><span class="line">  function showLog()&#123;</span><br><span class="line">    // 通过id获取元素</span><br><span class="line">    const t1 = document.getElementById(&#x27;title1&#x27;)</span><br><span class="line">    // 打印内容</span><br><span class="line">    console.log((t1 as HTMLElement).innerText)</span><br><span class="line">    console.log((&lt;HTMLElement&gt;t1).innerText)</span><br><span class="line">    console.log(t1?.innerText)</span><br><span class="line">    </span><br><span class="line">/************************************/</span><br><span class="line"></span><br><span class="line">    // 通过ref获取元素</span><br><span class="line">    console.log(title1.value)</span><br><span class="line">    console.log(title2.value)</span><br><span class="line">    console.log(title3.value)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>用在组件标签上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件App.vue --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Person ref=&quot;ren&quot;/&gt;</span><br><span class="line">  &lt;button @click=&quot;test&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">  import Person from &#x27;./components/Person.vue&#x27;</span><br><span class="line">  import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  let ren = ref()</span><br><span class="line"></span><br><span class="line">  function test()&#123;</span><br><span class="line">    console.log(ren.value.name)</span><br><span class="line">    console.log(ren.value.age)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 子组件Person.vue中要使用defineExpose暴露内容 --&gt;</span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123;ref,defineExpose&#125; from &#x27;vue&#x27;</span><br><span class="line">// 数据</span><br><span class="line">  let name = ref(&#x27;张三&#x27;)</span><br><span class="line">  let age = ref(18)</span><br><span class="line">  /****************************/</span><br><span class="line">  /****************************/</span><br><span class="line">  // 使用defineExpose将组件中的数据导出交给外部</span><br><span class="line">  defineExpose(&#123;name,age&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>函数模板使用：</p><p>可以动态获取ref绑定的元素对象</p><ul><li>ref绑定为一个函数，<strong>会在每次组件更新时都被调用，函数的第一个参数el为元素引用</strong></li><li>当绑定的元素被卸载时，函数也会被调用一次，此时的 el 参数会是 null</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">:ref</span>=<span class="string">&quot;(el) =&gt; &#123; /* 将 el 赋值给一个数据属性或 ref 变量 */ &#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div v-if=&quot;flag&quot;&gt;</span><br><span class="line">        &lt;h1 :ref=&quot;(el) =&gt; (refAttr[0] = el)&quot;&gt;尚硅谷&lt;/h1&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;input :ref=&quot;(el) =&gt; (refAttr[1] = el)&quot; type=&quot;text&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;showLog&quot;&gt;点我打印内容&lt;/button&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;button @click=&quot;showLog2&quot;&gt;销毁元素并打印内容&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span><br><span class="line">import &#123; ref, nextTick &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">let flag = ref(true)</span><br><span class="line">let refAttr = ref&lt;any[]&gt;([])</span><br><span class="line"></span><br><span class="line">function showLog() &#123;</span><br><span class="line">    // 获取元素的值</span><br><span class="line">    console.log(refAttr.value[0].innerText)</span><br><span class="line">    console.log(refAttr.value[1].value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function showLog2() &#123;</span><br><span class="line">    // 元素销毁时，元素引用会被设置为null</span><br><span class="line">    flag.value = false // 销毁所有元素</span><br><span class="line">    // 等待dom元素更新后执行</span><br><span class="line">    nextTick(() =&gt; &#123;</span><br><span class="line">        console.log(refAttr.value[0]) // null</span><br><span class="line">        console.log(refAttr.value[1]) // null</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-12-【props】"><a href="#3-12-【props】" class="headerlink" title="3.12. 【props】"></a>3.12. 【props】</h2><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个接口，限制每个Person对象的格式</span></span><br><span class="line"><span class="keyword">export</span> interface <span class="title class_">PersonInter</span> &#123;</span><br><span class="line"><span class="attr">id</span>:string,</span><br><span class="line"><span class="attr">name</span>:string,</span><br><span class="line"><span class="attr">age</span>:number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个自定义类型Persons</span></span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">Persons</span> = <span class="title class_">Array</span>&lt;<span class="title class_">PersonInter</span>&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code>中代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;Person :list=&quot;persons&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">import Person from &#x27;./components/Person.vue&#x27;</span><br><span class="line">import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123;type Persons&#125; from &#x27;./types&#x27;</span><br><span class="line"></span><br><span class="line">let persons = reactive&lt;Persons&gt;([</span><br><span class="line">   &#123;id:&#x27;e98219e12&#x27;,name:&#x27;张三&#x27;,age:18&#125;,</span><br><span class="line">   &#123;id:&#x27;e98219e13&#x27;,name:&#x27;李四&#x27;,age:19&#125;,</span><br><span class="line">   &#123;id:&#x27;e98219e14&#x27;,name:&#x27;王五&#x27;,age:20&#125;</span><br><span class="line">])</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>Person.vue</code>中代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;person&quot;&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">     &#123;&#123;item.name&#125;&#125;--&#123;&#123;item.age&#125;&#125;</span><br><span class="line">   &lt;/li&gt;</span><br><span class="line"> &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">import &#123;defineProps&#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123;type PersonInter&#125; from &#x27;@/types&#x27;</span><br><span class="line"></span><br><span class="line">// 第一种写法：仅接收</span><br><span class="line">// const props = defineProps([&#x27;list&#x27;])</span><br><span class="line"></span><br><span class="line">// 第二种写法：接收 + 限制类型</span><br><span class="line">// defineProps&lt;&#123;list:Persons&#125;&gt;()</span><br><span class="line"></span><br><span class="line">// 第三种写法：接收 + 限制类型 + 指定默认值 + 限制必要性</span><br><span class="line">let props = withDefaults(defineProps&lt;&#123;list?:Persons&#125;&gt;(),&#123;</span><br><span class="line">  list:()=&gt;[&#123;id:&#x27;asdasg01&#x27;,name:&#x27;小猪佩奇&#x27;,age:18&#125;]</span><br><span class="line">&#125;)</span><br><span class="line">console.log(props)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="3-13-【生命周期】"><a href="#3-13-【生命周期】" class="headerlink" title="3.13. 【生命周期】"></a>3.13. 【生命周期】</h2><ul><li><p>概念：<code>Vue</code>组件实例在创建时要经历一系列的初始化步骤，在此过程中<code>Vue</code>会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子</p></li><li><p>规律：</p><blockquote><p>生命周期整体分为四个阶段，分别是：<strong>创建、挂载、更新、销毁</strong>，每个阶段都有两个钩子，一前一后。</p></blockquote></li><li><p><code>Vue2</code>的生命周期</p><blockquote><p>创建阶段：<code>beforeCreate</code>、<code>created</code></p><p>挂载阶段：<code>beforeMount</code>、<code>mounted</code></p><p>更新阶段：<code>beforeUpdate</code>、<code>updated</code></p><p>销毁阶段：<code>beforeDestroy</code>、<code>destroyed</code></p></blockquote></li><li><p><code>Vue3</code>的生命周期</p><blockquote><p>创建阶段：<code>setup</code></p><p>挂载阶段：<code>onBeforeMount</code>、<code>onMounted</code></p><p>更新阶段：<code>onBeforeUpdate</code>、<code>onUpdated</code></p><p>卸载阶段：<code>onBeforeUnmount</code>、<code>onUnmounted</code></p></blockquote></li><li><p>常用的钩子：<code>onMounted</code>(挂载完毕)、<code>onUpdated</code>(更新完毕)、<code>onBeforeUnmount</code>(卸载之前)</p></li><li><p>示例代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;person&quot;&gt;</span><br><span class="line">    &lt;h2&gt;当前求和为：&#123;&#123; sum &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;changeSum&quot;&gt;点我sum+1&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- vue3写法 --&gt;</span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;Person&quot;&gt;</span><br><span class="line">  import &#123; </span><br><span class="line">    ref, </span><br><span class="line">    onBeforeMount, </span><br><span class="line">    onMounted, </span><br><span class="line">    onBeforeUpdate, </span><br><span class="line">    onUpdated, </span><br><span class="line">    onBeforeUnmount, </span><br><span class="line">    onUnmounted </span><br><span class="line">  &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  // 数据</span><br><span class="line">  let sum = ref(0)</span><br><span class="line">  // 方法</span><br><span class="line">  function changeSum() &#123;</span><br><span class="line">    sum.value += 1</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(&#x27;setup&#x27;)</span><br><span class="line">  // 生命周期钩子</span><br><span class="line">  onBeforeMount(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;挂载之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;挂载完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onBeforeUpdate(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;更新之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUpdated(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;更新完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onBeforeUnmount(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;卸载之前&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUnmounted(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;卸载完毕&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-14-【自定义hook】"><a href="#3-14-【自定义hook】" class="headerlink" title="3.14. 【自定义hook】"></a>3.14. 【自定义hook】</h2><ul><li><p>什么是<code>hook</code>？—— 本质是一个函数，把<code>setup</code>函数中使用的<code>Composition API</code>进行了封装，类似于<code>vue2.x</code>中的<code>mixin</code>。</p></li><li><p>自定义<code>hook</code>的优势：复用代码, 让<code>setup</code>中的逻辑更清楚易懂。</p></li></ul><p>示例代码：</p><ul><li><p><code>useSum.ts</code>中内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;ref,onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    sum.<span class="property">value</span> += <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">decrement</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    sum.<span class="property">value</span> -= <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">increment</span>()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//向外部暴露数据</span></span><br><span class="line">  <span class="keyword">return</span> &#123;sum,increment,decrement&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>useDog.ts</code>中内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;reactive,onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios,&#123;<span class="title class_">AxiosError</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> dogList = reactive&lt;string[]&gt;([])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 方法</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getDog</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 发请求</span></span><br><span class="line">      <span class="keyword">let</span> &#123;data&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://dog.ceo/api/breed/pembroke/images/random&#x27;</span>)</span><br><span class="line">      <span class="comment">// 维护数据</span></span><br><span class="line">      dogList.<span class="title function_">push</span>(data.<span class="property">message</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="comment">// 处理错误</span></span><br><span class="line">      <span class="keyword">const</span> err = &lt;<span class="title class_">AxiosError</span>&gt;error</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 挂载钩子</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">getDog</span>()</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//向外部暴露数据</span></span><br><span class="line">  <span class="keyword">return</span> &#123;dogList,getDog&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>组件中具体使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;button @click=&quot;increment&quot;&gt;点我+1&lt;/button&gt;</span><br><span class="line">  &lt;button @click=&quot;decrement&quot;&gt;点我-1&lt;/button&gt;</span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  &lt;img v-for=&quot;(u,index) in dogList.urlList&quot; :key=&quot;index&quot; :src=&quot;(u as string)&quot;&gt; </span><br><span class="line">  &lt;span v-show=&quot;dogList.isLoading&quot;&gt;加载中......&lt;/span&gt;&lt;br&gt;</span><br><span class="line">  &lt;button @click=&quot;getDog&quot;&gt;再来一只狗&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">  import &#123;defineComponent&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  export default defineComponent(&#123;</span><br><span class="line">    name:&#x27;App&#x27;,</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">  import useSum from &#x27;./hooks/useSum&#x27;</span><br><span class="line">  import useDog from &#x27;./hooks/useDog&#x27;</span><br><span class="line"></span><br><span class="line">  let &#123;sum,increment,decrement&#125; = useSum()</span><br><span class="line">  let &#123;dogList,getDog&#125; = useDog()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="4-路由"><a href="#4-路由" class="headerlink" title="4. 路由"></a>4. 路由</h1><h2 id="4-1-【对路由的理解】"><a href="#4-1-【对路由的理解】" class="headerlink" title="4.1. 【对路由的理解】"></a>4.1. 【对路由的理解】</h2><img src="../../../../images/image-20231018144351536.png" alt="image-20231018144351536" style="zoom:20%;border-radius:40px" /> <h2 id="4-2-【基本切换效果】"><a href="#4-2-【基本切换效果】" class="headerlink" title="4.2. 【基本切换效果】"></a>4.2. 【基本切换效果】</h2><ul><li><p><code>Vue3</code>中要使用<code>vue-router</code>的最新版本，目前是<code>4</code>版本。</p></li><li><p>路由配置文件代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRouter,createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/News.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/About.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>main.ts</code>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>App.vue</code>代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h2 class=&quot;title&quot;&gt;Vue路由测试&lt;/h2&gt;</span><br><span class="line">    &lt;!-- 导航区 --&gt;</span><br><span class="line">    &lt;div class=&quot;navigate&quot;&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/home&quot; active-class=&quot;active&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/news&quot; active-class=&quot;active&quot;&gt;新闻&lt;/RouterLink&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/about&quot; active-class=&quot;active&quot;&gt;关于&lt;/RouterLink&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 展示区 --&gt;</span><br><span class="line">    &lt;div class=&quot;main-content&quot;&gt;</span><br><span class="line">      &lt;RouterView&gt;&lt;/RouterView&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot; setup name=&quot;App&quot;&gt;</span><br><span class="line">  import &#123;RouterLink,RouterView&#125; from &#x27;vue-router&#x27;  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-3-【两个注意点】"><a href="#4-3-【两个注意点】" class="headerlink" title="4.3. 【两个注意点】"></a>4.3. 【两个注意点】</h2><blockquote><ol><li><p>路由组件通常存放在<code>pages</code> 或 <code>views</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</p></li><li><p>通过点击导航，视觉效果上“消失” 了的路由组件，默认是被<strong>卸载</strong>掉的，需要的时候再去<strong>挂载</strong>。</p></li></ol></blockquote><ul><li>路由组件：靠路由规则渲染出来的。<code>route:[&#123;path:/demo,component:demo&#125;]</code></li><li>一般组件：亲手写出来的标签。<code>&lt;demo/&gt;</code></li></ul><h2 id="4-4-【路由器工作模式】"><a href="#4-4-【路由器工作模式】" class="headerlink" title="4.4.【路由器工作模式】"></a>4.4.【路由器工作模式】</h2><ol><li><p><code>history</code>模式</p><blockquote><p>优点：<code>URL</code>更加美观，不带有<code>#</code>，更接近传统的网站<code>URL</code>。</p><p>缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有<code>404</code>错误。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHistory</span>(), <span class="comment">//history模式</span></span><br><span class="line"><span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>各版本：</p><p>vue2——<code>mode:&#39;history&#39;</code></p><p>vue3——<code>history:createWebHistory()</code></p><p>React——<code>BrowserRouter</code></p></blockquote></li><li><p><code>hash</code>模式</p><blockquote><p>优点：兼容性更好，因为不需要服务器端处理路径。</p><p>缺点：<code>URL</code>带有<code>#</code>不太美观，且在<code>SEO</code>优化方面相对较差。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line"><span class="attr">history</span>:<span class="title function_">createWebHashHistory</span>(), <span class="comment">//hash模式</span></span><br><span class="line"><span class="comment">/******/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li></ol><h2 id="4-5-【to的两种写法】"><a href="#4-5-【to的两种写法】" class="headerlink" title="4.5. 【to的两种写法】"></a>4.5. 【to的两种写法】</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 第一种：to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 第二种：to的对象写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; :to=&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;&gt;Home&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h2 id="4-6-【命名路由】"><a href="#4-6-【命名路由】" class="headerlink" title="4.6. 【命名路由】"></a>4.6. 【命名路由】</h2><p>作用：可以简化路由跳转及传参（后面就讲）。</p><p>给路由规则命名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>跳转路由：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--简化前：需要写完整的路径（to的字符串写法） --&gt;</span><br><span class="line">&lt;!--to写法(通过路径）--&gt;</span><br><span class="line">&lt;router-link to=&quot;/news/detail&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--简化后：直接通过名字跳转（to的对象写法配合name属性） --&gt;</span><br><span class="line">&lt;!--:to写法(通过名字）--&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;name:&#x27;guanyu&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br><span class="line">&lt;!--:to写法(通过路径）--&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;path:&#x27;/about&#x27;&#125;&quot;&gt;跳转&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h2 id="4-7-【嵌套路由】"><a href="#4-7-【嵌套路由】" class="headerlink" title="4.7. 【嵌套路由】"></a>4.7. 【嵌套路由】</h2><ol><li><p>编写<code>News</code>的子路由：<code>Detail.vue</code></p></li><li><p>配置路由规则，使用<code>children</code>配置项：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">News</span>,</span><br><span class="line"><span class="attr">children</span>:[</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li><p>跳转路由（记得要加完整路径）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/news/detail&quot;&gt;xxxx&lt;/router-link&gt;</span><br><span class="line">&lt;!-- 或 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;xxxx&lt;/router-link&gt;</span><br></pre></td></tr></table></figure></li><li><p>记得去<code>Home</code>组件中预留一个<code>&lt;router-view&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;news&quot;&gt;</span><br><span class="line">    &lt;nav class=&quot;news-list&quot;&gt;</span><br><span class="line">      &lt;RouterLink v-for=&quot;news in newsList&quot; :key=&quot;news.id&quot; :to=&quot;&#123;path:&#x27;/news/detail&#x27;&#125;&quot;&gt;</span><br><span class="line">        &#123;&#123;news.name&#125;&#125;</span><br><span class="line">      &lt;/RouterLink&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;div class=&quot;news-detail&quot;&gt;</span><br><span class="line">      &lt;RouterView/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-8-【路由传参】"><a href="#4-8-【路由传参】" class="headerlink" title="4.8. 【路由传参】"></a>4.8. 【路由传参】</h2><h3 id="query参数"><a href="#query参数" class="headerlink" title="query参数"></a>query参数</h3><ol><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带query参数（to的字符串写法） --&gt;</span><br><span class="line">&lt;router-link to=&quot;/news/detail?a=1&amp;b=2&amp;content=欢迎你&quot;&gt;</span><br><span class="line">跳转</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带query参数（to的对象写法） --&gt;</span><br><span class="line">&lt;RouterLink </span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    //name:&#x27;xiang&#x27;, //用name也可以跳转</span><br><span class="line">    path:&#x27;/news/detail&#x27;,</span><br><span class="line">    query:&#123;</span><br><span class="line">      id:news.id,</span><br><span class="line">      title:news.title,</span><br><span class="line">      content:news.content</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印query参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="params参数"><a href="#params参数" class="headerlink" title="params参数"></a>params参数</h3><ol><li><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转并携带params参数（to的字符串写法） --&gt;</span><br><span class="line">&lt;RouterLink :to=&quot;`/news/detail/001/新闻001/内容001`&quot;&gt;&#123;&#123;news.title&#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 跳转并携带params参数（to的对象写法） --&gt;</span><br><span class="line">&lt;RouterLink </span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    name:&#x27;xiang&#x27;, //用name跳转</span><br><span class="line">    params:&#123;</span><br><span class="line">      id:news.id,</span><br><span class="line">      title:news.title,</span><br><span class="line">      content:news.title</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123;news.title&#125;&#125;</span><br><span class="line">&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="comment">// 打印params参数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">params</span>)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注1：传递<code>params</code>参数时，若使用<code>to</code>的对象写法，必须使用<code>name</code>配置项，不能用<code>path</code>。</p><p>备注2：传递<code>params</code>参数时，需要提前在规则中占位。</p></blockquote><h2 id="4-9-【路由的props配置】"><a href="#4-9-【路由的props配置】" class="headerlink" title="4.9. 【路由的props配置】"></a>4.9. 【路由的props配置】</h2><p>作用：让路由组件更方便的收到参数（可以将路由参数作为<code>props</code>传给组件）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiang&#x27;</span>,</span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;detail/:id/:title/:content&#x27;</span>,</span><br><span class="line"><span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:&#123;a:1,b:2,c:3&#125;, </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件</span></span><br><span class="line">  <span class="comment">// props:true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件</span></span><br><span class="line">  <span class="title function_">props</span>(<span class="params">route</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> route.<span class="property">query</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-10-【-replace属性】"><a href="#4-10-【-replace属性】" class="headerlink" title="4.10. 【 replace属性】"></a>4.10. 【 replace属性】</h2><ol><li><p>作用：控制路由跳转时操作浏览器历史记录的模式。</p></li><li><p>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>：</p><ul><li><code>push</code>是追加历史记录（默认值）。</li><li><code>replace</code>是替换当前记录。</li></ul></li><li><p>开启<code>replace</code>模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;RouterLink replace .......&gt;News&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-11-【编程式导航】"><a href="#4-11-【编程式导航】" class="headerlink" title="4.11. 【编程式导航】"></a>4.11. 【编程式导航】</h2><p>路由组件的两个重要的属性：<code>$route</code>和<code>$router</code>变成了两个<code>hooks</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute,useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">parmas</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">push</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">replace</span>)</span><br></pre></td></tr></table></figure><h2 id="4-12-【重定向】"><a href="#4-12-【重定向】" class="headerlink" title="4.12. 【重定向】"></a>4.12. 【重定向】</h2><ol><li><p>作用：将特定的路径，重新定向到已有路由。</p></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">redirect</span>:<span class="string">&#x27;/about&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="5-pinia"><a href="#5-pinia" class="headerlink" title="5. pinia"></a>5. pinia</h1><h2 id="5-1【准备一个效果】"><a href="#5-1【准备一个效果】" class="headerlink" title="5.1【准备一个效果】"></a>5.1【准备一个效果】</h2><img src="../../../../images/pinia_example.gif" alt="pinia_example" style="zoom:30%;border:3px solid" /> <h2 id="5-2【搭建-pinia-环境】"><a href="#5-2【搭建-pinia-环境】" class="headerlink" title="5.2【搭建 pinia 环境】"></a>5.2【搭建 pinia 环境】</h2><p>第一步：<code>npm install pinia</code></p><p>第二步：操作<code>src/main.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 引入createPinia，用于创建pinia */</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建pinia */</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用插件 */</span>&#123;&#125;</span><br><span class="line">app.<span class="title function_">use</span>(pinia)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>此时开发者工具中已经有了<code>pinia</code>选项</p><img src="https://cdn.nlark.com/yuque/0/2023/png/35780599/1684309952481-c67f67f9-d1a3-4d69-8bd6-2b381e003f31.png" style="zoom:80%;border:1px solid black;border-radius:10px" /><h2 id="5-3【存储-读取数据】"><a href="#5-3【存储-读取数据】" class="headerlink" title="5.3【存储+读取数据】"></a>5.3【存储+读取数据】</h2><ol><li><p><code>Store</code>是一个保存：<strong>状态</strong>、<strong>业务逻辑</strong> 的实体，每个组件都可以<strong>读取</strong>、<strong>写入</strong>它。</p></li><li><p>它有三个概念：<code>state</code>、<code>getter</code>、<code>action</code>，相当于组件中的： <code>data</code>、 <code>computed</code> 和 <code>methods</code>。</p></li><li><p>具体编码：<code>src/store/count.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">6</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>具体编码：<code>src/store/talk.ts</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;&#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">talkList</span>:[</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada01&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;</span>&#125;,</span><br><span class="line">     &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada02&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">id</span>:<span class="string">&#x27;yuysada03&#x27;</span>,<span class="attr">content</span>:<span class="string">&#x27;心里给你留了一块地，我的死心塌地&#x27;</span>&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中使用<code>state</code>中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;当前求和为：&#123;&#123; sumStore.sum &#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  // 引入对应的useXxxxxStore</span><br><span class="line">  import &#123;useSumStore&#125; from &#x27;@/store/sum&#x27;</span><br><span class="line">  </span><br><span class="line">  // 调用useXxxxxStore得到对应的store</span><br><span class="line">  const sumStore = useSumStore()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;talk in talkStore.talkList&quot; :key=&quot;talk.id&quot;&gt;</span><br><span class="line">      &#123;&#123; talk.content &#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  import axios from &#x27;axios&#x27;</span><br><span class="line">  import &#123;useTalkStore&#125; from &#x27;@/store/talk&#x27;</span><br><span class="line"></span><br><span class="line">  const talkStore = useTalkStore()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-4-【修改数据】-三种方式"><a href="#5-4-【修改数据】-三种方式" class="headerlink" title="5.4.【修改数据】(三种方式)"></a>5.4.【修改数据】(三种方式)</h2><ol><li><p>第一种修改方式，直接修改</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">countStore.<span class="property">sum</span> = <span class="number">666</span></span><br></pre></td></tr></table></figure></li><li><p>第二种修改方式：批量修改</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">countStore.$patch(&#123;</span><br><span class="line">  <span class="attr">sum</span>:<span class="number">999</span>,</span><br><span class="line">  <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>第三种修改方式：借助<code>action</code>修改（<code>action</code>中可以编写一些业务逻辑）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="comment">//加</span></span><br><span class="line">    <span class="title function_">increment</span>(<span class="params">value:number</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">sum</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="comment">//操作countStore中的sum</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> += value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//减</span></span><br><span class="line">    <span class="title function_">decrement</span>(<span class="params">value:number</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">sum</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sum</span> -= value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/*************/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中调用<code>action</code>即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用countStore</span></span><br><span class="line"><span class="keyword">const</span> countStore = <span class="title function_">useCountStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用对应action</span></span><br><span class="line">countStore.<span class="title function_">incrementOdd</span>(n.<span class="property">value</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-5-【storeToRefs】"><a href="#5-5-【storeToRefs】" class="headerlink" title="5.5.【storeToRefs】"></a>5.5.【storeToRefs】</h2><ul><li>借助<code>storeToRefs</code>将<code>store</code>中的数据转为<code>ref</code>对象，方便在模板中使用。</li><li>注意：<code>pinia</code>提供的<code>storeToRefs</code>只会将数据做转换，而<code>Vue</code>的<code>toRefs</code>会转换<code>store</code>中数据。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;count&quot;&gt;</span><br><span class="line">&lt;h2&gt;当前求和为：&#123;&#123;sum&#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Count&quot;&gt;</span><br><span class="line">  import &#123; useCountStore &#125; from &#x27;@/store/count&#x27;</span><br><span class="line">  /* 引入storeToRefs */</span><br><span class="line">  import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class="line"></span><br><span class="line">  /* 得到countStore */</span><br><span class="line">  const countStore = useCountStore()</span><br><span class="line">  /* 使用storeToRefs转换countStore，随后解构 */</span><br><span class="line">  const &#123;sum&#125; = storeToRefs(countStore)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-6-【getters】"><a href="#5-6-【getters】" class="headerlink" title="5.6.【getters】"></a>5.6.【getters】</h2><ol><li><p>概念：当<code>state</code>中的数据，需要经过处理后再使用时，可以使用<code>getters</code>配置。</p></li><li><p>追加<code>getters</code>配置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入defineStore用于创建store</span></span><br><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义并暴露一个store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCountStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;count&#x27;</span>,&#123;</span><br><span class="line">  <span class="comment">// 动作</span></span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">    <span class="comment">/************/</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 状态</span></span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">sum</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">school</span>:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="attr">getters</span>:&#123;</span><br><span class="line">    <span class="attr">bigSum</span>:(state):<span class="function"><span class="params">number</span> =&gt;</span> state.<span class="property">sum</span> *<span class="number">10</span>,</span><br><span class="line">    <span class="title function_">upperSchool</span>():string&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>. school.<span class="title function_">toUpperCase</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;increment,decrement&#125; = countStore</span><br><span class="line"><span class="keyword">let</span> &#123;sum,school,bigSum,upperSchool&#125; = <span class="title function_">storeToRefs</span>(countStore)</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-7-【-subscribe】"><a href="#5-7-【-subscribe】" class="headerlink" title="5.7.【$subscribe】"></a>5.7.【$subscribe】</h2><p>通过 store 的 <code>$subscribe()</code> 方法侦听 <code>state</code> 及其变化</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">talkStore.$subscribe(<span class="function">(<span class="params">mutate,state</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;LoveTalk&#x27;</span>,mutate,state)</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(talkList.<span class="property">value</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="5-8-【store组合式写法】"><a href="#5-8-【store组合式写法】" class="headerlink" title="5.8. 【store组合式写法】"></a>5.8. 【store组合式写法】</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;defineStore&#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;nanoid&#125; <span class="keyword">from</span> <span class="string">&#x27;nanoid&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useTalkStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;talk&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// talkList就是state</span></span><br><span class="line">  <span class="keyword">const</span> talkList = <span class="title function_">reactive</span>(</span><br><span class="line">    <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;talkList&#x27;</span>) <span class="keyword">as</span> <span class="built_in">string</span>) || []</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// getATalk函数相当于action</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getATalk</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 发请求，下面这行的写法是：连续解构赋值+重命名</span></span><br><span class="line">    <span class="keyword">let</span> &#123;<span class="attr">data</span>:&#123;<span class="attr">content</span>:title&#125;&#125; = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;https://api.uomg.com/api/rand.qinghua?format=json&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把请求回来的字符串，包装成一个对象</span></span><br><span class="line">    <span class="keyword">let</span> obj = &#123;<span class="attr">id</span>:<span class="title function_">nanoid</span>(),title&#125;</span><br><span class="line">    <span class="comment">// 放到数组中</span></span><br><span class="line">    talkList.<span class="title function_">unshift</span>(obj)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;talkList,getATalk&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="6-组件通信"><a href="#6-组件通信" class="headerlink" title="6. 组件通信"></a>6. 组件通信</h1><p><strong><code>Vue3</code>组件通信和<code>Vue2</code>的区别：</strong></p><ul><li>移出事件总线，使用<code>mitt</code>代替。</li></ul><ul><li><code>vuex</code>换成了<code>pinia</code>。</li><li>把<code>.sync</code>优化到了<code>v-model</code>里面了。</li><li>把<code>$listeners</code>所有的东西，合并到<code>$attrs</code>中了。</li><li><code>$children</code>被砍掉了。</li></ul><p><strong>常见搭配形式：</strong></p><img src="../../../../images/image-20231119185900990.png" alt="image-20231119185900990" style="zoom:60%;" /> <h2 id="6-1-【props】"><a href="#6-1-【props】" class="headerlink" title="6.1. 【props】"></a>6.1. 【props】</h2><p>概述：<code>props</code>是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p><ul><li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li><li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li></ul><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件，&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;儿子给的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;Child :car=&quot;car&quot; :getToy=&quot;getToy&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">const car = ref(&#x27;奔驰&#x27;)</span><br><span class="line">const toy = ref()</span><br><span class="line">// 方法</span><br><span class="line">function getToy(value:string)&#123;</span><br><span class="line">toy.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;父给我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;getToy(toy)&quot;&gt;玩具给父亲&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">const toy = ref(&#x27;奥特曼&#x27;)</span><br><span class="line"></span><br><span class="line">defineProps([&#x27;car&#x27;,&#x27;getToy&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-【自定义事件】"><a href="#6-2-【自定义事件】" class="headerlink" title="6.2. 【自定义事件】"></a>6.2. 【自定义事件】</h2><ol><li>概述：自定义事件常用于：<strong>子 &#x3D;&gt; 父。</strong></li><li>注意区分好：原生事件、自定义事件。</li></ol><ul><li>原生事件：<ul><li>事件名是特定的（<code>click</code>、<code>mosueenter</code>等等）    </li><li>事件对象<code>$event</code>: 是包含事件相关信息的对象（<code>pageX</code>、<code>pageY</code>、<code>target</code>、<code>keyCode</code>）</li></ul></li><li>自定义事件：<ul><li>事件名是任意名称</li><li><strong style="color:red">事件对象<code>$event</code>: 是调用<code>emit</code>时所提供的数据，可以是任意类型！！！</strong ></li><li>命名方式尽量不要驼峰式，而是采取keybab-case式，即<code>send-toy</code></li></ul></li></ul><ol start="3"><li><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在父组件中，给子组件绑定自定义事件：--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Child</span> @<span class="attr">send-toy</span>=<span class="string">&quot;saveToy&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注意区分原生事件与自定义事件中的$event--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;toy = $event&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件中，自定义事件被触发时所调用的函数：</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">saveToy</span>(<span class="params">value:string</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件中，声明事件并触发：</span></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;sent-toy&#x27;</span>])</span><br><span class="line"><span class="title function_">emit</span>(<span class="string">&#x27;send-toy&#x27;</span>, 具体数据)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-3-【mitt】"><a href="#6-3-【mitt】" class="headerlink" title="6.3. 【mitt】"></a>6.3. 【mitt】</h2><p>概述：与消息订阅与发布（<code>pubsub</code>）功能类似，可以实现任意组件间通信。</p><p>安装<code>mitt</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mitt</span><br></pre></td></tr></table></figure><p>新建文件：<code>src\utils\emitter.ts</code></p><ul><li>on触发事件</li><li>off        移除事件</li><li>all.clear移除全部事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入mitt </span></span><br><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&quot;mitt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建emitter</span></span><br><span class="line"><span class="keyword">const</span> emitter = <span class="title function_">mitt</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  // 绑定事件</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;abc&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;abc事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment">  emitter.on(&#x27;xyz&#x27;,(value)=&gt;&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;xyz事件被触发&#x27;,value)</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setInterval(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 触发事件</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;abc&#x27;,666)</span></span><br><span class="line"><span class="comment">    emitter.emit(&#x27;xyz&#x27;,777)</span></span><br><span class="line"><span class="comment">  &#125;, 1000);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="comment">    // 清理事件</span></span><br><span class="line"><span class="comment">    emitter.all.clear()</span></span><br><span class="line"><span class="comment">  &#125;, 3000); </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建并暴露mitt</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emitter</span><br></pre></td></tr></table></figure><p>接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;send-toy&#x27;</span>,<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send-toy事件被触发&#x27;</span>,value)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 解绑事件</span></span><br><span class="line">  emitter.<span class="title function_">off</span>(<span class="string">&#x27;send-toy&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>【第三步】：提供数据的组件，在合适的时候触发事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendToy</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 触发事件</span></span><br><span class="line">  emitter.<span class="title function_">emit</span>(<span class="string">&#x27;send-toy&#x27;</span>,toy.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意这个重要的内置关系，总线依赖着这个内置关系</strong></p><h2 id="6-4-【v-model】"><a href="#6-4-【v-model】" class="headerlink" title="6.4.【v-model】"></a>6.4.【v-model】</h2><ol><li><p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p></li><li><p>前序知识 —— <code>v-model</code>的本质</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用v-model指令 --&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;userName&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- v-model的本质是下面这行代码 --&gt;</span><br><span class="line">&lt;input </span><br><span class="line">  type=&quot;text&quot; </span><br><span class="line">  :value=&quot;userName&quot; </span><br><span class="line">  @input=&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><blockquote><ul><li>(<HTMLInputElement>$event.target)这个是ts的类型断言，target一定是html元素而不为空</li><li>数据到页面     <code>:value=&quot;userName&quot; </code></li><li>页面到数据    <code>@input=&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot; </code></li></ul></blockquote></li><li><p>组件标签上的<code>v-model</code>的本质：<code>:moldeValue</code> ＋ <code>update:modelValue</code>事件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 组件标签上使用v-model指令 --&gt;</span><br><span class="line">&lt;AtguiguInput v-model=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 组件标签上v-model的本质 --&gt;</span><br><span class="line">&lt;AtguiguInput :modelValue=&quot;userName&quot; @update:model-value=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在vue3中：</p><ul><li>数据到页面     <code>:modelValue=&quot;userName&quot; </code></li><li>页面到数据    <code>@update:model-value=&quot;userName = $event&quot; </code></li></ul></blockquote><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span><br><span class="line">&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;modelValue&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:model-value&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;modelValue&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:model-value&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>也可以更换<code>value</code>，例如改成<code>abc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 也可以更换value，例如改成abc--&gt;</span><br><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 上面代码的本质如下 --&gt;</span><br><span class="line">&lt;AtguiguInput :abc=&quot;userName&quot; @update:abc=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;abc&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:abc&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;abc&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:abc&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果<code>value</code>可以更换，那么就可以在组件标签上多次使用<code>v-model</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot; v-model:xyz=&quot;password&quot;/&gt;</span><br></pre></td></tr></table></figure></li><li><p>关于<code>$event</code>到底是什么？什么时候能够<code>.target</code>？</p><p>对于原生事件，<code>$event</code>就是事件对象&#x3D;&#x3D;&#x3D;&#x3D;&gt;能<code>.target</code></p><p>对于自定义事件，<code>$event</code>就是触发事件时，所传递的对象&#x3D;&#x3D;&#x3D;&#x3D;&gt;不能<code>.target</code></p></li></ol><h2 id="6-5-【-attrs-】"><a href="#6-5-【-attrs-】" class="headerlink" title="6.5.【$attrs 】"></a>6.5.【$attrs 】</h2><ol><li><p>概述：<code>$attrs</code>用于实现<strong>当前组件的父组件</strong>，向<strong>当前组件的子组件</strong>通信（<strong>祖→孙</strong>）。</p></li><li><p>具体说明：<code>$attrs</code>是一个对象，包含所有父组件传入的标签属性。</p><blockquote><p> 注意：<code>$attrs</code>会自动排除<code>props</code>中声明的属性(可以认为声明过的 <code>props</code> 被子组件自己“消费”了)</p></blockquote></li></ol><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">&lt;Child :a=&quot;a&quot; :b=&quot;b&quot; :c=&quot;c&quot; :d=&quot;d&quot; v-bind=&quot;&#123;x:100,y:200&#125;&quot; :updateA=&quot;updateA&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">let a = ref(1)</span><br><span class="line">let b = ref(2)</span><br><span class="line">let c = ref(3)</span><br><span class="line">let d = ref(4)</span><br><span class="line"></span><br><span class="line">function updateA(value)&#123;</span><br><span class="line">a.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;child&quot;&gt;</span><br><span class="line">&lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;GrandChild v-bind=&quot;$attrs&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import GrandChild from &#x27;./GrandChild.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>孙组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">&lt;h3&gt;孙组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;a：&#123;&#123; a &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;b：&#123;&#123; b &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;c：&#123;&#123; c &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;d：&#123;&#123; d &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;x：&#123;&#123; x &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;y：&#123;&#123; y &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;updateA(666)&quot;&gt;点我更新A&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">defineProps([&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;x&#x27;,&#x27;y&#x27;,&#x27;updateA&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="6-6-【-refs、-parent】"><a href="#6-6-【-refs、-parent】" class="headerlink" title="6.6. 【$refs、$parent】"></a>6.6. 【$refs、$parent】</h2><ol><li><p>概述：</p><ul><li><code>$refs</code>用于 ：<strong>父→子。</strong></li><li><code>$parent</code>用于：<strong>子→父。</strong></li></ul></li><li><p>原理如下：</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>$refs</code></td><td>值为对象，包含所有被<code>ref</code>属性标识的<code>DOM</code>元素或组件实例。</td></tr><tr><td><code>$parent</code></td><td>值为对象，当前组件的父组件实例对象。</td></tr></tbody></table></li><li><p>子组件需要将数据暴露出来，父组件才能被允许使用；同样的，父组件把需要子组件操作的数据暴露出来，子组件才能拿到使用。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 宏函数把数据交给外部</span></span><br><span class="line"><span class="title function_">defineExpose</span>(&#123; toy, book &#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-7-【provide、inject】"><a href="#6-7-【provide、inject】" class="headerlink" title="6.7. 【provide、inject】"></a>6.7. 【provide、inject】</h2><ol><li><p>概述：实现<strong>祖孙组件</strong>直接通信</p></li><li><p>具体使用：</p><ul><li>在祖先组件中通过<code>provide</code>配置向后代组件提供数据</li><li>在后代组件中通过<code>inject</code>配置来声明接收数据</li></ul></li><li><p>具体编码：</p><p>【第一步】父组件中，使用<code>provide</code>提供数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;button @click=&quot;money += 1&quot;&gt;资产+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;car.price += 1&quot;&gt;汽车价格+1&lt;/button&gt;</span><br><span class="line">    &lt;Child/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">  import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">  import &#123; ref,reactive,provide &#125; from &quot;vue&quot;;</span><br><span class="line">  // 数据</span><br><span class="line">  let money = ref(100)</span><br><span class="line">  let car = reactive(&#123;</span><br><span class="line">    brand:&#x27;奔驰&#x27;,</span><br><span class="line">    price:100</span><br><span class="line">  &#125;)</span><br><span class="line">  // 用于更新money的方法</span><br><span class="line">  function updateMoney(value:number)&#123;</span><br><span class="line">    money.value += value</span><br><span class="line">  &#125;</span><br><span class="line">  // 提供数据</span><br><span class="line">  provide(&#x27;moneyContext&#x27;,&#123;money,updateMoney&#125;)</span><br><span class="line">  provide(&#x27;car&#x27;,car)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意：子组件中不用编写任何东西，是不受到任何打扰的</p></blockquote><p>【第二步】孙组件中使用<code>inject</code>配置项接受数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;我是孙组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;button @click=&quot;updateMoney(6)&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">  import &#123; inject &#125; from &#x27;vue&#x27;;</span><br><span class="line">  // 注入数据</span><br><span class="line"> let &#123;money,updateMoney&#125; = inject(&#x27;moneyContext&#x27;,&#123;money:0,updateMoney:(x:number)=&gt;&#123;&#125;&#125;)</span><br><span class="line">  let car = inject(&#x27;car&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-8-【pinia】"><a href="#6-8-【pinia】" class="headerlink" title="6.8. 【pinia】"></a>6.8. 【pinia】</h2><p>参考之前<code>pinia</code>部分的讲解</p><h2 id="6-9-【slot】"><a href="#6-9-【slot】" class="headerlink" title="6.9. 【slot】"></a>6.9. 【slot】</h2><h3 id="1-默认插槽"><a href="#1-默认插槽" class="headerlink" title="1. 默认插槽"></a>1. 默认插槽</h3><p><img src="http://49.232.112.44/images/default_slot.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;!-- 默认插槽 --&gt;</span><br><span class="line">            &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="2-具名插槽"><a href="#2-具名插槽" class="headerlink" title="2. 具名插槽"></a>2. 具名插槽</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;template v-slot:s1&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">            </span><br><span class="line">          &lt;template #s2&gt;</span><br><span class="line">            &lt;a href=&quot;&quot;&gt;更多&lt;/a&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;slot name=&quot;s1&quot;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;slot name=&quot;s2&quot;&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="3-作用域插槽"><a href="#3-作用域插槽" class="headerlink" title="3. 作用域插槽"></a>3. 作用域插槽</h3><ol><li><p>理解：<span style="color:red">数据在组件的自身（子组件），但根据数据生成的结构需要组件的使用者（父组件）来决定。</span>（新闻数据在<code>News</code>组件中，但使用数据所遍历出来的结构由<code>App</code>组件决定）</p></li><li><p>具体编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">      &lt;Game v-slot=&quot;params&quot;&gt;</span><br><span class="line">      &lt;!-- &lt;Game v-slot:default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">      &lt;!-- &lt;Game #default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li v-for=&quot;g in params.games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/Game&gt;</span><br><span class="line"></span><br><span class="line">子组件中：</span><br><span class="line">      &lt;template&gt;</span><br><span class="line">        &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">          &lt;h2&gt;今日游戏榜单&lt;/h2&gt;</span><br><span class="line">          &lt;slot :games=&quot;games&quot; a=&quot;哈哈&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">      &lt;script setup lang=&quot;ts&quot; name=&quot;Category&quot;&gt;</span><br><span class="line">        import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">        let games = reactive([</span><br><span class="line">          &#123;id:&#x27;asgdytsa01&#x27;,name:&#x27;英雄联盟&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa02&#x27;,name:&#x27;王者荣耀&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa03&#x27;,name:&#x27;红色警戒&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa04&#x27;,name:&#x27;斗罗大陆&#x27;&#125;</span><br><span class="line">        ])</span><br><span class="line">      &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="7-其它-API"><a href="#7-其它-API" class="headerlink" title="7. 其它 API"></a>7. 其它 API</h1><h2 id="7-1-【shallowRef-与-shallowReactive-】"><a href="#7-1-【shallowRef-与-shallowReactive-】" class="headerlink" title="7.1.【shallowRef 与 shallowReactive 】"></a>7.1.【shallowRef 与 shallowReactive 】</h2><h3 id="shallowRef"><a href="#shallowRef" class="headerlink" title="shallowRef"></a><code>shallowRef</code></h3><ol><li><p>作用：创建一个响应式数据，但只对顶层属性进行响应式处理。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myVar = <span class="title function_">shallowRef</span>(initialValue);</span><br></pre></td></tr></table></figure></li><li><p>特点：只跟踪引用值的变化，不关心值内部的属性变化。</p></li></ol><h3 id="shallowReactive"><a href="#shallowReactive" class="headerlink" title="shallowReactive"></a><code>shallowReactive</code></h3><ol><li><p>作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myObj = <span class="title function_">shallowReactive</span>(&#123; ... &#125;);</span><br></pre></td></tr></table></figure></li><li><p>特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。</p></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>通过使用 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowref"><code>shallowRef()</code></a> 和 <a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive"><code>shallowReactive()</code></a> 来绕开深度响应。浅层式 <code>API</code> 创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。</p></blockquote><h2 id="7-2-【readonly-与-shallowReadonly】"><a href="#7-2-【readonly-与-shallowReadonly】" class="headerlink" title="7.2.【readonly 与 shallowReadonly】"></a>7.2.【readonly 与 shallowReadonly】</h2><h3 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a><strong><code>readonly</code></strong></h3><ol><li><p>作用：用于创建一个对象的深只读副本。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> readOnlyCopy = <span class="title function_">readonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li>对象的所有嵌套属性都将变为只读。</li><li>任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。</li></ul></li><li><p>应用场景：</p><ul><li>创建不可变的状态快照。</li><li>保护全局状态或配置不被修改。</li></ul></li></ol><h3 id="shallowReadonly"><a href="#shallowReadonly" class="headerlink" title="shallowReadonly"></a><strong><code>shallowReadonly</code></strong></h3><ol><li><p>作用：与 <code>readonly</code> 类似，但只作用于对象的顶层属性。</p></li><li><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> original = <span class="title function_">reactive</span>(&#123; ... &#125;);</span><br><span class="line"><span class="keyword">const</span> shallowReadOnlyCopy = <span class="title function_">shallowReadonly</span>(original);</span><br></pre></td></tr></table></figure></li><li><p>特点：</p><ul><li><p>只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。</p></li><li><p>适用于只需保护对象顶层属性的场景。</p></li></ul></li></ol><h2 id="7-3-【toRaw-与-markRaw】"><a href="#7-3-【toRaw-与-markRaw】" class="headerlink" title="7.3.【toRaw 与 markRaw】"></a>7.3.【toRaw 与 markRaw】</h2><h3 id="toRaw"><a href="#toRaw" class="headerlink" title="toRaw"></a><code>toRaw</code></h3><ol><li><p>作用：用于获取一个响应式对象的原始对象， <code>toRaw</code> 返回的对象不再是响应式的，不会触发视图更新。</p><blockquote><p>官网描述：这是一个可以用于临时读取而不引起代理访问&#x2F;跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。</p></blockquote><blockquote><p>何时使用？ —— 在需要将响应式对象传递给非 <code>Vue</code> 的库或外部系统时，使用 <code>toRaw</code> 可以确保它们收到的是普通对象</p></blockquote></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive,toRaw,markRaw,isReactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* toRaw */</span></span><br><span class="line"><span class="comment">// 响应式对象</span></span><br><span class="line"><span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;tony&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;)</span><br><span class="line"><span class="comment">// 原始对象</span></span><br><span class="line"><span class="keyword">let</span> rawPerson = <span class="title function_">toRaw</span>(person)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citysd = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(person))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(rawPerson))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isReactive</span>(citys2))</span><br></pre></td></tr></table></figure></li></ol><h3 id="markRaw"><a href="#markRaw" class="headerlink" title="markRaw"></a><code>markRaw</code></h3><ol><li><p>作用：标记一个对象，使其<strong>永远不会</strong>变成响应式的。</p><blockquote><p>例如使用<code>mockjs</code>时，为了防止误把<code>mockjs</code>变为响应式对象，可以使用 <code>markRaw</code> 去标记<code>mockjs</code></p></blockquote></li><li><p>编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* markRaw */</span></span><br><span class="line"><span class="keyword">let</span> citys = <span class="title function_">markRaw</span>([</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda01&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;北京&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda02&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;上海&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda03&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;天津&#x27;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">id</span>:<span class="string">&#x27;asdda04&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;重庆&#x27;</span>&#125;</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了</span></span><br><span class="line"><span class="keyword">let</span> citys2 = <span class="title function_">reactive</span>(citys)</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-4-【customRef】"><a href="#7-4-【customRef】" class="headerlink" title="7.4.【customRef】"></a>7.4.【customRef】</h2><p>作用：创建一个自定义的<code>ref</code>，并对其依赖项跟踪和更新触发进行逻辑控制。</p><p>实现防抖效果（<code>useSumRef.ts</code>）封装在hooks里面：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;customRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span>(<span class="params"><span class="attr">initValue</span>:<span class="built_in">string</span>,<span class="attr">delay</span>:<span class="built_in">number</span></span>)&#123;</span><br><span class="line">  <span class="comment">//track（跟踪），trigger（触发）</span></span><br><span class="line">  <span class="keyword">let</span> msg = <span class="title function_">customRef</span>(<span class="function">(<span class="params">track,trigger</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">timer</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">//get何时调用？——msg被读取时候</span></span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">track</span>() <span class="comment">// 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新</span></span><br><span class="line">        <span class="keyword">return</span> initValue</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//set何时调用？——msg被修改时候</span></span><br><span class="line">      <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          initValue = value</span><br><span class="line">          <span class="title function_">trigger</span>() <span class="comment">//通知Vue数据msg变化了</span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;) </span><br><span class="line">  <span class="keyword">return</span> &#123;msg&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件中使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;app&quot;&gt;</span><br><span class="line">&lt;h2&gt;&#123;&#123; msg &#125;&#125;&lt;/h2&gt;</span><br><span class="line">&lt;input</span><br><span class="line">type=&quot;text&quot;</span><br><span class="line">v-model=&quot;msg&quot;</span><br><span class="line">&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;App&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import useMsgRef from &#x27;./useMsgRef&#x27;</span><br><span class="line"></span><br><span class="line">// 使用Vue提供的默认ref定义响应式数据，数据一变，页面就更新</span><br><span class="line">// let msg = ref(&#x27;你好&#x27;)</span><br><span class="line"></span><br><span class="line">// 使用useMsgRef来定义一个响应式数据且有延迟效果</span><br><span class="line">let &#123; msg &#125; = useMsgRef(&#x27;你好&#x27;, 2000)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="8-Vue3新组件"><a href="#8-Vue3新组件" class="headerlink" title="8. Vue3新组件"></a>8. Vue3新组件</h1><h2 id="8-1-【Teleport】"><a href="#8-1-【Teleport】" class="headerlink" title="8.1. 【Teleport】"></a>8.1. 【Teleport】</h2><ul><li>什么是Teleport？—— Teleport 是一种能够将我们的<strong>组件html结构</strong>移动到指定位置的技术。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">teleport</span> <span class="attr">to</span>=<span class="string">&#x27;body&#x27;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是一个弹窗<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是弹窗中的一些内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShow = false&quot;</span>&gt;</span>关闭弹窗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">teleport</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-2-【Suspense】"><a href="#8-2-【Suspense】" class="headerlink" title="8.2. 【Suspense】"></a>8.2. 【Suspense】</h2><ul><li>等待异步组件时渲染一些额外内容，让应用有更好的用户体验 </li><li>使用步骤： <ul><li>异步引入组件</li><li>使用<code>Suspense</code>包裹组件，并配置好<code>default</code> 与 <code>fallback</code></li></ul></li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineAsyncComponent,<span class="title class_">Suspense</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Child</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">()=&gt;</span><span class="keyword">import</span>(<span class="string">&#x27;./Child.vue&#x27;</span>))</span><br></pre></td></tr></table></figure><p><code>&lt;Child/&gt;</code>是一个包含了异步请求的子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h2&gt;我是Child组件&lt;/h2&gt;</span><br><span class="line">    &lt;h3&gt;当前求和为：&#123;&#123; sum &#125;&#125;&lt;/h3&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import axios from &#x27;axios&#x27;</span><br><span class="line"></span><br><span class="line">let sum = ref(0)</span><br><span class="line">let &#123; data: &#123; content &#125; &#125; = await axios.get(&#x27;https://api.uomg.com/api/rand.qinghua?format=json&#x27;)</span><br><span class="line">console.log(content)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">        &lt;h3&gt;我是App组件&lt;/h3&gt;</span><br><span class="line">        &lt;Suspense&gt;</span><br><span class="line">          &lt;template v-slot:default&gt;</span><br><span class="line">            &lt;Child/&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template v-slot:fallback&gt;</span><br><span class="line">            &lt;h3&gt;加载中.......&lt;/h3&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/Suspense&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="8-3-【全局API转移到应用对象】"><a href="#8-3-【全局API转移到应用对象】" class="headerlink" title="8.3.【全局API转移到应用对象】"></a>8.3.【全局API转移到应用对象】</h2><ul><li><code>app.component</code>注册全局组件</li><li><code>app.config</code>     配置对象</li><li><code>app.directive</code>     注册全局指令</li><li><code>app.mount</code></li><li><code>app.unmount</code></li><li><code>app.use</code></li></ul><h2 id="8-4-【其他】"><a href="#8-4-【其他】" class="headerlink" title="8.4.【其他】"></a>8.4.【其他】</h2><ul><li><p>过渡类名 <code>v-enter</code> 修改为 <code>v-enter-from</code>、过渡类名 <code>v-leave</code> 修改为 <code>v-leave-from</code>。</p></li><li><p><code>keyCode</code> 作为 <code>v-on</code> 修饰符的支持。</p></li><li><p><code>v-model</code> 指令在组件上的使用已经被重新设计，替换掉了 <code>v-bind.sync。</code></p></li><li><p><code>v-if</code> 和 <code>v-for</code> 在同一个元素身上使用时的优先级发生了变化。</p></li><li><p>移除了<code>$on</code>、<code>$off</code> 和 <code>$once</code> 实例方法。</p></li><li><p>移除了过滤器 <code>filter</code>。</p></li><li><p>移除了<code>$children</code> 实例 <code>propert</code>。</p><p>……</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
            <tag> 前端开发 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDF帖子测试</title>
      <link href="/2025/03/06/typescriptlearning/"/>
      <url>/2025/03/06/typescriptlearning/</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="/src/typescript.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
            <tag> PDF </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
